<?php
/**
 * Item
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * Item Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Item implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'item';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'account_code_id' => 'int',
        'low_stock_contact_id' => 'int',
        'legacy_low_level_contact_id' => 'int',
        'low_stock_code_id' => 'int',
        'major_group_id' => 'int',
        'sub_group_id' => 'int',
        'product_code_id' => 'int',
        'summary_code_id' => 'int',
        'buyer_id' => 'int',
        'lob_id' => 'int',
        'sku' => 'string',
        'vendor_sku' => 'string',
        'upc' => 'string',
        'item_description' => 'string',
        'packing_slip_description' => 'string',
        'absolute_max' => 'string',
        'additional_description' => 'string',
        'backorder' => 'string',
        'charge_code' => 'string',
        'commodity_code_id' => 'int',
        'companion_code' => 'int',
        'create_date' => '\DateTime',
        'critical_amount' => 'int',
        'overall_fixed_reorder_point' => 'int',
        'overall_lead_time' => 'int',
        'sell_price' => 'float',
        'pricing_per' => 'string',
        'lot_control_flag' => 'string',
        'max_cycle' => 'int',
        'max_interim' => 'int',
        'numeric_sort_order' => 'int',
        'outside_vendor_id' => 'int',
        'pick_code' => 'string',
        'pod_order_suffix' => 'int',
        'pod_rev_date' => 'string',
        'status' => 'string',
        'seasonal_item' => 'string',
        'requires_production_lot' => 'string',
        'sector' => 'string',
        'secure' => 'string',
        'serial_code' => 'string',
        'unit_code' => 'string',
        'units_per_wrap' => 'int',
        'weight_per_wrap' => 'float',
        'quantity_per_inner_pack' => 'int',
        'quantity_per_case' => 'int',
        'quantity_per_pallet' => 'int',
        'inner_pack_barcode' => 'string',
        'case_barcode' => 'string',
        'pallet_barcode' => 'string',
        'void_date' => '\DateTime',
        'wrap_code' => 'string',
        'extrinsic_text1' => 'string',
        'extrinsic_text2' => 'string',
        'extrinsic_text3' => 'string',
        'extrinsic_number1' => 'int',
        'extrinsic_number2' => 'int',
        'extrinsic_decimal1' => 'float',
        'extrinsic_decimal2' => 'float',
        'casebreak_enabled' => 'string',
        'vendor_id' => 'int',
        'vendor_price' => 'float',
        'vendor_per' => 'string',
        'modify_date' => '\DateTime',
        'primary_image' => 'string',
        'pick_image' => 'string',
        'behavior_type' => 'string',
        'assembly_instructions' => 'string',
        'forward_lot_mixing_rule' => 'string',
        'storage_lot_mixing_rule' => 'string',
        'forward_item_mixing_rule' => 'string',
        'storage_item_mixing_rule' => 'string',
        'allocation_rule' => 'string',
        'allocation_sort' => 'string',
        'allocation_field' => 'string',
        'barcode_field' => 'string',
        'warehouse_display_field' => 'string',
        'product_id_tag_scheme_id' => 'int',
        'item_serial_scheme_id' => 'int',
        'receiving_criteria_scheme_id' => 'int',
        'asn_rule' => 'string',
        'quantity_type' => 'string',
        'hazmat' => 'string',
        'is_alcohol' => 'bool',
        'alcohol_type' => 'string',
        'alcohol_content' => 'float',
        'alcohol_container' => 'string',
        'alcohol_vintage_year' => 'string',
        'alcohol_country' => 'string',
        'alcohol_state' => 'string',
        'alcohol_region' => 'string',
        'alcohol_brand' => 'string',
        'alcohol_upc_code' => 'string',
        'alcohol_nambca_code' => 'string',
        'alcohol_unimerc_code' => 'string',
        'alcohol_scc_code' => 'string',
        'length' => 'float',
        'width' => 'float',
        'height' => 'float',
        'top_up' => 'bool',
        'ship_solo' => 'bool',
        'inventory_update_timestamp' => '\DateTime',
        'available_quantity' => 'int',
        'damaged_quantity' => 'int',
        'in_fulfillment_process_quantity' => 'int',
        'on_hand_quantity' => 'int',
        'open_order_quantity' => 'int',
        'open_po_quantity' => 'int',
        'orderable_quantity' => 'int',
        'unallocatable_quantity' => 'int',
        'unavailable_quantity' => 'int',
        'total_demand' => 'int',
        'available_quantity_inner_packs' => 'int',
        'damaged_quantity_inner_packs' => 'int',
        'in_fulfillment_process_quantity_inner_packs' => 'int',
        'on_hand_quantity_inner_packs' => 'int',
        'open_order_quantity_inner_packs' => 'int',
        'open_po_quantity_inner_packs' => 'int',
        'orderable_quantity_inner_packs' => 'int',
        'unallocatable_quantity_inner_packs' => 'int',
        'unavailable_quantity_inner_packs' => 'int',
        'available_quantity_cases' => 'int',
        'damaged_quantity_cases' => 'int',
        'in_fulfillment_process_quantity_cases' => 'int',
        'on_hand_quantity_cases' => 'int',
        'open_order_quantity_cases' => 'int',
        'open_po_quantity_cases' => 'int',
        'orderable_quantity_cases' => 'int',
        'unallocatable_quantity_cases' => 'int',
        'unavailable_quantity_cases' => 'int',
        'available_quantity_pallets' => 'int',
        'damaged_quantity_pallets' => 'int',
        'in_fulfillment_process_quantity_pallets' => 'int',
        'on_hand_quantity_pallets' => 'int',
        'open_order_quantity_pallets' => 'int',
        'open_po_quantity_pallets' => 'int',
        'orderable_quantity_pallets' => 'int',
        'unallocatable_quantity_pallets' => 'int',
        'unavailable_quantity_pallets' => 'int',
        'overall_days_on_hand' => 'int',
        'overall_stock_status' => 'string',
        'estimated_pallets' => 'int',
        'estimated_cases' => 'int',
        'estimated_inner_packs' => 'int',
        'next_requested_delivery_date' => '\DateTime',
        'warehouse1_id' => 'int',
        'w1_available_quantity' => 'int',
        'w1_damaged_quantity' => 'int',
        'w1_in_fulfillment_process_quantity' => 'int',
        'w1_on_hand_quantity' => 'int',
        'w1_open_order_quantity' => 'int',
        'w1_open_po_quantity' => 'int',
        'w1_orderable_quantity' => 'int',
        'w1_unallocatable_quantity' => 'int',
        'w1_unavailable_quantity' => 'int',
        'w1_days_on_hand' => 'int',
        'w1_stock_status' => 'string',
        'w1_estimated_pallets' => 'int',
        'w1_estimated_cases' => 'int',
        'w1_estimated_inner_packs' => 'int',
        'w1_next_requested_delivery_date' => '\DateTime',
        'warehouse2_id' => 'int',
        'w2_available_quantity' => 'int',
        'w2_damaged_quantity' => 'int',
        'w2_in_fulfillment_process_quantity' => 'int',
        'w2_on_hand_quantity' => 'int',
        'w2_open_order_quantity' => 'int',
        'w2_open_po_quantity' => 'int',
        'w2_orderable_quantity' => 'int',
        'w2_unallocatable_quantity' => 'int',
        'w2_unavailable_quantity' => 'int',
        'w2_days_on_hand' => 'int',
        'w2_stock_status' => 'string',
        'w2_estimated_pallets' => 'int',
        'w2_estimated_cases' => 'int',
        'w2_estimated_inner_packs' => 'int',
        'w2_next_requested_delivery_date' => '\DateTime',
        'warehouse3_id' => 'int',
        'w3_available_quantity' => 'int',
        'w3_damaged_quantity' => 'int',
        'w3_in_fulfillment_process_quantity' => 'int',
        'w3_on_hand_quantity' => 'int',
        'w3_open_order_quantity' => 'int',
        'w3_open_po_quantity' => 'int',
        'w3_orderable_quantity' => 'int',
        'w3_unallocatable_quantity' => 'int',
        'w3_unavailable_quantity' => 'int',
        'w3_days_on_hand' => 'int',
        'w3_stock_status' => 'string',
        'w3_estimated_pallets' => 'int',
        'w3_estimated_cases' => 'int',
        'w3_estimated_inner_packs' => 'int',
        'w3_next_requested_delivery_date' => '\DateTime',
        'warehouse4_id' => 'int',
        'w4_available_quantity' => 'int',
        'w4_damaged_quantity' => 'int',
        'w4_in_fulfillment_process_quantity' => 'int',
        'w4_on_hand_quantity' => 'int',
        'w4_open_order_quantity' => 'int',
        'w4_open_po_quantity' => 'int',
        'w4_orderable_quantity' => 'int',
        'w4_unallocatable_quantity' => 'int',
        'w4_unavailable_quantity' => 'int',
        'w4_days_on_hand' => 'int',
        'w4_stock_status' => 'string',
        'w4_estimated_pallets' => 'int',
        'w4_estimated_cases' => 'int',
        'w4_estimated_inner_packs' => 'int',
        'w4_next_requested_delivery_date' => '\DateTime',
        'warehouse5_id' => 'int',
        'w5_available_quantity' => 'int',
        'w5_damaged_quantity' => 'int',
        'w5_in_fulfillment_process_quantity' => 'int',
        'w5_on_hand_quantity' => 'int',
        'w5_open_order_quantity' => 'int',
        'w5_open_po_quantity' => 'int',
        'w5_orderable_quantity' => 'int',
        'w5_unallocatable_quantity' => 'int',
        'w5_unavailable_quantity' => 'int',
        'w5_days_on_hand' => 'int',
        'w5_stock_status' => 'string',
        'w5_estimated_pallets' => 'int',
        'w5_estimated_cases' => 'int',
        'w5_estimated_inner_packs' => 'int',
        'w5_next_requested_delivery_date' => '\DateTime',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'account_code_id' => 'int32',
        'low_stock_contact_id' => 'int32',
        'legacy_low_level_contact_id' => 'int32',
        'low_stock_code_id' => 'int32',
        'major_group_id' => 'int32',
        'sub_group_id' => 'int32',
        'product_code_id' => 'int32',
        'summary_code_id' => 'int32',
        'buyer_id' => 'int32',
        'lob_id' => 'int32',
        'sku' => null,
        'vendor_sku' => null,
        'upc' => null,
        'item_description' => null,
        'packing_slip_description' => null,
        'absolute_max' => null,
        'additional_description' => null,
        'backorder' => null,
        'charge_code' => null,
        'commodity_code_id' => 'int32',
        'companion_code' => 'int32',
        'create_date' => 'date-time',
        'critical_amount' => 'int32',
        'overall_fixed_reorder_point' => 'int32',
        'overall_lead_time' => 'int32',
        'sell_price' => null,
        'pricing_per' => null,
        'lot_control_flag' => null,
        'max_cycle' => 'int32',
        'max_interim' => 'int32',
        'numeric_sort_order' => 'int32',
        'outside_vendor_id' => 'int32',
        'pick_code' => null,
        'pod_order_suffix' => 'int32',
        'pod_rev_date' => null,
        'status' => null,
        'seasonal_item' => null,
        'requires_production_lot' => null,
        'sector' => null,
        'secure' => null,
        'serial_code' => null,
        'unit_code' => null,
        'units_per_wrap' => 'int32',
        'weight_per_wrap' => null,
        'quantity_per_inner_pack' => 'int32',
        'quantity_per_case' => 'int32',
        'quantity_per_pallet' => 'int32',
        'inner_pack_barcode' => null,
        'case_barcode' => null,
        'pallet_barcode' => null,
        'void_date' => 'date-time',
        'wrap_code' => null,
        'extrinsic_text1' => null,
        'extrinsic_text2' => null,
        'extrinsic_text3' => null,
        'extrinsic_number1' => 'int32',
        'extrinsic_number2' => 'int32',
        'extrinsic_decimal1' => null,
        'extrinsic_decimal2' => null,
        'casebreak_enabled' => null,
        'vendor_id' => 'int32',
        'vendor_price' => null,
        'vendor_per' => null,
        'modify_date' => 'date-time',
        'primary_image' => null,
        'pick_image' => null,
        'behavior_type' => null,
        'assembly_instructions' => null,
        'forward_lot_mixing_rule' => null,
        'storage_lot_mixing_rule' => null,
        'forward_item_mixing_rule' => null,
        'storage_item_mixing_rule' => null,
        'allocation_rule' => null,
        'allocation_sort' => null,
        'allocation_field' => null,
        'barcode_field' => null,
        'warehouse_display_field' => null,
        'product_id_tag_scheme_id' => 'int32',
        'item_serial_scheme_id' => 'int32',
        'receiving_criteria_scheme_id' => 'int32',
        'asn_rule' => null,
        'quantity_type' => null,
        'hazmat' => null,
        'is_alcohol' => null,
        'alcohol_type' => null,
        'alcohol_content' => null,
        'alcohol_container' => null,
        'alcohol_vintage_year' => null,
        'alcohol_country' => null,
        'alcohol_state' => null,
        'alcohol_region' => null,
        'alcohol_brand' => null,
        'alcohol_upc_code' => null,
        'alcohol_nambca_code' => null,
        'alcohol_unimerc_code' => null,
        'alcohol_scc_code' => null,
        'length' => null,
        'width' => null,
        'height' => null,
        'top_up' => null,
        'ship_solo' => null,
        'inventory_update_timestamp' => 'date-time',
        'available_quantity' => 'int32',
        'damaged_quantity' => 'int32',
        'in_fulfillment_process_quantity' => 'int32',
        'on_hand_quantity' => 'int32',
        'open_order_quantity' => 'int32',
        'open_po_quantity' => 'int32',
        'orderable_quantity' => 'int32',
        'unallocatable_quantity' => 'int32',
        'unavailable_quantity' => 'int32',
        'total_demand' => 'int32',
        'available_quantity_inner_packs' => 'int32',
        'damaged_quantity_inner_packs' => 'int32',
        'in_fulfillment_process_quantity_inner_packs' => 'int32',
        'on_hand_quantity_inner_packs' => 'int32',
        'open_order_quantity_inner_packs' => 'int32',
        'open_po_quantity_inner_packs' => 'int32',
        'orderable_quantity_inner_packs' => 'int32',
        'unallocatable_quantity_inner_packs' => 'int32',
        'unavailable_quantity_inner_packs' => 'int32',
        'available_quantity_cases' => 'int32',
        'damaged_quantity_cases' => 'int32',
        'in_fulfillment_process_quantity_cases' => 'int32',
        'on_hand_quantity_cases' => 'int32',
        'open_order_quantity_cases' => 'int32',
        'open_po_quantity_cases' => 'int32',
        'orderable_quantity_cases' => 'int32',
        'unallocatable_quantity_cases' => 'int32',
        'unavailable_quantity_cases' => 'int32',
        'available_quantity_pallets' => 'int32',
        'damaged_quantity_pallets' => 'int32',
        'in_fulfillment_process_quantity_pallets' => 'int32',
        'on_hand_quantity_pallets' => 'int32',
        'open_order_quantity_pallets' => 'int32',
        'open_po_quantity_pallets' => 'int32',
        'orderable_quantity_pallets' => 'int32',
        'unallocatable_quantity_pallets' => 'int32',
        'unavailable_quantity_pallets' => 'int32',
        'overall_days_on_hand' => 'int32',
        'overall_stock_status' => null,
        'estimated_pallets' => 'int32',
        'estimated_cases' => 'int32',
        'estimated_inner_packs' => 'int32',
        'next_requested_delivery_date' => 'date-time',
        'warehouse1_id' => 'int32',
        'w1_available_quantity' => 'int32',
        'w1_damaged_quantity' => 'int32',
        'w1_in_fulfillment_process_quantity' => 'int32',
        'w1_on_hand_quantity' => 'int32',
        'w1_open_order_quantity' => 'int32',
        'w1_open_po_quantity' => 'int32',
        'w1_orderable_quantity' => 'int32',
        'w1_unallocatable_quantity' => 'int32',
        'w1_unavailable_quantity' => 'int32',
        'w1_days_on_hand' => 'int32',
        'w1_stock_status' => null,
        'w1_estimated_pallets' => 'int32',
        'w1_estimated_cases' => 'int32',
        'w1_estimated_inner_packs' => 'int32',
        'w1_next_requested_delivery_date' => 'date-time',
        'warehouse2_id' => 'int32',
        'w2_available_quantity' => 'int32',
        'w2_damaged_quantity' => 'int32',
        'w2_in_fulfillment_process_quantity' => 'int32',
        'w2_on_hand_quantity' => 'int32',
        'w2_open_order_quantity' => 'int32',
        'w2_open_po_quantity' => 'int32',
        'w2_orderable_quantity' => 'int32',
        'w2_unallocatable_quantity' => 'int32',
        'w2_unavailable_quantity' => 'int32',
        'w2_days_on_hand' => 'int32',
        'w2_stock_status' => null,
        'w2_estimated_pallets' => 'int32',
        'w2_estimated_cases' => 'int32',
        'w2_estimated_inner_packs' => 'int32',
        'w2_next_requested_delivery_date' => 'date-time',
        'warehouse3_id' => 'int32',
        'w3_available_quantity' => 'int32',
        'w3_damaged_quantity' => 'int32',
        'w3_in_fulfillment_process_quantity' => 'int32',
        'w3_on_hand_quantity' => 'int32',
        'w3_open_order_quantity' => 'int32',
        'w3_open_po_quantity' => 'int32',
        'w3_orderable_quantity' => 'int32',
        'w3_unallocatable_quantity' => 'int32',
        'w3_unavailable_quantity' => 'int32',
        'w3_days_on_hand' => 'int32',
        'w3_stock_status' => null,
        'w3_estimated_pallets' => 'int32',
        'w3_estimated_cases' => 'int32',
        'w3_estimated_inner_packs' => 'int32',
        'w3_next_requested_delivery_date' => 'date-time',
        'warehouse4_id' => 'int32',
        'w4_available_quantity' => 'int32',
        'w4_damaged_quantity' => 'int32',
        'w4_in_fulfillment_process_quantity' => 'int32',
        'w4_on_hand_quantity' => 'int32',
        'w4_open_order_quantity' => 'int32',
        'w4_open_po_quantity' => 'int32',
        'w4_orderable_quantity' => 'int32',
        'w4_unallocatable_quantity' => 'int32',
        'w4_unavailable_quantity' => 'int32',
        'w4_days_on_hand' => 'int32',
        'w4_stock_status' => null,
        'w4_estimated_pallets' => 'int32',
        'w4_estimated_cases' => 'int32',
        'w4_estimated_inner_packs' => 'int32',
        'w4_next_requested_delivery_date' => 'date-time',
        'warehouse5_id' => 'int32',
        'w5_available_quantity' => 'int32',
        'w5_damaged_quantity' => 'int32',
        'w5_in_fulfillment_process_quantity' => 'int32',
        'w5_on_hand_quantity' => 'int32',
        'w5_open_order_quantity' => 'int32',
        'w5_open_po_quantity' => 'int32',
        'w5_orderable_quantity' => 'int32',
        'w5_unallocatable_quantity' => 'int32',
        'w5_unavailable_quantity' => 'int32',
        'w5_days_on_hand' => 'int32',
        'w5_stock_status' => null,
        'w5_estimated_pallets' => 'int32',
        'w5_estimated_cases' => 'int32',
        'w5_estimated_inner_packs' => 'int32',
        'w5_next_requested_delivery_date' => 'date-time',
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'account_code_id' => 'accountCodeId',
        'low_stock_contact_id' => 'lowStockContactId',
        'legacy_low_level_contact_id' => 'legacyLowLevelContactId',
        'low_stock_code_id' => 'lowStockCodeId',
        'major_group_id' => 'majorGroupId',
        'sub_group_id' => 'subGroupId',
        'product_code_id' => 'productCodeId',
        'summary_code_id' => 'summaryCodeId',
        'buyer_id' => 'buyerId',
        'lob_id' => 'lobId',
        'sku' => 'sku',
        'vendor_sku' => 'vendorSKU',
        'upc' => 'upc',
        'item_description' => 'itemDescription',
        'packing_slip_description' => 'packingSlipDescription',
        'absolute_max' => 'absoluteMax',
        'additional_description' => 'additionalDescription',
        'backorder' => 'backorder',
        'charge_code' => 'chargeCode',
        'commodity_code_id' => 'commodityCodeId',
        'companion_code' => 'companionCode',
        'create_date' => 'createDate',
        'critical_amount' => 'criticalAmount',
        'overall_fixed_reorder_point' => 'overallFixedReorderPoint',
        'overall_lead_time' => 'overallLeadTime',
        'sell_price' => 'sellPrice',
        'pricing_per' => 'pricingPer',
        'lot_control_flag' => 'lotControlFlag',
        'max_cycle' => 'maxCycle',
        'max_interim' => 'maxInterim',
        'numeric_sort_order' => 'numericSortOrder',
        'outside_vendor_id' => 'outsideVendorId',
        'pick_code' => 'pickCode',
        'pod_order_suffix' => 'podOrderSuffix',
        'pod_rev_date' => 'podRevDate',
        'status' => 'status',
        'seasonal_item' => 'seasonalItem',
        'requires_production_lot' => 'requiresProductionLot',
        'sector' => 'sector',
        'secure' => 'secure',
        'serial_code' => 'serialCode',
        'unit_code' => 'unitCode',
        'units_per_wrap' => 'unitsPerWrap',
        'weight_per_wrap' => 'weightPerWrap',
        'quantity_per_inner_pack' => 'quantityPerInnerPack',
        'quantity_per_case' => 'quantityPerCase',
        'quantity_per_pallet' => 'quantityPerPallet',
        'inner_pack_barcode' => 'innerPackBarcode',
        'case_barcode' => 'caseBarcode',
        'pallet_barcode' => 'palletBarcode',
        'void_date' => 'voidDate',
        'wrap_code' => 'wrapCode',
        'extrinsic_text1' => 'extrinsicText1',
        'extrinsic_text2' => 'extrinsicText2',
        'extrinsic_text3' => 'extrinsicText3',
        'extrinsic_number1' => 'extrinsicNumber1',
        'extrinsic_number2' => 'extrinsicNumber2',
        'extrinsic_decimal1' => 'extrinsicDecimal1',
        'extrinsic_decimal2' => 'extrinsicDecimal2',
        'casebreak_enabled' => 'casebreakEnabled',
        'vendor_id' => 'vendorId',
        'vendor_price' => 'vendorPrice',
        'vendor_per' => 'vendorPer',
        'modify_date' => 'modifyDate',
        'primary_image' => 'primaryImage',
        'pick_image' => 'pickImage',
        'behavior_type' => 'behaviorType',
        'assembly_instructions' => 'assemblyInstructions',
        'forward_lot_mixing_rule' => 'forwardLotMixingRule',
        'storage_lot_mixing_rule' => 'storageLotMixingRule',
        'forward_item_mixing_rule' => 'forwardItemMixingRule',
        'storage_item_mixing_rule' => 'storageItemMixingRule',
        'allocation_rule' => 'allocationRule',
        'allocation_sort' => 'allocationSort',
        'allocation_field' => 'allocationField',
        'barcode_field' => 'barcodeField',
        'warehouse_display_field' => 'warehouseDisplayField',
        'product_id_tag_scheme_id' => 'productIdTagSchemeId',
        'item_serial_scheme_id' => 'itemSerialSchemeId',
        'receiving_criteria_scheme_id' => 'receivingCriteriaSchemeId',
        'asn_rule' => 'asnRule',
        'quantity_type' => 'quantityType',
        'hazmat' => 'hazmat',
        'is_alcohol' => 'isAlcohol',
        'alcohol_type' => 'alcoholType',
        'alcohol_content' => 'alcoholContent',
        'alcohol_container' => 'alcoholContainer',
        'alcohol_vintage_year' => 'alcoholVintageYear',
        'alcohol_country' => 'alcoholCountry',
        'alcohol_state' => 'alcoholState',
        'alcohol_region' => 'alcoholRegion',
        'alcohol_brand' => 'alcoholBrand',
        'alcohol_upc_code' => 'alcoholUPCCode',
        'alcohol_nambca_code' => 'alcoholNAMBCACode',
        'alcohol_unimerc_code' => 'alcoholUNIMERCCode',
        'alcohol_scc_code' => 'alcoholSCCCode',
        'length' => 'length',
        'width' => 'width',
        'height' => 'height',
        'top_up' => 'topUp',
        'ship_solo' => 'shipSolo',
        'inventory_update_timestamp' => 'inventoryUpdateTimestamp',
        'available_quantity' => 'availableQuantity',
        'damaged_quantity' => 'damagedQuantity',
        'in_fulfillment_process_quantity' => 'inFulfillmentProcessQuantity',
        'on_hand_quantity' => 'onHandQuantity',
        'open_order_quantity' => 'openOrderQuantity',
        'open_po_quantity' => 'openPOQuantity',
        'orderable_quantity' => 'orderableQuantity',
        'unallocatable_quantity' => 'unallocatableQuantity',
        'unavailable_quantity' => 'unavailableQuantity',
        'total_demand' => 'totalDemand',
        'available_quantity_inner_packs' => 'availableQuantityInnerPacks',
        'damaged_quantity_inner_packs' => 'damagedQuantityInnerPacks',
        'in_fulfillment_process_quantity_inner_packs' => 'inFulfillmentProcessQuantityInnerPacks',
        'on_hand_quantity_inner_packs' => 'onHandQuantityInnerPacks',
        'open_order_quantity_inner_packs' => 'openOrderQuantityInnerPacks',
        'open_po_quantity_inner_packs' => 'openPOQuantityInnerPacks',
        'orderable_quantity_inner_packs' => 'orderableQuantityInnerPacks',
        'unallocatable_quantity_inner_packs' => 'unallocatableQuantityInnerPacks',
        'unavailable_quantity_inner_packs' => 'unavailableQuantityInnerPacks',
        'available_quantity_cases' => 'availableQuantityCases',
        'damaged_quantity_cases' => 'damagedQuantityCases',
        'in_fulfillment_process_quantity_cases' => 'inFulfillmentProcessQuantityCases',
        'on_hand_quantity_cases' => 'onHandQuantityCases',
        'open_order_quantity_cases' => 'openOrderQuantityCases',
        'open_po_quantity_cases' => 'openPOQuantityCases',
        'orderable_quantity_cases' => 'orderableQuantityCases',
        'unallocatable_quantity_cases' => 'unallocatableQuantityCases',
        'unavailable_quantity_cases' => 'unavailableQuantityCases',
        'available_quantity_pallets' => 'availableQuantityPallets',
        'damaged_quantity_pallets' => 'damagedQuantityPallets',
        'in_fulfillment_process_quantity_pallets' => 'inFulfillmentProcessQuantityPallets',
        'on_hand_quantity_pallets' => 'onHandQuantityPallets',
        'open_order_quantity_pallets' => 'openOrderQuantityPallets',
        'open_po_quantity_pallets' => 'openPOQuantityPallets',
        'orderable_quantity_pallets' => 'orderableQuantityPallets',
        'unallocatable_quantity_pallets' => 'unallocatableQuantityPallets',
        'unavailable_quantity_pallets' => 'unavailableQuantityPallets',
        'overall_days_on_hand' => 'overallDaysOnHand',
        'overall_stock_status' => 'overallStockStatus',
        'estimated_pallets' => 'estimatedPallets',
        'estimated_cases' => 'estimatedCases',
        'estimated_inner_packs' => 'estimatedInnerPacks',
        'next_requested_delivery_date' => 'nextRequestedDeliveryDate',
        'warehouse1_id' => 'warehouse1Id',
        'w1_available_quantity' => 'w1AvailableQuantity',
        'w1_damaged_quantity' => 'w1DamagedQuantity',
        'w1_in_fulfillment_process_quantity' => 'w1InFulfillmentProcessQuantity',
        'w1_on_hand_quantity' => 'w1OnHandQuantity',
        'w1_open_order_quantity' => 'w1OpenOrderQuantity',
        'w1_open_po_quantity' => 'w1OpenPOQuantity',
        'w1_orderable_quantity' => 'w1OrderableQuantity',
        'w1_unallocatable_quantity' => 'w1UnallocatableQuantity',
        'w1_unavailable_quantity' => 'w1UnavailableQuantity',
        'w1_days_on_hand' => 'w1DaysOnHand',
        'w1_stock_status' => 'w1StockStatus',
        'w1_estimated_pallets' => 'w1EstimatedPallets',
        'w1_estimated_cases' => 'w1EstimatedCases',
        'w1_estimated_inner_packs' => 'w1EstimatedInnerPacks',
        'w1_next_requested_delivery_date' => 'w1NextRequestedDeliveryDate',
        'warehouse2_id' => 'warehouse2Id',
        'w2_available_quantity' => 'w2AvailableQuantity',
        'w2_damaged_quantity' => 'w2DamagedQuantity',
        'w2_in_fulfillment_process_quantity' => 'w2InFulfillmentProcessQuantity',
        'w2_on_hand_quantity' => 'w2OnHandQuantity',
        'w2_open_order_quantity' => 'w2OpenOrderQuantity',
        'w2_open_po_quantity' => 'w2OpenPOQuantity',
        'w2_orderable_quantity' => 'w2OrderableQuantity',
        'w2_unallocatable_quantity' => 'w2UnallocatableQuantity',
        'w2_unavailable_quantity' => 'w2UnavailableQuantity',
        'w2_days_on_hand' => 'w2DaysOnHand',
        'w2_stock_status' => 'w2StockStatus',
        'w2_estimated_pallets' => 'w2EstimatedPallets',
        'w2_estimated_cases' => 'w2EstimatedCases',
        'w2_estimated_inner_packs' => 'w2EstimatedInnerPacks',
        'w2_next_requested_delivery_date' => 'w2NextRequestedDeliveryDate',
        'warehouse3_id' => 'warehouse3Id',
        'w3_available_quantity' => 'w3AvailableQuantity',
        'w3_damaged_quantity' => 'w3DamagedQuantity',
        'w3_in_fulfillment_process_quantity' => 'w3InFulfillmentProcessQuantity',
        'w3_on_hand_quantity' => 'w3OnHandQuantity',
        'w3_open_order_quantity' => 'w3OpenOrderQuantity',
        'w3_open_po_quantity' => 'w3OpenPOQuantity',
        'w3_orderable_quantity' => 'w3OrderableQuantity',
        'w3_unallocatable_quantity' => 'w3UnallocatableQuantity',
        'w3_unavailable_quantity' => 'w3UnavailableQuantity',
        'w3_days_on_hand' => 'w3DaysOnHand',
        'w3_stock_status' => 'w3StockStatus',
        'w3_estimated_pallets' => 'w3EstimatedPallets',
        'w3_estimated_cases' => 'w3EstimatedCases',
        'w3_estimated_inner_packs' => 'w3EstimatedInnerPacks',
        'w3_next_requested_delivery_date' => 'w3NextRequestedDeliveryDate',
        'warehouse4_id' => 'warehouse4Id',
        'w4_available_quantity' => 'w4AvailableQuantity',
        'w4_damaged_quantity' => 'w4DamagedQuantity',
        'w4_in_fulfillment_process_quantity' => 'w4InFulfillmentProcessQuantity',
        'w4_on_hand_quantity' => 'w4OnHandQuantity',
        'w4_open_order_quantity' => 'w4OpenOrderQuantity',
        'w4_open_po_quantity' => 'w4OpenPOQuantity',
        'w4_orderable_quantity' => 'w4OrderableQuantity',
        'w4_unallocatable_quantity' => 'w4UnallocatableQuantity',
        'w4_unavailable_quantity' => 'w4UnavailableQuantity',
        'w4_days_on_hand' => 'w4DaysOnHand',
        'w4_stock_status' => 'w4StockStatus',
        'w4_estimated_pallets' => 'w4EstimatedPallets',
        'w4_estimated_cases' => 'w4EstimatedCases',
        'w4_estimated_inner_packs' => 'w4EstimatedInnerPacks',
        'w4_next_requested_delivery_date' => 'w4NextRequestedDeliveryDate',
        'warehouse5_id' => 'warehouse5Id',
        'w5_available_quantity' => 'w5AvailableQuantity',
        'w5_damaged_quantity' => 'w5DamagedQuantity',
        'w5_in_fulfillment_process_quantity' => 'w5InFulfillmentProcessQuantity',
        'w5_on_hand_quantity' => 'w5OnHandQuantity',
        'w5_open_order_quantity' => 'w5OpenOrderQuantity',
        'w5_open_po_quantity' => 'w5OpenPOQuantity',
        'w5_orderable_quantity' => 'w5OrderableQuantity',
        'w5_unallocatable_quantity' => 'w5UnallocatableQuantity',
        'w5_unavailable_quantity' => 'w5UnavailableQuantity',
        'w5_days_on_hand' => 'w5DaysOnHand',
        'w5_stock_status' => 'w5StockStatus',
        'w5_estimated_pallets' => 'w5EstimatedPallets',
        'w5_estimated_cases' => 'w5EstimatedCases',
        'w5_estimated_inner_packs' => 'w5EstimatedInnerPacks',
        'w5_next_requested_delivery_date' => 'w5NextRequestedDeliveryDate',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'account_code_id' => 'setAccountCodeId',
        'low_stock_contact_id' => 'setLowStockContactId',
        'legacy_low_level_contact_id' => 'setLegacyLowLevelContactId',
        'low_stock_code_id' => 'setLowStockCodeId',
        'major_group_id' => 'setMajorGroupId',
        'sub_group_id' => 'setSubGroupId',
        'product_code_id' => 'setProductCodeId',
        'summary_code_id' => 'setSummaryCodeId',
        'buyer_id' => 'setBuyerId',
        'lob_id' => 'setLobId',
        'sku' => 'setSku',
        'vendor_sku' => 'setVendorSku',
        'upc' => 'setUpc',
        'item_description' => 'setItemDescription',
        'packing_slip_description' => 'setPackingSlipDescription',
        'absolute_max' => 'setAbsoluteMax',
        'additional_description' => 'setAdditionalDescription',
        'backorder' => 'setBackorder',
        'charge_code' => 'setChargeCode',
        'commodity_code_id' => 'setCommodityCodeId',
        'companion_code' => 'setCompanionCode',
        'create_date' => 'setCreateDate',
        'critical_amount' => 'setCriticalAmount',
        'overall_fixed_reorder_point' => 'setOverallFixedReorderPoint',
        'overall_lead_time' => 'setOverallLeadTime',
        'sell_price' => 'setSellPrice',
        'pricing_per' => 'setPricingPer',
        'lot_control_flag' => 'setLotControlFlag',
        'max_cycle' => 'setMaxCycle',
        'max_interim' => 'setMaxInterim',
        'numeric_sort_order' => 'setNumericSortOrder',
        'outside_vendor_id' => 'setOutsideVendorId',
        'pick_code' => 'setPickCode',
        'pod_order_suffix' => 'setPodOrderSuffix',
        'pod_rev_date' => 'setPodRevDate',
        'status' => 'setStatus',
        'seasonal_item' => 'setSeasonalItem',
        'requires_production_lot' => 'setRequiresProductionLot',
        'sector' => 'setSector',
        'secure' => 'setSecure',
        'serial_code' => 'setSerialCode',
        'unit_code' => 'setUnitCode',
        'units_per_wrap' => 'setUnitsPerWrap',
        'weight_per_wrap' => 'setWeightPerWrap',
        'quantity_per_inner_pack' => 'setQuantityPerInnerPack',
        'quantity_per_case' => 'setQuantityPerCase',
        'quantity_per_pallet' => 'setQuantityPerPallet',
        'inner_pack_barcode' => 'setInnerPackBarcode',
        'case_barcode' => 'setCaseBarcode',
        'pallet_barcode' => 'setPalletBarcode',
        'void_date' => 'setVoidDate',
        'wrap_code' => 'setWrapCode',
        'extrinsic_text1' => 'setExtrinsicText1',
        'extrinsic_text2' => 'setExtrinsicText2',
        'extrinsic_text3' => 'setExtrinsicText3',
        'extrinsic_number1' => 'setExtrinsicNumber1',
        'extrinsic_number2' => 'setExtrinsicNumber2',
        'extrinsic_decimal1' => 'setExtrinsicDecimal1',
        'extrinsic_decimal2' => 'setExtrinsicDecimal2',
        'casebreak_enabled' => 'setCasebreakEnabled',
        'vendor_id' => 'setVendorId',
        'vendor_price' => 'setVendorPrice',
        'vendor_per' => 'setVendorPer',
        'modify_date' => 'setModifyDate',
        'primary_image' => 'setPrimaryImage',
        'pick_image' => 'setPickImage',
        'behavior_type' => 'setBehaviorType',
        'assembly_instructions' => 'setAssemblyInstructions',
        'forward_lot_mixing_rule' => 'setForwardLotMixingRule',
        'storage_lot_mixing_rule' => 'setStorageLotMixingRule',
        'forward_item_mixing_rule' => 'setForwardItemMixingRule',
        'storage_item_mixing_rule' => 'setStorageItemMixingRule',
        'allocation_rule' => 'setAllocationRule',
        'allocation_sort' => 'setAllocationSort',
        'allocation_field' => 'setAllocationField',
        'barcode_field' => 'setBarcodeField',
        'warehouse_display_field' => 'setWarehouseDisplayField',
        'product_id_tag_scheme_id' => 'setProductIdTagSchemeId',
        'item_serial_scheme_id' => 'setItemSerialSchemeId',
        'receiving_criteria_scheme_id' => 'setReceivingCriteriaSchemeId',
        'asn_rule' => 'setAsnRule',
        'quantity_type' => 'setQuantityType',
        'hazmat' => 'setHazmat',
        'is_alcohol' => 'setIsAlcohol',
        'alcohol_type' => 'setAlcoholType',
        'alcohol_content' => 'setAlcoholContent',
        'alcohol_container' => 'setAlcoholContainer',
        'alcohol_vintage_year' => 'setAlcoholVintageYear',
        'alcohol_country' => 'setAlcoholCountry',
        'alcohol_state' => 'setAlcoholState',
        'alcohol_region' => 'setAlcoholRegion',
        'alcohol_brand' => 'setAlcoholBrand',
        'alcohol_upc_code' => 'setAlcoholUpcCode',
        'alcohol_nambca_code' => 'setAlcoholNambcaCode',
        'alcohol_unimerc_code' => 'setAlcoholUnimercCode',
        'alcohol_scc_code' => 'setAlcoholSccCode',
        'length' => 'setLength',
        'width' => 'setWidth',
        'height' => 'setHeight',
        'top_up' => 'setTopUp',
        'ship_solo' => 'setShipSolo',
        'inventory_update_timestamp' => 'setInventoryUpdateTimestamp',
        'available_quantity' => 'setAvailableQuantity',
        'damaged_quantity' => 'setDamagedQuantity',
        'in_fulfillment_process_quantity' => 'setInFulfillmentProcessQuantity',
        'on_hand_quantity' => 'setOnHandQuantity',
        'open_order_quantity' => 'setOpenOrderQuantity',
        'open_po_quantity' => 'setOpenPoQuantity',
        'orderable_quantity' => 'setOrderableQuantity',
        'unallocatable_quantity' => 'setUnallocatableQuantity',
        'unavailable_quantity' => 'setUnavailableQuantity',
        'total_demand' => 'setTotalDemand',
        'available_quantity_inner_packs' => 'setAvailableQuantityInnerPacks',
        'damaged_quantity_inner_packs' => 'setDamagedQuantityInnerPacks',
        'in_fulfillment_process_quantity_inner_packs' => 'setInFulfillmentProcessQuantityInnerPacks',
        'on_hand_quantity_inner_packs' => 'setOnHandQuantityInnerPacks',
        'open_order_quantity_inner_packs' => 'setOpenOrderQuantityInnerPacks',
        'open_po_quantity_inner_packs' => 'setOpenPoQuantityInnerPacks',
        'orderable_quantity_inner_packs' => 'setOrderableQuantityInnerPacks',
        'unallocatable_quantity_inner_packs' => 'setUnallocatableQuantityInnerPacks',
        'unavailable_quantity_inner_packs' => 'setUnavailableQuantityInnerPacks',
        'available_quantity_cases' => 'setAvailableQuantityCases',
        'damaged_quantity_cases' => 'setDamagedQuantityCases',
        'in_fulfillment_process_quantity_cases' => 'setInFulfillmentProcessQuantityCases',
        'on_hand_quantity_cases' => 'setOnHandQuantityCases',
        'open_order_quantity_cases' => 'setOpenOrderQuantityCases',
        'open_po_quantity_cases' => 'setOpenPoQuantityCases',
        'orderable_quantity_cases' => 'setOrderableQuantityCases',
        'unallocatable_quantity_cases' => 'setUnallocatableQuantityCases',
        'unavailable_quantity_cases' => 'setUnavailableQuantityCases',
        'available_quantity_pallets' => 'setAvailableQuantityPallets',
        'damaged_quantity_pallets' => 'setDamagedQuantityPallets',
        'in_fulfillment_process_quantity_pallets' => 'setInFulfillmentProcessQuantityPallets',
        'on_hand_quantity_pallets' => 'setOnHandQuantityPallets',
        'open_order_quantity_pallets' => 'setOpenOrderQuantityPallets',
        'open_po_quantity_pallets' => 'setOpenPoQuantityPallets',
        'orderable_quantity_pallets' => 'setOrderableQuantityPallets',
        'unallocatable_quantity_pallets' => 'setUnallocatableQuantityPallets',
        'unavailable_quantity_pallets' => 'setUnavailableQuantityPallets',
        'overall_days_on_hand' => 'setOverallDaysOnHand',
        'overall_stock_status' => 'setOverallStockStatus',
        'estimated_pallets' => 'setEstimatedPallets',
        'estimated_cases' => 'setEstimatedCases',
        'estimated_inner_packs' => 'setEstimatedInnerPacks',
        'next_requested_delivery_date' => 'setNextRequestedDeliveryDate',
        'warehouse1_id' => 'setWarehouse1Id',
        'w1_available_quantity' => 'setW1AvailableQuantity',
        'w1_damaged_quantity' => 'setW1DamagedQuantity',
        'w1_in_fulfillment_process_quantity' => 'setW1InFulfillmentProcessQuantity',
        'w1_on_hand_quantity' => 'setW1OnHandQuantity',
        'w1_open_order_quantity' => 'setW1OpenOrderQuantity',
        'w1_open_po_quantity' => 'setW1OpenPoQuantity',
        'w1_orderable_quantity' => 'setW1OrderableQuantity',
        'w1_unallocatable_quantity' => 'setW1UnallocatableQuantity',
        'w1_unavailable_quantity' => 'setW1UnavailableQuantity',
        'w1_days_on_hand' => 'setW1DaysOnHand',
        'w1_stock_status' => 'setW1StockStatus',
        'w1_estimated_pallets' => 'setW1EstimatedPallets',
        'w1_estimated_cases' => 'setW1EstimatedCases',
        'w1_estimated_inner_packs' => 'setW1EstimatedInnerPacks',
        'w1_next_requested_delivery_date' => 'setW1NextRequestedDeliveryDate',
        'warehouse2_id' => 'setWarehouse2Id',
        'w2_available_quantity' => 'setW2AvailableQuantity',
        'w2_damaged_quantity' => 'setW2DamagedQuantity',
        'w2_in_fulfillment_process_quantity' => 'setW2InFulfillmentProcessQuantity',
        'w2_on_hand_quantity' => 'setW2OnHandQuantity',
        'w2_open_order_quantity' => 'setW2OpenOrderQuantity',
        'w2_open_po_quantity' => 'setW2OpenPoQuantity',
        'w2_orderable_quantity' => 'setW2OrderableQuantity',
        'w2_unallocatable_quantity' => 'setW2UnallocatableQuantity',
        'w2_unavailable_quantity' => 'setW2UnavailableQuantity',
        'w2_days_on_hand' => 'setW2DaysOnHand',
        'w2_stock_status' => 'setW2StockStatus',
        'w2_estimated_pallets' => 'setW2EstimatedPallets',
        'w2_estimated_cases' => 'setW2EstimatedCases',
        'w2_estimated_inner_packs' => 'setW2EstimatedInnerPacks',
        'w2_next_requested_delivery_date' => 'setW2NextRequestedDeliveryDate',
        'warehouse3_id' => 'setWarehouse3Id',
        'w3_available_quantity' => 'setW3AvailableQuantity',
        'w3_damaged_quantity' => 'setW3DamagedQuantity',
        'w3_in_fulfillment_process_quantity' => 'setW3InFulfillmentProcessQuantity',
        'w3_on_hand_quantity' => 'setW3OnHandQuantity',
        'w3_open_order_quantity' => 'setW3OpenOrderQuantity',
        'w3_open_po_quantity' => 'setW3OpenPoQuantity',
        'w3_orderable_quantity' => 'setW3OrderableQuantity',
        'w3_unallocatable_quantity' => 'setW3UnallocatableQuantity',
        'w3_unavailable_quantity' => 'setW3UnavailableQuantity',
        'w3_days_on_hand' => 'setW3DaysOnHand',
        'w3_stock_status' => 'setW3StockStatus',
        'w3_estimated_pallets' => 'setW3EstimatedPallets',
        'w3_estimated_cases' => 'setW3EstimatedCases',
        'w3_estimated_inner_packs' => 'setW3EstimatedInnerPacks',
        'w3_next_requested_delivery_date' => 'setW3NextRequestedDeliveryDate',
        'warehouse4_id' => 'setWarehouse4Id',
        'w4_available_quantity' => 'setW4AvailableQuantity',
        'w4_damaged_quantity' => 'setW4DamagedQuantity',
        'w4_in_fulfillment_process_quantity' => 'setW4InFulfillmentProcessQuantity',
        'w4_on_hand_quantity' => 'setW4OnHandQuantity',
        'w4_open_order_quantity' => 'setW4OpenOrderQuantity',
        'w4_open_po_quantity' => 'setW4OpenPoQuantity',
        'w4_orderable_quantity' => 'setW4OrderableQuantity',
        'w4_unallocatable_quantity' => 'setW4UnallocatableQuantity',
        'w4_unavailable_quantity' => 'setW4UnavailableQuantity',
        'w4_days_on_hand' => 'setW4DaysOnHand',
        'w4_stock_status' => 'setW4StockStatus',
        'w4_estimated_pallets' => 'setW4EstimatedPallets',
        'w4_estimated_cases' => 'setW4EstimatedCases',
        'w4_estimated_inner_packs' => 'setW4EstimatedInnerPacks',
        'w4_next_requested_delivery_date' => 'setW4NextRequestedDeliveryDate',
        'warehouse5_id' => 'setWarehouse5Id',
        'w5_available_quantity' => 'setW5AvailableQuantity',
        'w5_damaged_quantity' => 'setW5DamagedQuantity',
        'w5_in_fulfillment_process_quantity' => 'setW5InFulfillmentProcessQuantity',
        'w5_on_hand_quantity' => 'setW5OnHandQuantity',
        'w5_open_order_quantity' => 'setW5OpenOrderQuantity',
        'w5_open_po_quantity' => 'setW5OpenPoQuantity',
        'w5_orderable_quantity' => 'setW5OrderableQuantity',
        'w5_unallocatable_quantity' => 'setW5UnallocatableQuantity',
        'w5_unavailable_quantity' => 'setW5UnavailableQuantity',
        'w5_days_on_hand' => 'setW5DaysOnHand',
        'w5_stock_status' => 'setW5StockStatus',
        'w5_estimated_pallets' => 'setW5EstimatedPallets',
        'w5_estimated_cases' => 'setW5EstimatedCases',
        'w5_estimated_inner_packs' => 'setW5EstimatedInnerPacks',
        'w5_next_requested_delivery_date' => 'setW5NextRequestedDeliveryDate',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'account_code_id' => 'getAccountCodeId',
        'low_stock_contact_id' => 'getLowStockContactId',
        'legacy_low_level_contact_id' => 'getLegacyLowLevelContactId',
        'low_stock_code_id' => 'getLowStockCodeId',
        'major_group_id' => 'getMajorGroupId',
        'sub_group_id' => 'getSubGroupId',
        'product_code_id' => 'getProductCodeId',
        'summary_code_id' => 'getSummaryCodeId',
        'buyer_id' => 'getBuyerId',
        'lob_id' => 'getLobId',
        'sku' => 'getSku',
        'vendor_sku' => 'getVendorSku',
        'upc' => 'getUpc',
        'item_description' => 'getItemDescription',
        'packing_slip_description' => 'getPackingSlipDescription',
        'absolute_max' => 'getAbsoluteMax',
        'additional_description' => 'getAdditionalDescription',
        'backorder' => 'getBackorder',
        'charge_code' => 'getChargeCode',
        'commodity_code_id' => 'getCommodityCodeId',
        'companion_code' => 'getCompanionCode',
        'create_date' => 'getCreateDate',
        'critical_amount' => 'getCriticalAmount',
        'overall_fixed_reorder_point' => 'getOverallFixedReorderPoint',
        'overall_lead_time' => 'getOverallLeadTime',
        'sell_price' => 'getSellPrice',
        'pricing_per' => 'getPricingPer',
        'lot_control_flag' => 'getLotControlFlag',
        'max_cycle' => 'getMaxCycle',
        'max_interim' => 'getMaxInterim',
        'numeric_sort_order' => 'getNumericSortOrder',
        'outside_vendor_id' => 'getOutsideVendorId',
        'pick_code' => 'getPickCode',
        'pod_order_suffix' => 'getPodOrderSuffix',
        'pod_rev_date' => 'getPodRevDate',
        'status' => 'getStatus',
        'seasonal_item' => 'getSeasonalItem',
        'requires_production_lot' => 'getRequiresProductionLot',
        'sector' => 'getSector',
        'secure' => 'getSecure',
        'serial_code' => 'getSerialCode',
        'unit_code' => 'getUnitCode',
        'units_per_wrap' => 'getUnitsPerWrap',
        'weight_per_wrap' => 'getWeightPerWrap',
        'quantity_per_inner_pack' => 'getQuantityPerInnerPack',
        'quantity_per_case' => 'getQuantityPerCase',
        'quantity_per_pallet' => 'getQuantityPerPallet',
        'inner_pack_barcode' => 'getInnerPackBarcode',
        'case_barcode' => 'getCaseBarcode',
        'pallet_barcode' => 'getPalletBarcode',
        'void_date' => 'getVoidDate',
        'wrap_code' => 'getWrapCode',
        'extrinsic_text1' => 'getExtrinsicText1',
        'extrinsic_text2' => 'getExtrinsicText2',
        'extrinsic_text3' => 'getExtrinsicText3',
        'extrinsic_number1' => 'getExtrinsicNumber1',
        'extrinsic_number2' => 'getExtrinsicNumber2',
        'extrinsic_decimal1' => 'getExtrinsicDecimal1',
        'extrinsic_decimal2' => 'getExtrinsicDecimal2',
        'casebreak_enabled' => 'getCasebreakEnabled',
        'vendor_id' => 'getVendorId',
        'vendor_price' => 'getVendorPrice',
        'vendor_per' => 'getVendorPer',
        'modify_date' => 'getModifyDate',
        'primary_image' => 'getPrimaryImage',
        'pick_image' => 'getPickImage',
        'behavior_type' => 'getBehaviorType',
        'assembly_instructions' => 'getAssemblyInstructions',
        'forward_lot_mixing_rule' => 'getForwardLotMixingRule',
        'storage_lot_mixing_rule' => 'getStorageLotMixingRule',
        'forward_item_mixing_rule' => 'getForwardItemMixingRule',
        'storage_item_mixing_rule' => 'getStorageItemMixingRule',
        'allocation_rule' => 'getAllocationRule',
        'allocation_sort' => 'getAllocationSort',
        'allocation_field' => 'getAllocationField',
        'barcode_field' => 'getBarcodeField',
        'warehouse_display_field' => 'getWarehouseDisplayField',
        'product_id_tag_scheme_id' => 'getProductIdTagSchemeId',
        'item_serial_scheme_id' => 'getItemSerialSchemeId',
        'receiving_criteria_scheme_id' => 'getReceivingCriteriaSchemeId',
        'asn_rule' => 'getAsnRule',
        'quantity_type' => 'getQuantityType',
        'hazmat' => 'getHazmat',
        'is_alcohol' => 'getIsAlcohol',
        'alcohol_type' => 'getAlcoholType',
        'alcohol_content' => 'getAlcoholContent',
        'alcohol_container' => 'getAlcoholContainer',
        'alcohol_vintage_year' => 'getAlcoholVintageYear',
        'alcohol_country' => 'getAlcoholCountry',
        'alcohol_state' => 'getAlcoholState',
        'alcohol_region' => 'getAlcoholRegion',
        'alcohol_brand' => 'getAlcoholBrand',
        'alcohol_upc_code' => 'getAlcoholUpcCode',
        'alcohol_nambca_code' => 'getAlcoholNambcaCode',
        'alcohol_unimerc_code' => 'getAlcoholUnimercCode',
        'alcohol_scc_code' => 'getAlcoholSccCode',
        'length' => 'getLength',
        'width' => 'getWidth',
        'height' => 'getHeight',
        'top_up' => 'getTopUp',
        'ship_solo' => 'getShipSolo',
        'inventory_update_timestamp' => 'getInventoryUpdateTimestamp',
        'available_quantity' => 'getAvailableQuantity',
        'damaged_quantity' => 'getDamagedQuantity',
        'in_fulfillment_process_quantity' => 'getInFulfillmentProcessQuantity',
        'on_hand_quantity' => 'getOnHandQuantity',
        'open_order_quantity' => 'getOpenOrderQuantity',
        'open_po_quantity' => 'getOpenPoQuantity',
        'orderable_quantity' => 'getOrderableQuantity',
        'unallocatable_quantity' => 'getUnallocatableQuantity',
        'unavailable_quantity' => 'getUnavailableQuantity',
        'total_demand' => 'getTotalDemand',
        'available_quantity_inner_packs' => 'getAvailableQuantityInnerPacks',
        'damaged_quantity_inner_packs' => 'getDamagedQuantityInnerPacks',
        'in_fulfillment_process_quantity_inner_packs' => 'getInFulfillmentProcessQuantityInnerPacks',
        'on_hand_quantity_inner_packs' => 'getOnHandQuantityInnerPacks',
        'open_order_quantity_inner_packs' => 'getOpenOrderQuantityInnerPacks',
        'open_po_quantity_inner_packs' => 'getOpenPoQuantityInnerPacks',
        'orderable_quantity_inner_packs' => 'getOrderableQuantityInnerPacks',
        'unallocatable_quantity_inner_packs' => 'getUnallocatableQuantityInnerPacks',
        'unavailable_quantity_inner_packs' => 'getUnavailableQuantityInnerPacks',
        'available_quantity_cases' => 'getAvailableQuantityCases',
        'damaged_quantity_cases' => 'getDamagedQuantityCases',
        'in_fulfillment_process_quantity_cases' => 'getInFulfillmentProcessQuantityCases',
        'on_hand_quantity_cases' => 'getOnHandQuantityCases',
        'open_order_quantity_cases' => 'getOpenOrderQuantityCases',
        'open_po_quantity_cases' => 'getOpenPoQuantityCases',
        'orderable_quantity_cases' => 'getOrderableQuantityCases',
        'unallocatable_quantity_cases' => 'getUnallocatableQuantityCases',
        'unavailable_quantity_cases' => 'getUnavailableQuantityCases',
        'available_quantity_pallets' => 'getAvailableQuantityPallets',
        'damaged_quantity_pallets' => 'getDamagedQuantityPallets',
        'in_fulfillment_process_quantity_pallets' => 'getInFulfillmentProcessQuantityPallets',
        'on_hand_quantity_pallets' => 'getOnHandQuantityPallets',
        'open_order_quantity_pallets' => 'getOpenOrderQuantityPallets',
        'open_po_quantity_pallets' => 'getOpenPoQuantityPallets',
        'orderable_quantity_pallets' => 'getOrderableQuantityPallets',
        'unallocatable_quantity_pallets' => 'getUnallocatableQuantityPallets',
        'unavailable_quantity_pallets' => 'getUnavailableQuantityPallets',
        'overall_days_on_hand' => 'getOverallDaysOnHand',
        'overall_stock_status' => 'getOverallStockStatus',
        'estimated_pallets' => 'getEstimatedPallets',
        'estimated_cases' => 'getEstimatedCases',
        'estimated_inner_packs' => 'getEstimatedInnerPacks',
        'next_requested_delivery_date' => 'getNextRequestedDeliveryDate',
        'warehouse1_id' => 'getWarehouse1Id',
        'w1_available_quantity' => 'getW1AvailableQuantity',
        'w1_damaged_quantity' => 'getW1DamagedQuantity',
        'w1_in_fulfillment_process_quantity' => 'getW1InFulfillmentProcessQuantity',
        'w1_on_hand_quantity' => 'getW1OnHandQuantity',
        'w1_open_order_quantity' => 'getW1OpenOrderQuantity',
        'w1_open_po_quantity' => 'getW1OpenPoQuantity',
        'w1_orderable_quantity' => 'getW1OrderableQuantity',
        'w1_unallocatable_quantity' => 'getW1UnallocatableQuantity',
        'w1_unavailable_quantity' => 'getW1UnavailableQuantity',
        'w1_days_on_hand' => 'getW1DaysOnHand',
        'w1_stock_status' => 'getW1StockStatus',
        'w1_estimated_pallets' => 'getW1EstimatedPallets',
        'w1_estimated_cases' => 'getW1EstimatedCases',
        'w1_estimated_inner_packs' => 'getW1EstimatedInnerPacks',
        'w1_next_requested_delivery_date' => 'getW1NextRequestedDeliveryDate',
        'warehouse2_id' => 'getWarehouse2Id',
        'w2_available_quantity' => 'getW2AvailableQuantity',
        'w2_damaged_quantity' => 'getW2DamagedQuantity',
        'w2_in_fulfillment_process_quantity' => 'getW2InFulfillmentProcessQuantity',
        'w2_on_hand_quantity' => 'getW2OnHandQuantity',
        'w2_open_order_quantity' => 'getW2OpenOrderQuantity',
        'w2_open_po_quantity' => 'getW2OpenPoQuantity',
        'w2_orderable_quantity' => 'getW2OrderableQuantity',
        'w2_unallocatable_quantity' => 'getW2UnallocatableQuantity',
        'w2_unavailable_quantity' => 'getW2UnavailableQuantity',
        'w2_days_on_hand' => 'getW2DaysOnHand',
        'w2_stock_status' => 'getW2StockStatus',
        'w2_estimated_pallets' => 'getW2EstimatedPallets',
        'w2_estimated_cases' => 'getW2EstimatedCases',
        'w2_estimated_inner_packs' => 'getW2EstimatedInnerPacks',
        'w2_next_requested_delivery_date' => 'getW2NextRequestedDeliveryDate',
        'warehouse3_id' => 'getWarehouse3Id',
        'w3_available_quantity' => 'getW3AvailableQuantity',
        'w3_damaged_quantity' => 'getW3DamagedQuantity',
        'w3_in_fulfillment_process_quantity' => 'getW3InFulfillmentProcessQuantity',
        'w3_on_hand_quantity' => 'getW3OnHandQuantity',
        'w3_open_order_quantity' => 'getW3OpenOrderQuantity',
        'w3_open_po_quantity' => 'getW3OpenPoQuantity',
        'w3_orderable_quantity' => 'getW3OrderableQuantity',
        'w3_unallocatable_quantity' => 'getW3UnallocatableQuantity',
        'w3_unavailable_quantity' => 'getW3UnavailableQuantity',
        'w3_days_on_hand' => 'getW3DaysOnHand',
        'w3_stock_status' => 'getW3StockStatus',
        'w3_estimated_pallets' => 'getW3EstimatedPallets',
        'w3_estimated_cases' => 'getW3EstimatedCases',
        'w3_estimated_inner_packs' => 'getW3EstimatedInnerPacks',
        'w3_next_requested_delivery_date' => 'getW3NextRequestedDeliveryDate',
        'warehouse4_id' => 'getWarehouse4Id',
        'w4_available_quantity' => 'getW4AvailableQuantity',
        'w4_damaged_quantity' => 'getW4DamagedQuantity',
        'w4_in_fulfillment_process_quantity' => 'getW4InFulfillmentProcessQuantity',
        'w4_on_hand_quantity' => 'getW4OnHandQuantity',
        'w4_open_order_quantity' => 'getW4OpenOrderQuantity',
        'w4_open_po_quantity' => 'getW4OpenPoQuantity',
        'w4_orderable_quantity' => 'getW4OrderableQuantity',
        'w4_unallocatable_quantity' => 'getW4UnallocatableQuantity',
        'w4_unavailable_quantity' => 'getW4UnavailableQuantity',
        'w4_days_on_hand' => 'getW4DaysOnHand',
        'w4_stock_status' => 'getW4StockStatus',
        'w4_estimated_pallets' => 'getW4EstimatedPallets',
        'w4_estimated_cases' => 'getW4EstimatedCases',
        'w4_estimated_inner_packs' => 'getW4EstimatedInnerPacks',
        'w4_next_requested_delivery_date' => 'getW4NextRequestedDeliveryDate',
        'warehouse5_id' => 'getWarehouse5Id',
        'w5_available_quantity' => 'getW5AvailableQuantity',
        'w5_damaged_quantity' => 'getW5DamagedQuantity',
        'w5_in_fulfillment_process_quantity' => 'getW5InFulfillmentProcessQuantity',
        'w5_on_hand_quantity' => 'getW5OnHandQuantity',
        'w5_open_order_quantity' => 'getW5OpenOrderQuantity',
        'w5_open_po_quantity' => 'getW5OpenPoQuantity',
        'w5_orderable_quantity' => 'getW5OrderableQuantity',
        'w5_unallocatable_quantity' => 'getW5UnallocatableQuantity',
        'w5_unavailable_quantity' => 'getW5UnavailableQuantity',
        'w5_days_on_hand' => 'getW5DaysOnHand',
        'w5_stock_status' => 'getW5StockStatus',
        'w5_estimated_pallets' => 'getW5EstimatedPallets',
        'w5_estimated_cases' => 'getW5EstimatedCases',
        'w5_estimated_inner_packs' => 'getW5EstimatedInnerPacks',
        'w5_next_requested_delivery_date' => 'getW5NextRequestedDeliveryDate',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['account_code_id'] = isset($data['account_code_id']) ? $data['account_code_id'] : null;
        $this->container['low_stock_contact_id'] = isset($data['low_stock_contact_id']) ? $data['low_stock_contact_id'] : null;
        $this->container['legacy_low_level_contact_id'] = isset($data['legacy_low_level_contact_id']) ? $data['legacy_low_level_contact_id'] : null;
        $this->container['low_stock_code_id'] = isset($data['low_stock_code_id']) ? $data['low_stock_code_id'] : null;
        $this->container['major_group_id'] = isset($data['major_group_id']) ? $data['major_group_id'] : null;
        $this->container['sub_group_id'] = isset($data['sub_group_id']) ? $data['sub_group_id'] : null;
        $this->container['product_code_id'] = isset($data['product_code_id']) ? $data['product_code_id'] : null;
        $this->container['summary_code_id'] = isset($data['summary_code_id']) ? $data['summary_code_id'] : null;
        $this->container['buyer_id'] = isset($data['buyer_id']) ? $data['buyer_id'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['vendor_sku'] = isset($data['vendor_sku']) ? $data['vendor_sku'] : null;
        $this->container['upc'] = isset($data['upc']) ? $data['upc'] : null;
        $this->container['item_description'] = isset($data['item_description']) ? $data['item_description'] : null;
        $this->container['packing_slip_description'] = isset($data['packing_slip_description']) ? $data['packing_slip_description'] : null;
        $this->container['absolute_max'] = isset($data['absolute_max']) ? $data['absolute_max'] : null;
        $this->container['additional_description'] = isset($data['additional_description']) ? $data['additional_description'] : null;
        $this->container['backorder'] = isset($data['backorder']) ? $data['backorder'] : null;
        $this->container['charge_code'] = isset($data['charge_code']) ? $data['charge_code'] : null;
        $this->container['commodity_code_id'] = isset($data['commodity_code_id']) ? $data['commodity_code_id'] : null;
        $this->container['companion_code'] = isset($data['companion_code']) ? $data['companion_code'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['critical_amount'] = isset($data['critical_amount']) ? $data['critical_amount'] : null;
        $this->container['overall_fixed_reorder_point'] = isset($data['overall_fixed_reorder_point']) ? $data['overall_fixed_reorder_point'] : null;
        $this->container['overall_lead_time'] = isset($data['overall_lead_time']) ? $data['overall_lead_time'] : null;
        $this->container['sell_price'] = isset($data['sell_price']) ? $data['sell_price'] : null;
        $this->container['pricing_per'] = isset($data['pricing_per']) ? $data['pricing_per'] : null;
        $this->container['lot_control_flag'] = isset($data['lot_control_flag']) ? $data['lot_control_flag'] : null;
        $this->container['max_cycle'] = isset($data['max_cycle']) ? $data['max_cycle'] : null;
        $this->container['max_interim'] = isset($data['max_interim']) ? $data['max_interim'] : null;
        $this->container['numeric_sort_order'] = isset($data['numeric_sort_order']) ? $data['numeric_sort_order'] : null;
        $this->container['outside_vendor_id'] = isset($data['outside_vendor_id']) ? $data['outside_vendor_id'] : null;
        $this->container['pick_code'] = isset($data['pick_code']) ? $data['pick_code'] : null;
        $this->container['pod_order_suffix'] = isset($data['pod_order_suffix']) ? $data['pod_order_suffix'] : null;
        $this->container['pod_rev_date'] = isset($data['pod_rev_date']) ? $data['pod_rev_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['seasonal_item'] = isset($data['seasonal_item']) ? $data['seasonal_item'] : null;
        $this->container['requires_production_lot'] = isset($data['requires_production_lot']) ? $data['requires_production_lot'] : null;
        $this->container['sector'] = isset($data['sector']) ? $data['sector'] : null;
        $this->container['secure'] = isset($data['secure']) ? $data['secure'] : null;
        $this->container['serial_code'] = isset($data['serial_code']) ? $data['serial_code'] : null;
        $this->container['unit_code'] = isset($data['unit_code']) ? $data['unit_code'] : null;
        $this->container['units_per_wrap'] = isset($data['units_per_wrap']) ? $data['units_per_wrap'] : null;
        $this->container['weight_per_wrap'] = isset($data['weight_per_wrap']) ? $data['weight_per_wrap'] : null;
        $this->container['quantity_per_inner_pack'] = isset($data['quantity_per_inner_pack']) ? $data['quantity_per_inner_pack'] : null;
        $this->container['quantity_per_case'] = isset($data['quantity_per_case']) ? $data['quantity_per_case'] : null;
        $this->container['quantity_per_pallet'] = isset($data['quantity_per_pallet']) ? $data['quantity_per_pallet'] : null;
        $this->container['inner_pack_barcode'] = isset($data['inner_pack_barcode']) ? $data['inner_pack_barcode'] : null;
        $this->container['case_barcode'] = isset($data['case_barcode']) ? $data['case_barcode'] : null;
        $this->container['pallet_barcode'] = isset($data['pallet_barcode']) ? $data['pallet_barcode'] : null;
        $this->container['void_date'] = isset($data['void_date']) ? $data['void_date'] : null;
        $this->container['wrap_code'] = isset($data['wrap_code']) ? $data['wrap_code'] : null;
        $this->container['extrinsic_text1'] = isset($data['extrinsic_text1']) ? $data['extrinsic_text1'] : null;
        $this->container['extrinsic_text2'] = isset($data['extrinsic_text2']) ? $data['extrinsic_text2'] : null;
        $this->container['extrinsic_text3'] = isset($data['extrinsic_text3']) ? $data['extrinsic_text3'] : null;
        $this->container['extrinsic_number1'] = isset($data['extrinsic_number1']) ? $data['extrinsic_number1'] : null;
        $this->container['extrinsic_number2'] = isset($data['extrinsic_number2']) ? $data['extrinsic_number2'] : null;
        $this->container['extrinsic_decimal1'] = isset($data['extrinsic_decimal1']) ? $data['extrinsic_decimal1'] : null;
        $this->container['extrinsic_decimal2'] = isset($data['extrinsic_decimal2']) ? $data['extrinsic_decimal2'] : null;
        $this->container['casebreak_enabled'] = isset($data['casebreak_enabled']) ? $data['casebreak_enabled'] : null;
        $this->container['vendor_id'] = isset($data['vendor_id']) ? $data['vendor_id'] : null;
        $this->container['vendor_price'] = isset($data['vendor_price']) ? $data['vendor_price'] : null;
        $this->container['vendor_per'] = isset($data['vendor_per']) ? $data['vendor_per'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['primary_image'] = isset($data['primary_image']) ? $data['primary_image'] : null;
        $this->container['pick_image'] = isset($data['pick_image']) ? $data['pick_image'] : null;
        $this->container['behavior_type'] = isset($data['behavior_type']) ? $data['behavior_type'] : null;
        $this->container['assembly_instructions'] = isset($data['assembly_instructions']) ? $data['assembly_instructions'] : null;
        $this->container['forward_lot_mixing_rule'] = isset($data['forward_lot_mixing_rule']) ? $data['forward_lot_mixing_rule'] : null;
        $this->container['storage_lot_mixing_rule'] = isset($data['storage_lot_mixing_rule']) ? $data['storage_lot_mixing_rule'] : null;
        $this->container['forward_item_mixing_rule'] = isset($data['forward_item_mixing_rule']) ? $data['forward_item_mixing_rule'] : null;
        $this->container['storage_item_mixing_rule'] = isset($data['storage_item_mixing_rule']) ? $data['storage_item_mixing_rule'] : null;
        $this->container['allocation_rule'] = isset($data['allocation_rule']) ? $data['allocation_rule'] : null;
        $this->container['allocation_sort'] = isset($data['allocation_sort']) ? $data['allocation_sort'] : null;
        $this->container['allocation_field'] = isset($data['allocation_field']) ? $data['allocation_field'] : null;
        $this->container['barcode_field'] = isset($data['barcode_field']) ? $data['barcode_field'] : null;
        $this->container['warehouse_display_field'] = isset($data['warehouse_display_field']) ? $data['warehouse_display_field'] : null;
        $this->container['product_id_tag_scheme_id'] = isset($data['product_id_tag_scheme_id']) ? $data['product_id_tag_scheme_id'] : null;
        $this->container['item_serial_scheme_id'] = isset($data['item_serial_scheme_id']) ? $data['item_serial_scheme_id'] : null;
        $this->container['receiving_criteria_scheme_id'] = isset($data['receiving_criteria_scheme_id']) ? $data['receiving_criteria_scheme_id'] : null;
        $this->container['asn_rule'] = isset($data['asn_rule']) ? $data['asn_rule'] : null;
        $this->container['quantity_type'] = isset($data['quantity_type']) ? $data['quantity_type'] : null;
        $this->container['hazmat'] = isset($data['hazmat']) ? $data['hazmat'] : null;
        $this->container['is_alcohol'] = isset($data['is_alcohol']) ? $data['is_alcohol'] : false;
        $this->container['alcohol_type'] = isset($data['alcohol_type']) ? $data['alcohol_type'] : null;
        $this->container['alcohol_content'] = isset($data['alcohol_content']) ? $data['alcohol_content'] : null;
        $this->container['alcohol_container'] = isset($data['alcohol_container']) ? $data['alcohol_container'] : null;
        $this->container['alcohol_vintage_year'] = isset($data['alcohol_vintage_year']) ? $data['alcohol_vintage_year'] : null;
        $this->container['alcohol_country'] = isset($data['alcohol_country']) ? $data['alcohol_country'] : null;
        $this->container['alcohol_state'] = isset($data['alcohol_state']) ? $data['alcohol_state'] : null;
        $this->container['alcohol_region'] = isset($data['alcohol_region']) ? $data['alcohol_region'] : null;
        $this->container['alcohol_brand'] = isset($data['alcohol_brand']) ? $data['alcohol_brand'] : null;
        $this->container['alcohol_upc_code'] = isset($data['alcohol_upc_code']) ? $data['alcohol_upc_code'] : null;
        $this->container['alcohol_nambca_code'] = isset($data['alcohol_nambca_code']) ? $data['alcohol_nambca_code'] : null;
        $this->container['alcohol_unimerc_code'] = isset($data['alcohol_unimerc_code']) ? $data['alcohol_unimerc_code'] : null;
        $this->container['alcohol_scc_code'] = isset($data['alcohol_scc_code']) ? $data['alcohol_scc_code'] : null;
        $this->container['length'] = isset($data['length']) ? $data['length'] : null;
        $this->container['width'] = isset($data['width']) ? $data['width'] : null;
        $this->container['height'] = isset($data['height']) ? $data['height'] : null;
        $this->container['top_up'] = isset($data['top_up']) ? $data['top_up'] : false;
        $this->container['ship_solo'] = isset($data['ship_solo']) ? $data['ship_solo'] : false;
        $this->container['inventory_update_timestamp'] = isset($data['inventory_update_timestamp']) ? $data['inventory_update_timestamp'] : null;
        $this->container['available_quantity'] = isset($data['available_quantity']) ? $data['available_quantity'] : null;
        $this->container['damaged_quantity'] = isset($data['damaged_quantity']) ? $data['damaged_quantity'] : null;
        $this->container['in_fulfillment_process_quantity'] = isset($data['in_fulfillment_process_quantity']) ? $data['in_fulfillment_process_quantity'] : null;
        $this->container['on_hand_quantity'] = isset($data['on_hand_quantity']) ? $data['on_hand_quantity'] : null;
        $this->container['open_order_quantity'] = isset($data['open_order_quantity']) ? $data['open_order_quantity'] : null;
        $this->container['open_po_quantity'] = isset($data['open_po_quantity']) ? $data['open_po_quantity'] : null;
        $this->container['orderable_quantity'] = isset($data['orderable_quantity']) ? $data['orderable_quantity'] : null;
        $this->container['unallocatable_quantity'] = isset($data['unallocatable_quantity']) ? $data['unallocatable_quantity'] : null;
        $this->container['unavailable_quantity'] = isset($data['unavailable_quantity']) ? $data['unavailable_quantity'] : null;
        $this->container['total_demand'] = isset($data['total_demand']) ? $data['total_demand'] : null;
        $this->container['available_quantity_inner_packs'] = isset($data['available_quantity_inner_packs']) ? $data['available_quantity_inner_packs'] : null;
        $this->container['damaged_quantity_inner_packs'] = isset($data['damaged_quantity_inner_packs']) ? $data['damaged_quantity_inner_packs'] : null;
        $this->container['in_fulfillment_process_quantity_inner_packs'] = isset($data['in_fulfillment_process_quantity_inner_packs']) ? $data['in_fulfillment_process_quantity_inner_packs'] : null;
        $this->container['on_hand_quantity_inner_packs'] = isset($data['on_hand_quantity_inner_packs']) ? $data['on_hand_quantity_inner_packs'] : null;
        $this->container['open_order_quantity_inner_packs'] = isset($data['open_order_quantity_inner_packs']) ? $data['open_order_quantity_inner_packs'] : null;
        $this->container['open_po_quantity_inner_packs'] = isset($data['open_po_quantity_inner_packs']) ? $data['open_po_quantity_inner_packs'] : null;
        $this->container['orderable_quantity_inner_packs'] = isset($data['orderable_quantity_inner_packs']) ? $data['orderable_quantity_inner_packs'] : null;
        $this->container['unallocatable_quantity_inner_packs'] = isset($data['unallocatable_quantity_inner_packs']) ? $data['unallocatable_quantity_inner_packs'] : null;
        $this->container['unavailable_quantity_inner_packs'] = isset($data['unavailable_quantity_inner_packs']) ? $data['unavailable_quantity_inner_packs'] : null;
        $this->container['available_quantity_cases'] = isset($data['available_quantity_cases']) ? $data['available_quantity_cases'] : null;
        $this->container['damaged_quantity_cases'] = isset($data['damaged_quantity_cases']) ? $data['damaged_quantity_cases'] : null;
        $this->container['in_fulfillment_process_quantity_cases'] = isset($data['in_fulfillment_process_quantity_cases']) ? $data['in_fulfillment_process_quantity_cases'] : null;
        $this->container['on_hand_quantity_cases'] = isset($data['on_hand_quantity_cases']) ? $data['on_hand_quantity_cases'] : null;
        $this->container['open_order_quantity_cases'] = isset($data['open_order_quantity_cases']) ? $data['open_order_quantity_cases'] : null;
        $this->container['open_po_quantity_cases'] = isset($data['open_po_quantity_cases']) ? $data['open_po_quantity_cases'] : null;
        $this->container['orderable_quantity_cases'] = isset($data['orderable_quantity_cases']) ? $data['orderable_quantity_cases'] : null;
        $this->container['unallocatable_quantity_cases'] = isset($data['unallocatable_quantity_cases']) ? $data['unallocatable_quantity_cases'] : null;
        $this->container['unavailable_quantity_cases'] = isset($data['unavailable_quantity_cases']) ? $data['unavailable_quantity_cases'] : null;
        $this->container['available_quantity_pallets'] = isset($data['available_quantity_pallets']) ? $data['available_quantity_pallets'] : null;
        $this->container['damaged_quantity_pallets'] = isset($data['damaged_quantity_pallets']) ? $data['damaged_quantity_pallets'] : null;
        $this->container['in_fulfillment_process_quantity_pallets'] = isset($data['in_fulfillment_process_quantity_pallets']) ? $data['in_fulfillment_process_quantity_pallets'] : null;
        $this->container['on_hand_quantity_pallets'] = isset($data['on_hand_quantity_pallets']) ? $data['on_hand_quantity_pallets'] : null;
        $this->container['open_order_quantity_pallets'] = isset($data['open_order_quantity_pallets']) ? $data['open_order_quantity_pallets'] : null;
        $this->container['open_po_quantity_pallets'] = isset($data['open_po_quantity_pallets']) ? $data['open_po_quantity_pallets'] : null;
        $this->container['orderable_quantity_pallets'] = isset($data['orderable_quantity_pallets']) ? $data['orderable_quantity_pallets'] : null;
        $this->container['unallocatable_quantity_pallets'] = isset($data['unallocatable_quantity_pallets']) ? $data['unallocatable_quantity_pallets'] : null;
        $this->container['unavailable_quantity_pallets'] = isset($data['unavailable_quantity_pallets']) ? $data['unavailable_quantity_pallets'] : null;
        $this->container['overall_days_on_hand'] = isset($data['overall_days_on_hand']) ? $data['overall_days_on_hand'] : null;
        $this->container['overall_stock_status'] = isset($data['overall_stock_status']) ? $data['overall_stock_status'] : null;
        $this->container['estimated_pallets'] = isset($data['estimated_pallets']) ? $data['estimated_pallets'] : null;
        $this->container['estimated_cases'] = isset($data['estimated_cases']) ? $data['estimated_cases'] : null;
        $this->container['estimated_inner_packs'] = isset($data['estimated_inner_packs']) ? $data['estimated_inner_packs'] : null;
        $this->container['next_requested_delivery_date'] = isset($data['next_requested_delivery_date']) ? $data['next_requested_delivery_date'] : null;
        $this->container['warehouse1_id'] = isset($data['warehouse1_id']) ? $data['warehouse1_id'] : null;
        $this->container['w1_available_quantity'] = isset($data['w1_available_quantity']) ? $data['w1_available_quantity'] : null;
        $this->container['w1_damaged_quantity'] = isset($data['w1_damaged_quantity']) ? $data['w1_damaged_quantity'] : null;
        $this->container['w1_in_fulfillment_process_quantity'] = isset($data['w1_in_fulfillment_process_quantity']) ? $data['w1_in_fulfillment_process_quantity'] : null;
        $this->container['w1_on_hand_quantity'] = isset($data['w1_on_hand_quantity']) ? $data['w1_on_hand_quantity'] : null;
        $this->container['w1_open_order_quantity'] = isset($data['w1_open_order_quantity']) ? $data['w1_open_order_quantity'] : null;
        $this->container['w1_open_po_quantity'] = isset($data['w1_open_po_quantity']) ? $data['w1_open_po_quantity'] : null;
        $this->container['w1_orderable_quantity'] = isset($data['w1_orderable_quantity']) ? $data['w1_orderable_quantity'] : null;
        $this->container['w1_unallocatable_quantity'] = isset($data['w1_unallocatable_quantity']) ? $data['w1_unallocatable_quantity'] : null;
        $this->container['w1_unavailable_quantity'] = isset($data['w1_unavailable_quantity']) ? $data['w1_unavailable_quantity'] : null;
        $this->container['w1_days_on_hand'] = isset($data['w1_days_on_hand']) ? $data['w1_days_on_hand'] : null;
        $this->container['w1_stock_status'] = isset($data['w1_stock_status']) ? $data['w1_stock_status'] : null;
        $this->container['w1_estimated_pallets'] = isset($data['w1_estimated_pallets']) ? $data['w1_estimated_pallets'] : null;
        $this->container['w1_estimated_cases'] = isset($data['w1_estimated_cases']) ? $data['w1_estimated_cases'] : null;
        $this->container['w1_estimated_inner_packs'] = isset($data['w1_estimated_inner_packs']) ? $data['w1_estimated_inner_packs'] : null;
        $this->container['w1_next_requested_delivery_date'] = isset($data['w1_next_requested_delivery_date']) ? $data['w1_next_requested_delivery_date'] : null;
        $this->container['warehouse2_id'] = isset($data['warehouse2_id']) ? $data['warehouse2_id'] : null;
        $this->container['w2_available_quantity'] = isset($data['w2_available_quantity']) ? $data['w2_available_quantity'] : null;
        $this->container['w2_damaged_quantity'] = isset($data['w2_damaged_quantity']) ? $data['w2_damaged_quantity'] : null;
        $this->container['w2_in_fulfillment_process_quantity'] = isset($data['w2_in_fulfillment_process_quantity']) ? $data['w2_in_fulfillment_process_quantity'] : null;
        $this->container['w2_on_hand_quantity'] = isset($data['w2_on_hand_quantity']) ? $data['w2_on_hand_quantity'] : null;
        $this->container['w2_open_order_quantity'] = isset($data['w2_open_order_quantity']) ? $data['w2_open_order_quantity'] : null;
        $this->container['w2_open_po_quantity'] = isset($data['w2_open_po_quantity']) ? $data['w2_open_po_quantity'] : null;
        $this->container['w2_orderable_quantity'] = isset($data['w2_orderable_quantity']) ? $data['w2_orderable_quantity'] : null;
        $this->container['w2_unallocatable_quantity'] = isset($data['w2_unallocatable_quantity']) ? $data['w2_unallocatable_quantity'] : null;
        $this->container['w2_unavailable_quantity'] = isset($data['w2_unavailable_quantity']) ? $data['w2_unavailable_quantity'] : null;
        $this->container['w2_days_on_hand'] = isset($data['w2_days_on_hand']) ? $data['w2_days_on_hand'] : null;
        $this->container['w2_stock_status'] = isset($data['w2_stock_status']) ? $data['w2_stock_status'] : null;
        $this->container['w2_estimated_pallets'] = isset($data['w2_estimated_pallets']) ? $data['w2_estimated_pallets'] : null;
        $this->container['w2_estimated_cases'] = isset($data['w2_estimated_cases']) ? $data['w2_estimated_cases'] : null;
        $this->container['w2_estimated_inner_packs'] = isset($data['w2_estimated_inner_packs']) ? $data['w2_estimated_inner_packs'] : null;
        $this->container['w2_next_requested_delivery_date'] = isset($data['w2_next_requested_delivery_date']) ? $data['w2_next_requested_delivery_date'] : null;
        $this->container['warehouse3_id'] = isset($data['warehouse3_id']) ? $data['warehouse3_id'] : null;
        $this->container['w3_available_quantity'] = isset($data['w3_available_quantity']) ? $data['w3_available_quantity'] : null;
        $this->container['w3_damaged_quantity'] = isset($data['w3_damaged_quantity']) ? $data['w3_damaged_quantity'] : null;
        $this->container['w3_in_fulfillment_process_quantity'] = isset($data['w3_in_fulfillment_process_quantity']) ? $data['w3_in_fulfillment_process_quantity'] : null;
        $this->container['w3_on_hand_quantity'] = isset($data['w3_on_hand_quantity']) ? $data['w3_on_hand_quantity'] : null;
        $this->container['w3_open_order_quantity'] = isset($data['w3_open_order_quantity']) ? $data['w3_open_order_quantity'] : null;
        $this->container['w3_open_po_quantity'] = isset($data['w3_open_po_quantity']) ? $data['w3_open_po_quantity'] : null;
        $this->container['w3_orderable_quantity'] = isset($data['w3_orderable_quantity']) ? $data['w3_orderable_quantity'] : null;
        $this->container['w3_unallocatable_quantity'] = isset($data['w3_unallocatable_quantity']) ? $data['w3_unallocatable_quantity'] : null;
        $this->container['w3_unavailable_quantity'] = isset($data['w3_unavailable_quantity']) ? $data['w3_unavailable_quantity'] : null;
        $this->container['w3_days_on_hand'] = isset($data['w3_days_on_hand']) ? $data['w3_days_on_hand'] : null;
        $this->container['w3_stock_status'] = isset($data['w3_stock_status']) ? $data['w3_stock_status'] : null;
        $this->container['w3_estimated_pallets'] = isset($data['w3_estimated_pallets']) ? $data['w3_estimated_pallets'] : null;
        $this->container['w3_estimated_cases'] = isset($data['w3_estimated_cases']) ? $data['w3_estimated_cases'] : null;
        $this->container['w3_estimated_inner_packs'] = isset($data['w3_estimated_inner_packs']) ? $data['w3_estimated_inner_packs'] : null;
        $this->container['w3_next_requested_delivery_date'] = isset($data['w3_next_requested_delivery_date']) ? $data['w3_next_requested_delivery_date'] : null;
        $this->container['warehouse4_id'] = isset($data['warehouse4_id']) ? $data['warehouse4_id'] : null;
        $this->container['w4_available_quantity'] = isset($data['w4_available_quantity']) ? $data['w4_available_quantity'] : null;
        $this->container['w4_damaged_quantity'] = isset($data['w4_damaged_quantity']) ? $data['w4_damaged_quantity'] : null;
        $this->container['w4_in_fulfillment_process_quantity'] = isset($data['w4_in_fulfillment_process_quantity']) ? $data['w4_in_fulfillment_process_quantity'] : null;
        $this->container['w4_on_hand_quantity'] = isset($data['w4_on_hand_quantity']) ? $data['w4_on_hand_quantity'] : null;
        $this->container['w4_open_order_quantity'] = isset($data['w4_open_order_quantity']) ? $data['w4_open_order_quantity'] : null;
        $this->container['w4_open_po_quantity'] = isset($data['w4_open_po_quantity']) ? $data['w4_open_po_quantity'] : null;
        $this->container['w4_orderable_quantity'] = isset($data['w4_orderable_quantity']) ? $data['w4_orderable_quantity'] : null;
        $this->container['w4_unallocatable_quantity'] = isset($data['w4_unallocatable_quantity']) ? $data['w4_unallocatable_quantity'] : null;
        $this->container['w4_unavailable_quantity'] = isset($data['w4_unavailable_quantity']) ? $data['w4_unavailable_quantity'] : null;
        $this->container['w4_days_on_hand'] = isset($data['w4_days_on_hand']) ? $data['w4_days_on_hand'] : null;
        $this->container['w4_stock_status'] = isset($data['w4_stock_status']) ? $data['w4_stock_status'] : null;
        $this->container['w4_estimated_pallets'] = isset($data['w4_estimated_pallets']) ? $data['w4_estimated_pallets'] : null;
        $this->container['w4_estimated_cases'] = isset($data['w4_estimated_cases']) ? $data['w4_estimated_cases'] : null;
        $this->container['w4_estimated_inner_packs'] = isset($data['w4_estimated_inner_packs']) ? $data['w4_estimated_inner_packs'] : null;
        $this->container['w4_next_requested_delivery_date'] = isset($data['w4_next_requested_delivery_date']) ? $data['w4_next_requested_delivery_date'] : null;
        $this->container['warehouse5_id'] = isset($data['warehouse5_id']) ? $data['warehouse5_id'] : null;
        $this->container['w5_available_quantity'] = isset($data['w5_available_quantity']) ? $data['w5_available_quantity'] : null;
        $this->container['w5_damaged_quantity'] = isset($data['w5_damaged_quantity']) ? $data['w5_damaged_quantity'] : null;
        $this->container['w5_in_fulfillment_process_quantity'] = isset($data['w5_in_fulfillment_process_quantity']) ? $data['w5_in_fulfillment_process_quantity'] : null;
        $this->container['w5_on_hand_quantity'] = isset($data['w5_on_hand_quantity']) ? $data['w5_on_hand_quantity'] : null;
        $this->container['w5_open_order_quantity'] = isset($data['w5_open_order_quantity']) ? $data['w5_open_order_quantity'] : null;
        $this->container['w5_open_po_quantity'] = isset($data['w5_open_po_quantity']) ? $data['w5_open_po_quantity'] : null;
        $this->container['w5_orderable_quantity'] = isset($data['w5_orderable_quantity']) ? $data['w5_orderable_quantity'] : null;
        $this->container['w5_unallocatable_quantity'] = isset($data['w5_unallocatable_quantity']) ? $data['w5_unallocatable_quantity'] : null;
        $this->container['w5_unavailable_quantity'] = isset($data['w5_unavailable_quantity']) ? $data['w5_unavailable_quantity'] : null;
        $this->container['w5_days_on_hand'] = isset($data['w5_days_on_hand']) ? $data['w5_days_on_hand'] : null;
        $this->container['w5_stock_status'] = isset($data['w5_stock_status']) ? $data['w5_stock_status'] : null;
        $this->container['w5_estimated_pallets'] = isset($data['w5_estimated_pallets']) ? $data['w5_estimated_pallets'] : null;
        $this->container['w5_estimated_cases'] = isset($data['w5_estimated_cases']) ? $data['w5_estimated_cases'] : null;
        $this->container['w5_estimated_inner_packs'] = isset($data['w5_estimated_inner_packs']) ? $data['w5_estimated_inner_packs'] : null;
        $this->container['w5_next_requested_delivery_date'] = isset($data['w5_next_requested_delivery_date']) ? $data['w5_next_requested_delivery_date'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['major_group_id'] === null) {
            $invalidProperties[] = "'major_group_id' can't be null";
        }
        if ($this->container['sub_group_id'] === null) {
            $invalidProperties[] = "'sub_group_id' can't be null";
        }
        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['sku'] === null) {
            $invalidProperties[] = "'sku' can't be null";
        }
        if ($this->container['item_description'] === null) {
            $invalidProperties[] = "'item_description' can't be null";
        }
        if ($this->container['backorder'] === null) {
            $invalidProperties[] = "'backorder' can't be null";
        }
        if ($this->container['charge_code'] === null) {
            $invalidProperties[] = "'charge_code' can't be null";
        }
        if ($this->container['max_cycle'] === null) {
            $invalidProperties[] = "'max_cycle' can't be null";
        }
        if ($this->container['max_interim'] === null) {
            $invalidProperties[] = "'max_interim' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['seasonal_item'] === null) {
            $invalidProperties[] = "'seasonal_item' can't be null";
        }
        if ($this->container['secure'] === null) {
            $invalidProperties[] = "'secure' can't be null";
        }
        if ($this->container['unit_code'] === null) {
            $invalidProperties[] = "'unit_code' can't be null";
        }
        if ($this->container['forward_lot_mixing_rule'] === null) {
            $invalidProperties[] = "'forward_lot_mixing_rule' can't be null";
        }
        if ($this->container['storage_lot_mixing_rule'] === null) {
            $invalidProperties[] = "'storage_lot_mixing_rule' can't be null";
        }
        if ($this->container['forward_item_mixing_rule'] === null) {
            $invalidProperties[] = "'forward_item_mixing_rule' can't be null";
        }
        if ($this->container['storage_item_mixing_rule'] === null) {
            $invalidProperties[] = "'storage_item_mixing_rule' can't be null";
        }
        if ($this->container['allocation_rule'] === null) {
            $invalidProperties[] = "'allocation_rule' can't be null";
        }
        if ($this->container['receiving_criteria_scheme_id'] === null) {
            $invalidProperties[] = "'receiving_criteria_scheme_id' can't be null";
        }
        if ($this->container['hazmat'] === null) {
            $invalidProperties[] = "'hazmat' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['major_group_id'] === null) {
            return false;
        }
        if ($this->container['sub_group_id'] === null) {
            return false;
        }
        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['sku'] === null) {
            return false;
        }
        if ($this->container['item_description'] === null) {
            return false;
        }
        if ($this->container['backorder'] === null) {
            return false;
        }
        if ($this->container['charge_code'] === null) {
            return false;
        }
        if ($this->container['max_cycle'] === null) {
            return false;
        }
        if ($this->container['max_interim'] === null) {
            return false;
        }
        if ($this->container['status'] === null) {
            return false;
        }
        if ($this->container['seasonal_item'] === null) {
            return false;
        }
        if ($this->container['secure'] === null) {
            return false;
        }
        if ($this->container['unit_code'] === null) {
            return false;
        }
        if ($this->container['forward_lot_mixing_rule'] === null) {
            return false;
        }
        if ($this->container['storage_lot_mixing_rule'] === null) {
            return false;
        }
        if ($this->container['forward_item_mixing_rule'] === null) {
            return false;
        }
        if ($this->container['storage_item_mixing_rule'] === null) {
            return false;
        }
        if ($this->container['allocation_rule'] === null) {
            return false;
        }
        if ($this->container['receiving_criteria_scheme_id'] === null) {
            return false;
        }
        if ($this->container['hazmat'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets account_code_id
     *
     * @return int
     */
    public function getAccountCodeId()
    {
        return $this->container['account_code_id'];
    }

    /**
     * Sets account_code_id
     *
     * @param int $account_code_id account_code_id
     *
     * @return $this
     */
    public function setAccountCodeId($account_code_id)
    {
        $this->container['account_code_id'] = $account_code_id;

        return $this;
    }

    /**
     * Gets low_stock_contact_id
     *
     * @return int
     */
    public function getLowStockContactId()
    {
        return $this->container['low_stock_contact_id'];
    }

    /**
     * Sets low_stock_contact_id
     *
     * @param int $low_stock_contact_id low_stock_contact_id
     *
     * @return $this
     */
    public function setLowStockContactId($low_stock_contact_id)
    {
        $this->container['low_stock_contact_id'] = $low_stock_contact_id;

        return $this;
    }

    /**
     * Gets legacy_low_level_contact_id
     *
     * @return int
     */
    public function getLegacyLowLevelContactId()
    {
        return $this->container['legacy_low_level_contact_id'];
    }

    /**
     * Sets legacy_low_level_contact_id
     *
     * @param int $legacy_low_level_contact_id legacy_low_level_contact_id
     *
     * @return $this
     */
    public function setLegacyLowLevelContactId($legacy_low_level_contact_id)
    {
        $this->container['legacy_low_level_contact_id'] = $legacy_low_level_contact_id;

        return $this;
    }

    /**
     * Gets low_stock_code_id
     *
     * @return int
     */
    public function getLowStockCodeId()
    {
        return $this->container['low_stock_code_id'];
    }

    /**
     * Sets low_stock_code_id
     *
     * @param int $low_stock_code_id low_stock_code_id
     *
     * @return $this
     */
    public function setLowStockCodeId($low_stock_code_id)
    {
        $this->container['low_stock_code_id'] = $low_stock_code_id;

        return $this;
    }

    /**
     * Gets major_group_id
     *
     * @return int
     */
    public function getMajorGroupId()
    {
        return $this->container['major_group_id'];
    }

    /**
     * Sets major_group_id
     *
     * @param int $major_group_id major_group_id
     *
     * @return $this
     */
    public function setMajorGroupId($major_group_id)
    {
        $this->container['major_group_id'] = $major_group_id;

        return $this;
    }

    /**
     * Gets sub_group_id
     *
     * @return int
     */
    public function getSubGroupId()
    {
        return $this->container['sub_group_id'];
    }

    /**
     * Sets sub_group_id
     *
     * @param int $sub_group_id sub_group_id
     *
     * @return $this
     */
    public function setSubGroupId($sub_group_id)
    {
        $this->container['sub_group_id'] = $sub_group_id;

        return $this;
    }

    /**
     * Gets product_code_id
     *
     * @return int
     */
    public function getProductCodeId()
    {
        return $this->container['product_code_id'];
    }

    /**
     * Sets product_code_id
     *
     * @param int $product_code_id product_code_id
     *
     * @return $this
     */
    public function setProductCodeId($product_code_id)
    {
        $this->container['product_code_id'] = $product_code_id;

        return $this;
    }

    /**
     * Gets summary_code_id
     *
     * @return int
     */
    public function getSummaryCodeId()
    {
        return $this->container['summary_code_id'];
    }

    /**
     * Sets summary_code_id
     *
     * @param int $summary_code_id summary_code_id
     *
     * @return $this
     */
    public function setSummaryCodeId($summary_code_id)
    {
        $this->container['summary_code_id'] = $summary_code_id;

        return $this;
    }

    /**
     * Gets buyer_id
     *
     * @return int
     */
    public function getBuyerId()
    {
        return $this->container['buyer_id'];
    }

    /**
     * Sets buyer_id
     *
     * @param int $buyer_id buyer_id
     *
     * @return $this
     */
    public function setBuyerId($buyer_id)
    {
        $this->container['buyer_id'] = $buyer_id;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string $sku sku
     *
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets vendor_sku
     *
     * @return string
     */
    public function getVendorSku()
    {
        return $this->container['vendor_sku'];
    }

    /**
     * Sets vendor_sku
     *
     * @param string $vendor_sku vendor_sku
     *
     * @return $this
     */
    public function setVendorSku($vendor_sku)
    {
        $this->container['vendor_sku'] = $vendor_sku;

        return $this;
    }

    /**
     * Gets upc
     *
     * @return string
     */
    public function getUpc()
    {
        return $this->container['upc'];
    }

    /**
     * Sets upc
     *
     * @param string $upc upc
     *
     * @return $this
     */
    public function setUpc($upc)
    {
        $this->container['upc'] = $upc;

        return $this;
    }

    /**
     * Gets item_description
     *
     * @return string
     */
    public function getItemDescription()
    {
        return $this->container['item_description'];
    }

    /**
     * Sets item_description
     *
     * @param string $item_description item_description
     *
     * @return $this
     */
    public function setItemDescription($item_description)
    {
        $this->container['item_description'] = $item_description;

        return $this;
    }

    /**
     * Gets packing_slip_description
     *
     * @return string
     */
    public function getPackingSlipDescription()
    {
        return $this->container['packing_slip_description'];
    }

    /**
     * Sets packing_slip_description
     *
     * @param string $packing_slip_description packing_slip_description
     *
     * @return $this
     */
    public function setPackingSlipDescription($packing_slip_description)
    {
        $this->container['packing_slip_description'] = $packing_slip_description;

        return $this;
    }

    /**
     * Gets absolute_max
     *
     * @return string
     */
    public function getAbsoluteMax()
    {
        return $this->container['absolute_max'];
    }

    /**
     * Sets absolute_max
     *
     * @param string $absolute_max absolute_max
     *
     * @return $this
     */
    public function setAbsoluteMax($absolute_max)
    {
        $this->container['absolute_max'] = $absolute_max;

        return $this;
    }

    /**
     * Gets additional_description
     *
     * @return string
     */
    public function getAdditionalDescription()
    {
        return $this->container['additional_description'];
    }

    /**
     * Sets additional_description
     *
     * @param string $additional_description additional_description
     *
     * @return $this
     */
    public function setAdditionalDescription($additional_description)
    {
        $this->container['additional_description'] = $additional_description;

        return $this;
    }

    /**
     * Gets backorder
     *
     * @return string
     */
    public function getBackorder()
    {
        return $this->container['backorder'];
    }

    /**
     * Sets backorder
     *
     * @param string $backorder backorder
     *
     * @return $this
     */
    public function setBackorder($backorder)
    {
        $this->container['backorder'] = $backorder;

        return $this;
    }

    /**
     * Gets charge_code
     *
     * @return string
     */
    public function getChargeCode()
    {
        return $this->container['charge_code'];
    }

    /**
     * Sets charge_code
     *
     * @param string $charge_code charge_code
     *
     * @return $this
     */
    public function setChargeCode($charge_code)
    {
        $this->container['charge_code'] = $charge_code;

        return $this;
    }

    /**
     * Gets commodity_code_id
     *
     * @return int
     */
    public function getCommodityCodeId()
    {
        return $this->container['commodity_code_id'];
    }

    /**
     * Sets commodity_code_id
     *
     * @param int $commodity_code_id commodity_code_id
     *
     * @return $this
     */
    public function setCommodityCodeId($commodity_code_id)
    {
        $this->container['commodity_code_id'] = $commodity_code_id;

        return $this;
    }

    /**
     * Gets companion_code
     *
     * @return int
     */
    public function getCompanionCode()
    {
        return $this->container['companion_code'];
    }

    /**
     * Sets companion_code
     *
     * @param int $companion_code companion_code
     *
     * @return $this
     */
    public function setCompanionCode($companion_code)
    {
        $this->container['companion_code'] = $companion_code;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets critical_amount
     *
     * @return int
     */
    public function getCriticalAmount()
    {
        return $this->container['critical_amount'];
    }

    /**
     * Sets critical_amount
     *
     * @param int $critical_amount critical_amount
     *
     * @return $this
     */
    public function setCriticalAmount($critical_amount)
    {
        $this->container['critical_amount'] = $critical_amount;

        return $this;
    }

    /**
     * Gets overall_fixed_reorder_point
     *
     * @return int
     */
    public function getOverallFixedReorderPoint()
    {
        return $this->container['overall_fixed_reorder_point'];
    }

    /**
     * Sets overall_fixed_reorder_point
     *
     * @param int $overall_fixed_reorder_point overall_fixed_reorder_point
     *
     * @return $this
     */
    public function setOverallFixedReorderPoint($overall_fixed_reorder_point)
    {
        $this->container['overall_fixed_reorder_point'] = $overall_fixed_reorder_point;

        return $this;
    }

    /**
     * Gets overall_lead_time
     *
     * @return int
     */
    public function getOverallLeadTime()
    {
        return $this->container['overall_lead_time'];
    }

    /**
     * Sets overall_lead_time
     *
     * @param int $overall_lead_time overall_lead_time
     *
     * @return $this
     */
    public function setOverallLeadTime($overall_lead_time)
    {
        $this->container['overall_lead_time'] = $overall_lead_time;

        return $this;
    }

    /**
     * Gets sell_price
     *
     * @return float
     */
    public function getSellPrice()
    {
        return $this->container['sell_price'];
    }

    /**
     * Sets sell_price
     *
     * @param float $sell_price sell_price
     *
     * @return $this
     */
    public function setSellPrice($sell_price)
    {
        $this->container['sell_price'] = $sell_price;

        return $this;
    }

    /**
     * Gets pricing_per
     *
     * @return string
     */
    public function getPricingPer()
    {
        return $this->container['pricing_per'];
    }

    /**
     * Sets pricing_per
     *
     * @param string $pricing_per pricing_per
     *
     * @return $this
     */
    public function setPricingPer($pricing_per)
    {
        $this->container['pricing_per'] = $pricing_per;

        return $this;
    }

    /**
     * Gets lot_control_flag
     *
     * @return string
     */
    public function getLotControlFlag()
    {
        return $this->container['lot_control_flag'];
    }

    /**
     * Sets lot_control_flag
     *
     * @param string $lot_control_flag lot_control_flag
     *
     * @return $this
     */
    public function setLotControlFlag($lot_control_flag)
    {
        $this->container['lot_control_flag'] = $lot_control_flag;

        return $this;
    }

    /**
     * Gets max_cycle
     *
     * @return int
     */
    public function getMaxCycle()
    {
        return $this->container['max_cycle'];
    }

    /**
     * Sets max_cycle
     *
     * @param int $max_cycle max_cycle
     *
     * @return $this
     */
    public function setMaxCycle($max_cycle)
    {
        $this->container['max_cycle'] = $max_cycle;

        return $this;
    }

    /**
     * Gets max_interim
     *
     * @return int
     */
    public function getMaxInterim()
    {
        return $this->container['max_interim'];
    }

    /**
     * Sets max_interim
     *
     * @param int $max_interim max_interim
     *
     * @return $this
     */
    public function setMaxInterim($max_interim)
    {
        $this->container['max_interim'] = $max_interim;

        return $this;
    }

    /**
     * Gets numeric_sort_order
     *
     * @return int
     */
    public function getNumericSortOrder()
    {
        return $this->container['numeric_sort_order'];
    }

    /**
     * Sets numeric_sort_order
     *
     * @param int $numeric_sort_order numeric_sort_order
     *
     * @return $this
     */
    public function setNumericSortOrder($numeric_sort_order)
    {
        $this->container['numeric_sort_order'] = $numeric_sort_order;

        return $this;
    }

    /**
     * Gets outside_vendor_id
     *
     * @return int
     */
    public function getOutsideVendorId()
    {
        return $this->container['outside_vendor_id'];
    }

    /**
     * Sets outside_vendor_id
     *
     * @param int $outside_vendor_id outside_vendor_id
     *
     * @return $this
     */
    public function setOutsideVendorId($outside_vendor_id)
    {
        $this->container['outside_vendor_id'] = $outside_vendor_id;

        return $this;
    }

    /**
     * Gets pick_code
     *
     * @return string
     */
    public function getPickCode()
    {
        return $this->container['pick_code'];
    }

    /**
     * Sets pick_code
     *
     * @param string $pick_code pick_code
     *
     * @return $this
     */
    public function setPickCode($pick_code)
    {
        $this->container['pick_code'] = $pick_code;

        return $this;
    }

    /**
     * Gets pod_order_suffix
     *
     * @return int
     */
    public function getPodOrderSuffix()
    {
        return $this->container['pod_order_suffix'];
    }

    /**
     * Sets pod_order_suffix
     *
     * @param int $pod_order_suffix pod_order_suffix
     *
     * @return $this
     */
    public function setPodOrderSuffix($pod_order_suffix)
    {
        $this->container['pod_order_suffix'] = $pod_order_suffix;

        return $this;
    }

    /**
     * Gets pod_rev_date
     *
     * @return string
     */
    public function getPodRevDate()
    {
        return $this->container['pod_rev_date'];
    }

    /**
     * Sets pod_rev_date
     *
     * @param string $pod_rev_date pod_rev_date
     *
     * @return $this
     */
    public function setPodRevDate($pod_rev_date)
    {
        $this->container['pod_rev_date'] = $pod_rev_date;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets seasonal_item
     *
     * @return string
     */
    public function getSeasonalItem()
    {
        return $this->container['seasonal_item'];
    }

    /**
     * Sets seasonal_item
     *
     * @param string $seasonal_item seasonal_item
     *
     * @return $this
     */
    public function setSeasonalItem($seasonal_item)
    {
        $this->container['seasonal_item'] = $seasonal_item;

        return $this;
    }

    /**
     * Gets requires_production_lot
     *
     * @return string
     */
    public function getRequiresProductionLot()
    {
        return $this->container['requires_production_lot'];
    }

    /**
     * Sets requires_production_lot
     *
     * @param string $requires_production_lot requires_production_lot
     *
     * @return $this
     */
    public function setRequiresProductionLot($requires_production_lot)
    {
        $this->container['requires_production_lot'] = $requires_production_lot;

        return $this;
    }

    /**
     * Gets sector
     *
     * @return string
     */
    public function getSector()
    {
        return $this->container['sector'];
    }

    /**
     * Sets sector
     *
     * @param string $sector sector
     *
     * @return $this
     */
    public function setSector($sector)
    {
        $this->container['sector'] = $sector;

        return $this;
    }

    /**
     * Gets secure
     *
     * @return string
     */
    public function getSecure()
    {
        return $this->container['secure'];
    }

    /**
     * Sets secure
     *
     * @param string $secure secure
     *
     * @return $this
     */
    public function setSecure($secure)
    {
        $this->container['secure'] = $secure;

        return $this;
    }

    /**
     * Gets serial_code
     *
     * @return string
     */
    public function getSerialCode()
    {
        return $this->container['serial_code'];
    }

    /**
     * Sets serial_code
     *
     * @param string $serial_code serial_code
     *
     * @return $this
     */
    public function setSerialCode($serial_code)
    {
        $this->container['serial_code'] = $serial_code;

        return $this;
    }

    /**
     * Gets unit_code
     *
     * @return string
     */
    public function getUnitCode()
    {
        return $this->container['unit_code'];
    }

    /**
     * Sets unit_code
     *
     * @param string $unit_code unit_code
     *
     * @return $this
     */
    public function setUnitCode($unit_code)
    {
        $this->container['unit_code'] = $unit_code;

        return $this;
    }

    /**
     * Gets units_per_wrap
     *
     * @return int
     */
    public function getUnitsPerWrap()
    {
        return $this->container['units_per_wrap'];
    }

    /**
     * Sets units_per_wrap
     *
     * @param int $units_per_wrap units_per_wrap
     *
     * @return $this
     */
    public function setUnitsPerWrap($units_per_wrap)
    {
        $this->container['units_per_wrap'] = $units_per_wrap;

        return $this;
    }

    /**
     * Gets weight_per_wrap
     *
     * @return float
     */
    public function getWeightPerWrap()
    {
        return $this->container['weight_per_wrap'];
    }

    /**
     * Sets weight_per_wrap
     *
     * @param float $weight_per_wrap weight_per_wrap
     *
     * @return $this
     */
    public function setWeightPerWrap($weight_per_wrap)
    {
        $this->container['weight_per_wrap'] = $weight_per_wrap;

        return $this;
    }

    /**
     * Gets quantity_per_inner_pack
     *
     * @return int
     */
    public function getQuantityPerInnerPack()
    {
        return $this->container['quantity_per_inner_pack'];
    }

    /**
     * Sets quantity_per_inner_pack
     *
     * @param int $quantity_per_inner_pack quantity_per_inner_pack
     *
     * @return $this
     */
    public function setQuantityPerInnerPack($quantity_per_inner_pack)
    {
        $this->container['quantity_per_inner_pack'] = $quantity_per_inner_pack;

        return $this;
    }

    /**
     * Gets quantity_per_case
     *
     * @return int
     */
    public function getQuantityPerCase()
    {
        return $this->container['quantity_per_case'];
    }

    /**
     * Sets quantity_per_case
     *
     * @param int $quantity_per_case quantity_per_case
     *
     * @return $this
     */
    public function setQuantityPerCase($quantity_per_case)
    {
        $this->container['quantity_per_case'] = $quantity_per_case;

        return $this;
    }

    /**
     * Gets quantity_per_pallet
     *
     * @return int
     */
    public function getQuantityPerPallet()
    {
        return $this->container['quantity_per_pallet'];
    }

    /**
     * Sets quantity_per_pallet
     *
     * @param int $quantity_per_pallet quantity_per_pallet
     *
     * @return $this
     */
    public function setQuantityPerPallet($quantity_per_pallet)
    {
        $this->container['quantity_per_pallet'] = $quantity_per_pallet;

        return $this;
    }

    /**
     * Gets inner_pack_barcode
     *
     * @return string
     */
    public function getInnerPackBarcode()
    {
        return $this->container['inner_pack_barcode'];
    }

    /**
     * Sets inner_pack_barcode
     *
     * @param string $inner_pack_barcode inner_pack_barcode
     *
     * @return $this
     */
    public function setInnerPackBarcode($inner_pack_barcode)
    {
        $this->container['inner_pack_barcode'] = $inner_pack_barcode;

        return $this;
    }

    /**
     * Gets case_barcode
     *
     * @return string
     */
    public function getCaseBarcode()
    {
        return $this->container['case_barcode'];
    }

    /**
     * Sets case_barcode
     *
     * @param string $case_barcode case_barcode
     *
     * @return $this
     */
    public function setCaseBarcode($case_barcode)
    {
        $this->container['case_barcode'] = $case_barcode;

        return $this;
    }

    /**
     * Gets pallet_barcode
     *
     * @return string
     */
    public function getPalletBarcode()
    {
        return $this->container['pallet_barcode'];
    }

    /**
     * Sets pallet_barcode
     *
     * @param string $pallet_barcode pallet_barcode
     *
     * @return $this
     */
    public function setPalletBarcode($pallet_barcode)
    {
        $this->container['pallet_barcode'] = $pallet_barcode;

        return $this;
    }

    /**
     * Gets void_date
     *
     * @return \DateTime
     */
    public function getVoidDate()
    {
        return $this->container['void_date'];
    }

    /**
     * Sets void_date
     *
     * @param \DateTime $void_date void_date
     *
     * @return $this
     */
    public function setVoidDate($void_date)
    {
        $this->container['void_date'] = $void_date;

        return $this;
    }

    /**
     * Gets wrap_code
     *
     * @return string
     */
    public function getWrapCode()
    {
        return $this->container['wrap_code'];
    }

    /**
     * Sets wrap_code
     *
     * @param string $wrap_code wrap_code
     *
     * @return $this
     */
    public function setWrapCode($wrap_code)
    {
        $this->container['wrap_code'] = $wrap_code;

        return $this;
    }

    /**
     * Gets extrinsic_text1
     *
     * @return string
     */
    public function getExtrinsicText1()
    {
        return $this->container['extrinsic_text1'];
    }

    /**
     * Sets extrinsic_text1
     *
     * @param string $extrinsic_text1 extrinsic_text1
     *
     * @return $this
     */
    public function setExtrinsicText1($extrinsic_text1)
    {
        $this->container['extrinsic_text1'] = $extrinsic_text1;

        return $this;
    }

    /**
     * Gets extrinsic_text2
     *
     * @return string
     */
    public function getExtrinsicText2()
    {
        return $this->container['extrinsic_text2'];
    }

    /**
     * Sets extrinsic_text2
     *
     * @param string $extrinsic_text2 extrinsic_text2
     *
     * @return $this
     */
    public function setExtrinsicText2($extrinsic_text2)
    {
        $this->container['extrinsic_text2'] = $extrinsic_text2;

        return $this;
    }

    /**
     * Gets extrinsic_text3
     *
     * @return string
     */
    public function getExtrinsicText3()
    {
        return $this->container['extrinsic_text3'];
    }

    /**
     * Sets extrinsic_text3
     *
     * @param string $extrinsic_text3 extrinsic_text3
     *
     * @return $this
     */
    public function setExtrinsicText3($extrinsic_text3)
    {
        $this->container['extrinsic_text3'] = $extrinsic_text3;

        return $this;
    }

    /**
     * Gets extrinsic_number1
     *
     * @return int
     */
    public function getExtrinsicNumber1()
    {
        return $this->container['extrinsic_number1'];
    }

    /**
     * Sets extrinsic_number1
     *
     * @param int $extrinsic_number1 extrinsic_number1
     *
     * @return $this
     */
    public function setExtrinsicNumber1($extrinsic_number1)
    {
        $this->container['extrinsic_number1'] = $extrinsic_number1;

        return $this;
    }

    /**
     * Gets extrinsic_number2
     *
     * @return int
     */
    public function getExtrinsicNumber2()
    {
        return $this->container['extrinsic_number2'];
    }

    /**
     * Sets extrinsic_number2
     *
     * @param int $extrinsic_number2 extrinsic_number2
     *
     * @return $this
     */
    public function setExtrinsicNumber2($extrinsic_number2)
    {
        $this->container['extrinsic_number2'] = $extrinsic_number2;

        return $this;
    }

    /**
     * Gets extrinsic_decimal1
     *
     * @return float
     */
    public function getExtrinsicDecimal1()
    {
        return $this->container['extrinsic_decimal1'];
    }

    /**
     * Sets extrinsic_decimal1
     *
     * @param float $extrinsic_decimal1 extrinsic_decimal1
     *
     * @return $this
     */
    public function setExtrinsicDecimal1($extrinsic_decimal1)
    {
        $this->container['extrinsic_decimal1'] = $extrinsic_decimal1;

        return $this;
    }

    /**
     * Gets extrinsic_decimal2
     *
     * @return float
     */
    public function getExtrinsicDecimal2()
    {
        return $this->container['extrinsic_decimal2'];
    }

    /**
     * Sets extrinsic_decimal2
     *
     * @param float $extrinsic_decimal2 extrinsic_decimal2
     *
     * @return $this
     */
    public function setExtrinsicDecimal2($extrinsic_decimal2)
    {
        $this->container['extrinsic_decimal2'] = $extrinsic_decimal2;

        return $this;
    }

    /**
     * Gets casebreak_enabled
     *
     * @return string
     */
    public function getCasebreakEnabled()
    {
        return $this->container['casebreak_enabled'];
    }

    /**
     * Sets casebreak_enabled
     *
     * @param string $casebreak_enabled casebreak_enabled
     *
     * @return $this
     */
    public function setCasebreakEnabled($casebreak_enabled)
    {
        $this->container['casebreak_enabled'] = $casebreak_enabled;

        return $this;
    }

    /**
     * Gets vendor_id
     *
     * @return int
     */
    public function getVendorId()
    {
        return $this->container['vendor_id'];
    }

    /**
     * Sets vendor_id
     *
     * @param int $vendor_id vendor_id
     *
     * @return $this
     */
    public function setVendorId($vendor_id)
    {
        $this->container['vendor_id'] = $vendor_id;

        return $this;
    }

    /**
     * Gets vendor_price
     *
     * @return float
     */
    public function getVendorPrice()
    {
        return $this->container['vendor_price'];
    }

    /**
     * Sets vendor_price
     *
     * @param float $vendor_price vendor_price
     *
     * @return $this
     */
    public function setVendorPrice($vendor_price)
    {
        $this->container['vendor_price'] = $vendor_price;

        return $this;
    }

    /**
     * Gets vendor_per
     *
     * @return string
     */
    public function getVendorPer()
    {
        return $this->container['vendor_per'];
    }

    /**
     * Sets vendor_per
     *
     * @param string $vendor_per vendor_per
     *
     * @return $this
     */
    public function setVendorPer($vendor_per)
    {
        $this->container['vendor_per'] = $vendor_per;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets primary_image
     *
     * @return string
     */
    public function getPrimaryImage()
    {
        return $this->container['primary_image'];
    }

    /**
     * Sets primary_image
     *
     * @param string $primary_image primary_image
     *
     * @return $this
     */
    public function setPrimaryImage($primary_image)
    {
        $this->container['primary_image'] = $primary_image;

        return $this;
    }

    /**
     * Gets pick_image
     *
     * @return string
     */
    public function getPickImage()
    {
        return $this->container['pick_image'];
    }

    /**
     * Sets pick_image
     *
     * @param string $pick_image pick_image
     *
     * @return $this
     */
    public function setPickImage($pick_image)
    {
        $this->container['pick_image'] = $pick_image;

        return $this;
    }

    /**
     * Gets behavior_type
     *
     * @return string
     */
    public function getBehaviorType()
    {
        return $this->container['behavior_type'];
    }

    /**
     * Sets behavior_type
     *
     * @param string $behavior_type behavior_type
     *
     * @return $this
     */
    public function setBehaviorType($behavior_type)
    {
        $this->container['behavior_type'] = $behavior_type;

        return $this;
    }

    /**
     * Gets assembly_instructions
     *
     * @return string
     */
    public function getAssemblyInstructions()
    {
        return $this->container['assembly_instructions'];
    }

    /**
     * Sets assembly_instructions
     *
     * @param string $assembly_instructions assembly_instructions
     *
     * @return $this
     */
    public function setAssemblyInstructions($assembly_instructions)
    {
        $this->container['assembly_instructions'] = $assembly_instructions;

        return $this;
    }

    /**
     * Gets forward_lot_mixing_rule
     *
     * @return string
     */
    public function getForwardLotMixingRule()
    {
        return $this->container['forward_lot_mixing_rule'];
    }

    /**
     * Sets forward_lot_mixing_rule
     *
     * @param string $forward_lot_mixing_rule forward_lot_mixing_rule
     *
     * @return $this
     */
    public function setForwardLotMixingRule($forward_lot_mixing_rule)
    {
        $this->container['forward_lot_mixing_rule'] = $forward_lot_mixing_rule;

        return $this;
    }

    /**
     * Gets storage_lot_mixing_rule
     *
     * @return string
     */
    public function getStorageLotMixingRule()
    {
        return $this->container['storage_lot_mixing_rule'];
    }

    /**
     * Sets storage_lot_mixing_rule
     *
     * @param string $storage_lot_mixing_rule storage_lot_mixing_rule
     *
     * @return $this
     */
    public function setStorageLotMixingRule($storage_lot_mixing_rule)
    {
        $this->container['storage_lot_mixing_rule'] = $storage_lot_mixing_rule;

        return $this;
    }

    /**
     * Gets forward_item_mixing_rule
     *
     * @return string
     */
    public function getForwardItemMixingRule()
    {
        return $this->container['forward_item_mixing_rule'];
    }

    /**
     * Sets forward_item_mixing_rule
     *
     * @param string $forward_item_mixing_rule forward_item_mixing_rule
     *
     * @return $this
     */
    public function setForwardItemMixingRule($forward_item_mixing_rule)
    {
        $this->container['forward_item_mixing_rule'] = $forward_item_mixing_rule;

        return $this;
    }

    /**
     * Gets storage_item_mixing_rule
     *
     * @return string
     */
    public function getStorageItemMixingRule()
    {
        return $this->container['storage_item_mixing_rule'];
    }

    /**
     * Sets storage_item_mixing_rule
     *
     * @param string $storage_item_mixing_rule storage_item_mixing_rule
     *
     * @return $this
     */
    public function setStorageItemMixingRule($storage_item_mixing_rule)
    {
        $this->container['storage_item_mixing_rule'] = $storage_item_mixing_rule;

        return $this;
    }

    /**
     * Gets allocation_rule
     *
     * @return string
     */
    public function getAllocationRule()
    {
        return $this->container['allocation_rule'];
    }

    /**
     * Sets allocation_rule
     *
     * @param string $allocation_rule allocation_rule
     *
     * @return $this
     */
    public function setAllocationRule($allocation_rule)
    {
        $this->container['allocation_rule'] = $allocation_rule;

        return $this;
    }

    /**
     * Gets allocation_sort
     *
     * @return string
     */
    public function getAllocationSort()
    {
        return $this->container['allocation_sort'];
    }

    /**
     * Sets allocation_sort
     *
     * @param string $allocation_sort allocation_sort
     *
     * @return $this
     */
    public function setAllocationSort($allocation_sort)
    {
        $this->container['allocation_sort'] = $allocation_sort;

        return $this;
    }

    /**
     * Gets allocation_field
     *
     * @return string
     */
    public function getAllocationField()
    {
        return $this->container['allocation_field'];
    }

    /**
     * Sets allocation_field
     *
     * @param string $allocation_field allocation_field
     *
     * @return $this
     */
    public function setAllocationField($allocation_field)
    {
        $this->container['allocation_field'] = $allocation_field;

        return $this;
    }

    /**
     * Gets barcode_field
     *
     * @return string
     */
    public function getBarcodeField()
    {
        return $this->container['barcode_field'];
    }

    /**
     * Sets barcode_field
     *
     * @param string $barcode_field barcode_field
     *
     * @return $this
     */
    public function setBarcodeField($barcode_field)
    {
        $this->container['barcode_field'] = $barcode_field;

        return $this;
    }

    /**
     * Gets warehouse_display_field
     *
     * @return string
     */
    public function getWarehouseDisplayField()
    {
        return $this->container['warehouse_display_field'];
    }

    /**
     * Sets warehouse_display_field
     *
     * @param string $warehouse_display_field warehouse_display_field
     *
     * @return $this
     */
    public function setWarehouseDisplayField($warehouse_display_field)
    {
        $this->container['warehouse_display_field'] = $warehouse_display_field;

        return $this;
    }

    /**
     * Gets product_id_tag_scheme_id
     *
     * @return int
     */
    public function getProductIdTagSchemeId()
    {
        return $this->container['product_id_tag_scheme_id'];
    }

    /**
     * Sets product_id_tag_scheme_id
     *
     * @param int $product_id_tag_scheme_id product_id_tag_scheme_id
     *
     * @return $this
     */
    public function setProductIdTagSchemeId($product_id_tag_scheme_id)
    {
        $this->container['product_id_tag_scheme_id'] = $product_id_tag_scheme_id;

        return $this;
    }

    /**
     * Gets item_serial_scheme_id
     *
     * @return int
     */
    public function getItemSerialSchemeId()
    {
        return $this->container['item_serial_scheme_id'];
    }

    /**
     * Sets item_serial_scheme_id
     *
     * @param int $item_serial_scheme_id item_serial_scheme_id
     *
     * @return $this
     */
    public function setItemSerialSchemeId($item_serial_scheme_id)
    {
        $this->container['item_serial_scheme_id'] = $item_serial_scheme_id;

        return $this;
    }

    /**
     * Gets receiving_criteria_scheme_id
     *
     * @return int
     */
    public function getReceivingCriteriaSchemeId()
    {
        return $this->container['receiving_criteria_scheme_id'];
    }

    /**
     * Sets receiving_criteria_scheme_id
     *
     * @param int $receiving_criteria_scheme_id receiving_criteria_scheme_id
     *
     * @return $this
     */
    public function setReceivingCriteriaSchemeId($receiving_criteria_scheme_id)
    {
        $this->container['receiving_criteria_scheme_id'] = $receiving_criteria_scheme_id;

        return $this;
    }

    /**
     * Gets asn_rule
     *
     * @return string
     */
    public function getAsnRule()
    {
        return $this->container['asn_rule'];
    }

    /**
     * Sets asn_rule
     *
     * @param string $asn_rule asn_rule
     *
     * @return $this
     */
    public function setAsnRule($asn_rule)
    {
        $this->container['asn_rule'] = $asn_rule;

        return $this;
    }

    /**
     * Gets quantity_type
     *
     * @return string
     */
    public function getQuantityType()
    {
        return $this->container['quantity_type'];
    }

    /**
     * Sets quantity_type
     *
     * @param string $quantity_type quantity_type
     *
     * @return $this
     */
    public function setQuantityType($quantity_type)
    {
        $this->container['quantity_type'] = $quantity_type;

        return $this;
    }

    /**
     * Gets hazmat
     *
     * @return string
     */
    public function getHazmat()
    {
        return $this->container['hazmat'];
    }

    /**
     * Sets hazmat
     *
     * @param string $hazmat hazmat
     *
     * @return $this
     */
    public function setHazmat($hazmat)
    {
        $this->container['hazmat'] = $hazmat;

        return $this;
    }

    /**
     * Gets is_alcohol
     *
     * @return bool
     */
    public function getIsAlcohol()
    {
        return $this->container['is_alcohol'];
    }

    /**
     * Sets is_alcohol
     *
     * @param bool $is_alcohol is_alcohol
     *
     * @return $this
     */
    public function setIsAlcohol($is_alcohol)
    {
        $this->container['is_alcohol'] = $is_alcohol;

        return $this;
    }

    /**
     * Gets alcohol_type
     *
     * @return string
     */
    public function getAlcoholType()
    {
        return $this->container['alcohol_type'];
    }

    /**
     * Sets alcohol_type
     *
     * @param string $alcohol_type alcohol_type
     *
     * @return $this
     */
    public function setAlcoholType($alcohol_type)
    {
        $this->container['alcohol_type'] = $alcohol_type;

        return $this;
    }

    /**
     * Gets alcohol_content
     *
     * @return float
     */
    public function getAlcoholContent()
    {
        return $this->container['alcohol_content'];
    }

    /**
     * Sets alcohol_content
     *
     * @param float $alcohol_content alcohol_content
     *
     * @return $this
     */
    public function setAlcoholContent($alcohol_content)
    {
        $this->container['alcohol_content'] = $alcohol_content;

        return $this;
    }

    /**
     * Gets alcohol_container
     *
     * @return string
     */
    public function getAlcoholContainer()
    {
        return $this->container['alcohol_container'];
    }

    /**
     * Sets alcohol_container
     *
     * @param string $alcohol_container alcohol_container
     *
     * @return $this
     */
    public function setAlcoholContainer($alcohol_container)
    {
        $this->container['alcohol_container'] = $alcohol_container;

        return $this;
    }

    /**
     * Gets alcohol_vintage_year
     *
     * @return string
     */
    public function getAlcoholVintageYear()
    {
        return $this->container['alcohol_vintage_year'];
    }

    /**
     * Sets alcohol_vintage_year
     *
     * @param string $alcohol_vintage_year alcohol_vintage_year
     *
     * @return $this
     */
    public function setAlcoholVintageYear($alcohol_vintage_year)
    {
        $this->container['alcohol_vintage_year'] = $alcohol_vintage_year;

        return $this;
    }

    /**
     * Gets alcohol_country
     *
     * @return string
     */
    public function getAlcoholCountry()
    {
        return $this->container['alcohol_country'];
    }

    /**
     * Sets alcohol_country
     *
     * @param string $alcohol_country alcohol_country
     *
     * @return $this
     */
    public function setAlcoholCountry($alcohol_country)
    {
        $this->container['alcohol_country'] = $alcohol_country;

        return $this;
    }

    /**
     * Gets alcohol_state
     *
     * @return string
     */
    public function getAlcoholState()
    {
        return $this->container['alcohol_state'];
    }

    /**
     * Sets alcohol_state
     *
     * @param string $alcohol_state alcohol_state
     *
     * @return $this
     */
    public function setAlcoholState($alcohol_state)
    {
        $this->container['alcohol_state'] = $alcohol_state;

        return $this;
    }

    /**
     * Gets alcohol_region
     *
     * @return string
     */
    public function getAlcoholRegion()
    {
        return $this->container['alcohol_region'];
    }

    /**
     * Sets alcohol_region
     *
     * @param string $alcohol_region alcohol_region
     *
     * @return $this
     */
    public function setAlcoholRegion($alcohol_region)
    {
        $this->container['alcohol_region'] = $alcohol_region;

        return $this;
    }

    /**
     * Gets alcohol_brand
     *
     * @return string
     */
    public function getAlcoholBrand()
    {
        return $this->container['alcohol_brand'];
    }

    /**
     * Sets alcohol_brand
     *
     * @param string $alcohol_brand alcohol_brand
     *
     * @return $this
     */
    public function setAlcoholBrand($alcohol_brand)
    {
        $this->container['alcohol_brand'] = $alcohol_brand;

        return $this;
    }

    /**
     * Gets alcohol_upc_code
     *
     * @return string
     */
    public function getAlcoholUpcCode()
    {
        return $this->container['alcohol_upc_code'];
    }

    /**
     * Sets alcohol_upc_code
     *
     * @param string $alcohol_upc_code alcohol_upc_code
     *
     * @return $this
     */
    public function setAlcoholUpcCode($alcohol_upc_code)
    {
        $this->container['alcohol_upc_code'] = $alcohol_upc_code;

        return $this;
    }

    /**
     * Gets alcohol_nambca_code
     *
     * @return string
     */
    public function getAlcoholNambcaCode()
    {
        return $this->container['alcohol_nambca_code'];
    }

    /**
     * Sets alcohol_nambca_code
     *
     * @param string $alcohol_nambca_code alcohol_nambca_code
     *
     * @return $this
     */
    public function setAlcoholNambcaCode($alcohol_nambca_code)
    {
        $this->container['alcohol_nambca_code'] = $alcohol_nambca_code;

        return $this;
    }

    /**
     * Gets alcohol_unimerc_code
     *
     * @return string
     */
    public function getAlcoholUnimercCode()
    {
        return $this->container['alcohol_unimerc_code'];
    }

    /**
     * Sets alcohol_unimerc_code
     *
     * @param string $alcohol_unimerc_code alcohol_unimerc_code
     *
     * @return $this
     */
    public function setAlcoholUnimercCode($alcohol_unimerc_code)
    {
        $this->container['alcohol_unimerc_code'] = $alcohol_unimerc_code;

        return $this;
    }

    /**
     * Gets alcohol_scc_code
     *
     * @return string
     */
    public function getAlcoholSccCode()
    {
        return $this->container['alcohol_scc_code'];
    }

    /**
     * Sets alcohol_scc_code
     *
     * @param string $alcohol_scc_code alcohol_scc_code
     *
     * @return $this
     */
    public function setAlcoholSccCode($alcohol_scc_code)
    {
        $this->container['alcohol_scc_code'] = $alcohol_scc_code;

        return $this;
    }

    /**
     * Gets length
     *
     * @return float
     */
    public function getLength()
    {
        return $this->container['length'];
    }

    /**
     * Sets length
     *
     * @param float $length length
     *
     * @return $this
     */
    public function setLength($length)
    {
        $this->container['length'] = $length;

        return $this;
    }

    /**
     * Gets width
     *
     * @return float
     */
    public function getWidth()
    {
        return $this->container['width'];
    }

    /**
     * Sets width
     *
     * @param float $width width
     *
     * @return $this
     */
    public function setWidth($width)
    {
        $this->container['width'] = $width;

        return $this;
    }

    /**
     * Gets height
     *
     * @return float
     */
    public function getHeight()
    {
        return $this->container['height'];
    }

    /**
     * Sets height
     *
     * @param float $height height
     *
     * @return $this
     */
    public function setHeight($height)
    {
        $this->container['height'] = $height;

        return $this;
    }

    /**
     * Gets top_up
     *
     * @return bool
     */
    public function getTopUp()
    {
        return $this->container['top_up'];
    }

    /**
     * Sets top_up
     *
     * @param bool $top_up top_up
     *
     * @return $this
     */
    public function setTopUp($top_up)
    {
        $this->container['top_up'] = $top_up;

        return $this;
    }

    /**
     * Gets ship_solo
     *
     * @return bool
     */
    public function getShipSolo()
    {
        return $this->container['ship_solo'];
    }

    /**
     * Sets ship_solo
     *
     * @param bool $ship_solo ship_solo
     *
     * @return $this
     */
    public function setShipSolo($ship_solo)
    {
        $this->container['ship_solo'] = $ship_solo;

        return $this;
    }

    /**
     * Gets inventory_update_timestamp
     *
     * @return \DateTime
     */
    public function getInventoryUpdateTimestamp()
    {
        return $this->container['inventory_update_timestamp'];
    }

    /**
     * Sets inventory_update_timestamp
     *
     * @param \DateTime $inventory_update_timestamp inventory_update_timestamp
     *
     * @return $this
     */
    public function setInventoryUpdateTimestamp($inventory_update_timestamp)
    {
        $this->container['inventory_update_timestamp'] = $inventory_update_timestamp;

        return $this;
    }

    /**
     * Gets available_quantity
     *
     * @return int
     */
    public function getAvailableQuantity()
    {
        return $this->container['available_quantity'];
    }

    /**
     * Sets available_quantity
     *
     * @param int $available_quantity available_quantity
     *
     * @return $this
     */
    public function setAvailableQuantity($available_quantity)
    {
        $this->container['available_quantity'] = $available_quantity;

        return $this;
    }

    /**
     * Gets damaged_quantity
     *
     * @return int
     */
    public function getDamagedQuantity()
    {
        return $this->container['damaged_quantity'];
    }

    /**
     * Sets damaged_quantity
     *
     * @param int $damaged_quantity damaged_quantity
     *
     * @return $this
     */
    public function setDamagedQuantity($damaged_quantity)
    {
        $this->container['damaged_quantity'] = $damaged_quantity;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantity()
    {
        return $this->container['in_fulfillment_process_quantity'];
    }

    /**
     * Sets in_fulfillment_process_quantity
     *
     * @param int $in_fulfillment_process_quantity in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantity($in_fulfillment_process_quantity)
    {
        $this->container['in_fulfillment_process_quantity'] = $in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets on_hand_quantity
     *
     * @return int
     */
    public function getOnHandQuantity()
    {
        return $this->container['on_hand_quantity'];
    }

    /**
     * Sets on_hand_quantity
     *
     * @param int $on_hand_quantity on_hand_quantity
     *
     * @return $this
     */
    public function setOnHandQuantity($on_hand_quantity)
    {
        $this->container['on_hand_quantity'] = $on_hand_quantity;

        return $this;
    }

    /**
     * Gets open_order_quantity
     *
     * @return int
     */
    public function getOpenOrderQuantity()
    {
        return $this->container['open_order_quantity'];
    }

    /**
     * Sets open_order_quantity
     *
     * @param int $open_order_quantity open_order_quantity
     *
     * @return $this
     */
    public function setOpenOrderQuantity($open_order_quantity)
    {
        $this->container['open_order_quantity'] = $open_order_quantity;

        return $this;
    }

    /**
     * Gets open_po_quantity
     *
     * @return int
     */
    public function getOpenPoQuantity()
    {
        return $this->container['open_po_quantity'];
    }

    /**
     * Sets open_po_quantity
     *
     * @param int $open_po_quantity open_po_quantity
     *
     * @return $this
     */
    public function setOpenPoQuantity($open_po_quantity)
    {
        $this->container['open_po_quantity'] = $open_po_quantity;

        return $this;
    }

    /**
     * Gets orderable_quantity
     *
     * @return int
     */
    public function getOrderableQuantity()
    {
        return $this->container['orderable_quantity'];
    }

    /**
     * Sets orderable_quantity
     *
     * @param int $orderable_quantity orderable_quantity
     *
     * @return $this
     */
    public function setOrderableQuantity($orderable_quantity)
    {
        $this->container['orderable_quantity'] = $orderable_quantity;

        return $this;
    }

    /**
     * Gets unallocatable_quantity
     *
     * @return int
     */
    public function getUnallocatableQuantity()
    {
        return $this->container['unallocatable_quantity'];
    }

    /**
     * Sets unallocatable_quantity
     *
     * @param int $unallocatable_quantity unallocatable_quantity
     *
     * @return $this
     */
    public function setUnallocatableQuantity($unallocatable_quantity)
    {
        $this->container['unallocatable_quantity'] = $unallocatable_quantity;

        return $this;
    }

    /**
     * Gets unavailable_quantity
     *
     * @return int
     */
    public function getUnavailableQuantity()
    {
        return $this->container['unavailable_quantity'];
    }

    /**
     * Sets unavailable_quantity
     *
     * @param int $unavailable_quantity unavailable_quantity
     *
     * @return $this
     */
    public function setUnavailableQuantity($unavailable_quantity)
    {
        $this->container['unavailable_quantity'] = $unavailable_quantity;

        return $this;
    }

    /**
     * Gets total_demand
     *
     * @return int
     */
    public function getTotalDemand()
    {
        return $this->container['total_demand'];
    }

    /**
     * Sets total_demand
     *
     * @param int $total_demand total_demand
     *
     * @return $this
     */
    public function setTotalDemand($total_demand)
    {
        $this->container['total_demand'] = $total_demand;

        return $this;
    }

    /**
     * Gets available_quantity_inner_packs
     *
     * @return int
     */
    public function getAvailableQuantityInnerPacks()
    {
        return $this->container['available_quantity_inner_packs'];
    }

    /**
     * Sets available_quantity_inner_packs
     *
     * @param int $available_quantity_inner_packs available_quantity_inner_packs
     *
     * @return $this
     */
    public function setAvailableQuantityInnerPacks($available_quantity_inner_packs)
    {
        $this->container['available_quantity_inner_packs'] = $available_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets damaged_quantity_inner_packs
     *
     * @return int
     */
    public function getDamagedQuantityInnerPacks()
    {
        return $this->container['damaged_quantity_inner_packs'];
    }

    /**
     * Sets damaged_quantity_inner_packs
     *
     * @param int $damaged_quantity_inner_packs damaged_quantity_inner_packs
     *
     * @return $this
     */
    public function setDamagedQuantityInnerPacks($damaged_quantity_inner_packs)
    {
        $this->container['damaged_quantity_inner_packs'] = $damaged_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity_inner_packs
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantityInnerPacks()
    {
        return $this->container['in_fulfillment_process_quantity_inner_packs'];
    }

    /**
     * Sets in_fulfillment_process_quantity_inner_packs
     *
     * @param int $in_fulfillment_process_quantity_inner_packs in_fulfillment_process_quantity_inner_packs
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantityInnerPacks($in_fulfillment_process_quantity_inner_packs)
    {
        $this->container['in_fulfillment_process_quantity_inner_packs'] = $in_fulfillment_process_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets on_hand_quantity_inner_packs
     *
     * @return int
     */
    public function getOnHandQuantityInnerPacks()
    {
        return $this->container['on_hand_quantity_inner_packs'];
    }

    /**
     * Sets on_hand_quantity_inner_packs
     *
     * @param int $on_hand_quantity_inner_packs on_hand_quantity_inner_packs
     *
     * @return $this
     */
    public function setOnHandQuantityInnerPacks($on_hand_quantity_inner_packs)
    {
        $this->container['on_hand_quantity_inner_packs'] = $on_hand_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets open_order_quantity_inner_packs
     *
     * @return int
     */
    public function getOpenOrderQuantityInnerPacks()
    {
        return $this->container['open_order_quantity_inner_packs'];
    }

    /**
     * Sets open_order_quantity_inner_packs
     *
     * @param int $open_order_quantity_inner_packs open_order_quantity_inner_packs
     *
     * @return $this
     */
    public function setOpenOrderQuantityInnerPacks($open_order_quantity_inner_packs)
    {
        $this->container['open_order_quantity_inner_packs'] = $open_order_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets open_po_quantity_inner_packs
     *
     * @return int
     */
    public function getOpenPoQuantityInnerPacks()
    {
        return $this->container['open_po_quantity_inner_packs'];
    }

    /**
     * Sets open_po_quantity_inner_packs
     *
     * @param int $open_po_quantity_inner_packs open_po_quantity_inner_packs
     *
     * @return $this
     */
    public function setOpenPoQuantityInnerPacks($open_po_quantity_inner_packs)
    {
        $this->container['open_po_quantity_inner_packs'] = $open_po_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets orderable_quantity_inner_packs
     *
     * @return int
     */
    public function getOrderableQuantityInnerPacks()
    {
        return $this->container['orderable_quantity_inner_packs'];
    }

    /**
     * Sets orderable_quantity_inner_packs
     *
     * @param int $orderable_quantity_inner_packs orderable_quantity_inner_packs
     *
     * @return $this
     */
    public function setOrderableQuantityInnerPacks($orderable_quantity_inner_packs)
    {
        $this->container['orderable_quantity_inner_packs'] = $orderable_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets unallocatable_quantity_inner_packs
     *
     * @return int
     */
    public function getUnallocatableQuantityInnerPacks()
    {
        return $this->container['unallocatable_quantity_inner_packs'];
    }

    /**
     * Sets unallocatable_quantity_inner_packs
     *
     * @param int $unallocatable_quantity_inner_packs unallocatable_quantity_inner_packs
     *
     * @return $this
     */
    public function setUnallocatableQuantityInnerPacks($unallocatable_quantity_inner_packs)
    {
        $this->container['unallocatable_quantity_inner_packs'] = $unallocatable_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets unavailable_quantity_inner_packs
     *
     * @return int
     */
    public function getUnavailableQuantityInnerPacks()
    {
        return $this->container['unavailable_quantity_inner_packs'];
    }

    /**
     * Sets unavailable_quantity_inner_packs
     *
     * @param int $unavailable_quantity_inner_packs unavailable_quantity_inner_packs
     *
     * @return $this
     */
    public function setUnavailableQuantityInnerPacks($unavailable_quantity_inner_packs)
    {
        $this->container['unavailable_quantity_inner_packs'] = $unavailable_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets available_quantity_cases
     *
     * @return int
     */
    public function getAvailableQuantityCases()
    {
        return $this->container['available_quantity_cases'];
    }

    /**
     * Sets available_quantity_cases
     *
     * @param int $available_quantity_cases available_quantity_cases
     *
     * @return $this
     */
    public function setAvailableQuantityCases($available_quantity_cases)
    {
        $this->container['available_quantity_cases'] = $available_quantity_cases;

        return $this;
    }

    /**
     * Gets damaged_quantity_cases
     *
     * @return int
     */
    public function getDamagedQuantityCases()
    {
        return $this->container['damaged_quantity_cases'];
    }

    /**
     * Sets damaged_quantity_cases
     *
     * @param int $damaged_quantity_cases damaged_quantity_cases
     *
     * @return $this
     */
    public function setDamagedQuantityCases($damaged_quantity_cases)
    {
        $this->container['damaged_quantity_cases'] = $damaged_quantity_cases;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity_cases
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantityCases()
    {
        return $this->container['in_fulfillment_process_quantity_cases'];
    }

    /**
     * Sets in_fulfillment_process_quantity_cases
     *
     * @param int $in_fulfillment_process_quantity_cases in_fulfillment_process_quantity_cases
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantityCases($in_fulfillment_process_quantity_cases)
    {
        $this->container['in_fulfillment_process_quantity_cases'] = $in_fulfillment_process_quantity_cases;

        return $this;
    }

    /**
     * Gets on_hand_quantity_cases
     *
     * @return int
     */
    public function getOnHandQuantityCases()
    {
        return $this->container['on_hand_quantity_cases'];
    }

    /**
     * Sets on_hand_quantity_cases
     *
     * @param int $on_hand_quantity_cases on_hand_quantity_cases
     *
     * @return $this
     */
    public function setOnHandQuantityCases($on_hand_quantity_cases)
    {
        $this->container['on_hand_quantity_cases'] = $on_hand_quantity_cases;

        return $this;
    }

    /**
     * Gets open_order_quantity_cases
     *
     * @return int
     */
    public function getOpenOrderQuantityCases()
    {
        return $this->container['open_order_quantity_cases'];
    }

    /**
     * Sets open_order_quantity_cases
     *
     * @param int $open_order_quantity_cases open_order_quantity_cases
     *
     * @return $this
     */
    public function setOpenOrderQuantityCases($open_order_quantity_cases)
    {
        $this->container['open_order_quantity_cases'] = $open_order_quantity_cases;

        return $this;
    }

    /**
     * Gets open_po_quantity_cases
     *
     * @return int
     */
    public function getOpenPoQuantityCases()
    {
        return $this->container['open_po_quantity_cases'];
    }

    /**
     * Sets open_po_quantity_cases
     *
     * @param int $open_po_quantity_cases open_po_quantity_cases
     *
     * @return $this
     */
    public function setOpenPoQuantityCases($open_po_quantity_cases)
    {
        $this->container['open_po_quantity_cases'] = $open_po_quantity_cases;

        return $this;
    }

    /**
     * Gets orderable_quantity_cases
     *
     * @return int
     */
    public function getOrderableQuantityCases()
    {
        return $this->container['orderable_quantity_cases'];
    }

    /**
     * Sets orderable_quantity_cases
     *
     * @param int $orderable_quantity_cases orderable_quantity_cases
     *
     * @return $this
     */
    public function setOrderableQuantityCases($orderable_quantity_cases)
    {
        $this->container['orderable_quantity_cases'] = $orderable_quantity_cases;

        return $this;
    }

    /**
     * Gets unallocatable_quantity_cases
     *
     * @return int
     */
    public function getUnallocatableQuantityCases()
    {
        return $this->container['unallocatable_quantity_cases'];
    }

    /**
     * Sets unallocatable_quantity_cases
     *
     * @param int $unallocatable_quantity_cases unallocatable_quantity_cases
     *
     * @return $this
     */
    public function setUnallocatableQuantityCases($unallocatable_quantity_cases)
    {
        $this->container['unallocatable_quantity_cases'] = $unallocatable_quantity_cases;

        return $this;
    }

    /**
     * Gets unavailable_quantity_cases
     *
     * @return int
     */
    public function getUnavailableQuantityCases()
    {
        return $this->container['unavailable_quantity_cases'];
    }

    /**
     * Sets unavailable_quantity_cases
     *
     * @param int $unavailable_quantity_cases unavailable_quantity_cases
     *
     * @return $this
     */
    public function setUnavailableQuantityCases($unavailable_quantity_cases)
    {
        $this->container['unavailable_quantity_cases'] = $unavailable_quantity_cases;

        return $this;
    }

    /**
     * Gets available_quantity_pallets
     *
     * @return int
     */
    public function getAvailableQuantityPallets()
    {
        return $this->container['available_quantity_pallets'];
    }

    /**
     * Sets available_quantity_pallets
     *
     * @param int $available_quantity_pallets available_quantity_pallets
     *
     * @return $this
     */
    public function setAvailableQuantityPallets($available_quantity_pallets)
    {
        $this->container['available_quantity_pallets'] = $available_quantity_pallets;

        return $this;
    }

    /**
     * Gets damaged_quantity_pallets
     *
     * @return int
     */
    public function getDamagedQuantityPallets()
    {
        return $this->container['damaged_quantity_pallets'];
    }

    /**
     * Sets damaged_quantity_pallets
     *
     * @param int $damaged_quantity_pallets damaged_quantity_pallets
     *
     * @return $this
     */
    public function setDamagedQuantityPallets($damaged_quantity_pallets)
    {
        $this->container['damaged_quantity_pallets'] = $damaged_quantity_pallets;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity_pallets
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantityPallets()
    {
        return $this->container['in_fulfillment_process_quantity_pallets'];
    }

    /**
     * Sets in_fulfillment_process_quantity_pallets
     *
     * @param int $in_fulfillment_process_quantity_pallets in_fulfillment_process_quantity_pallets
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantityPallets($in_fulfillment_process_quantity_pallets)
    {
        $this->container['in_fulfillment_process_quantity_pallets'] = $in_fulfillment_process_quantity_pallets;

        return $this;
    }

    /**
     * Gets on_hand_quantity_pallets
     *
     * @return int
     */
    public function getOnHandQuantityPallets()
    {
        return $this->container['on_hand_quantity_pallets'];
    }

    /**
     * Sets on_hand_quantity_pallets
     *
     * @param int $on_hand_quantity_pallets on_hand_quantity_pallets
     *
     * @return $this
     */
    public function setOnHandQuantityPallets($on_hand_quantity_pallets)
    {
        $this->container['on_hand_quantity_pallets'] = $on_hand_quantity_pallets;

        return $this;
    }

    /**
     * Gets open_order_quantity_pallets
     *
     * @return int
     */
    public function getOpenOrderQuantityPallets()
    {
        return $this->container['open_order_quantity_pallets'];
    }

    /**
     * Sets open_order_quantity_pallets
     *
     * @param int $open_order_quantity_pallets open_order_quantity_pallets
     *
     * @return $this
     */
    public function setOpenOrderQuantityPallets($open_order_quantity_pallets)
    {
        $this->container['open_order_quantity_pallets'] = $open_order_quantity_pallets;

        return $this;
    }

    /**
     * Gets open_po_quantity_pallets
     *
     * @return int
     */
    public function getOpenPoQuantityPallets()
    {
        return $this->container['open_po_quantity_pallets'];
    }

    /**
     * Sets open_po_quantity_pallets
     *
     * @param int $open_po_quantity_pallets open_po_quantity_pallets
     *
     * @return $this
     */
    public function setOpenPoQuantityPallets($open_po_quantity_pallets)
    {
        $this->container['open_po_quantity_pallets'] = $open_po_quantity_pallets;

        return $this;
    }

    /**
     * Gets orderable_quantity_pallets
     *
     * @return int
     */
    public function getOrderableQuantityPallets()
    {
        return $this->container['orderable_quantity_pallets'];
    }

    /**
     * Sets orderable_quantity_pallets
     *
     * @param int $orderable_quantity_pallets orderable_quantity_pallets
     *
     * @return $this
     */
    public function setOrderableQuantityPallets($orderable_quantity_pallets)
    {
        $this->container['orderable_quantity_pallets'] = $orderable_quantity_pallets;

        return $this;
    }

    /**
     * Gets unallocatable_quantity_pallets
     *
     * @return int
     */
    public function getUnallocatableQuantityPallets()
    {
        return $this->container['unallocatable_quantity_pallets'];
    }

    /**
     * Sets unallocatable_quantity_pallets
     *
     * @param int $unallocatable_quantity_pallets unallocatable_quantity_pallets
     *
     * @return $this
     */
    public function setUnallocatableQuantityPallets($unallocatable_quantity_pallets)
    {
        $this->container['unallocatable_quantity_pallets'] = $unallocatable_quantity_pallets;

        return $this;
    }

    /**
     * Gets unavailable_quantity_pallets
     *
     * @return int
     */
    public function getUnavailableQuantityPallets()
    {
        return $this->container['unavailable_quantity_pallets'];
    }

    /**
     * Sets unavailable_quantity_pallets
     *
     * @param int $unavailable_quantity_pallets unavailable_quantity_pallets
     *
     * @return $this
     */
    public function setUnavailableQuantityPallets($unavailable_quantity_pallets)
    {
        $this->container['unavailable_quantity_pallets'] = $unavailable_quantity_pallets;

        return $this;
    }

    /**
     * Gets overall_days_on_hand
     *
     * @return int
     */
    public function getOverallDaysOnHand()
    {
        return $this->container['overall_days_on_hand'];
    }

    /**
     * Sets overall_days_on_hand
     *
     * @param int $overall_days_on_hand overall_days_on_hand
     *
     * @return $this
     */
    public function setOverallDaysOnHand($overall_days_on_hand)
    {
        $this->container['overall_days_on_hand'] = $overall_days_on_hand;

        return $this;
    }

    /**
     * Gets overall_stock_status
     *
     * @return string
     */
    public function getOverallStockStatus()
    {
        return $this->container['overall_stock_status'];
    }

    /**
     * Sets overall_stock_status
     *
     * @param string $overall_stock_status overall_stock_status
     *
     * @return $this
     */
    public function setOverallStockStatus($overall_stock_status)
    {
        $this->container['overall_stock_status'] = $overall_stock_status;

        return $this;
    }

    /**
     * Gets estimated_pallets
     *
     * @return int
     */
    public function getEstimatedPallets()
    {
        return $this->container['estimated_pallets'];
    }

    /**
     * Sets estimated_pallets
     *
     * @param int $estimated_pallets estimated_pallets
     *
     * @return $this
     */
    public function setEstimatedPallets($estimated_pallets)
    {
        $this->container['estimated_pallets'] = $estimated_pallets;

        return $this;
    }

    /**
     * Gets estimated_cases
     *
     * @return int
     */
    public function getEstimatedCases()
    {
        return $this->container['estimated_cases'];
    }

    /**
     * Sets estimated_cases
     *
     * @param int $estimated_cases estimated_cases
     *
     * @return $this
     */
    public function setEstimatedCases($estimated_cases)
    {
        $this->container['estimated_cases'] = $estimated_cases;

        return $this;
    }

    /**
     * Gets estimated_inner_packs
     *
     * @return int
     */
    public function getEstimatedInnerPacks()
    {
        return $this->container['estimated_inner_packs'];
    }

    /**
     * Sets estimated_inner_packs
     *
     * @param int $estimated_inner_packs estimated_inner_packs
     *
     * @return $this
     */
    public function setEstimatedInnerPacks($estimated_inner_packs)
    {
        $this->container['estimated_inner_packs'] = $estimated_inner_packs;

        return $this;
    }

    /**
     * Gets next_requested_delivery_date
     *
     * @return \DateTime
     */
    public function getNextRequestedDeliveryDate()
    {
        return $this->container['next_requested_delivery_date'];
    }

    /**
     * Sets next_requested_delivery_date
     *
     * @param \DateTime $next_requested_delivery_date next_requested_delivery_date
     *
     * @return $this
     */
    public function setNextRequestedDeliveryDate($next_requested_delivery_date)
    {
        $this->container['next_requested_delivery_date'] = $next_requested_delivery_date;

        return $this;
    }

    /**
     * Gets warehouse1_id
     *
     * @return int
     */
    public function getWarehouse1Id()
    {
        return $this->container['warehouse1_id'];
    }

    /**
     * Sets warehouse1_id
     *
     * @param int $warehouse1_id warehouse1_id
     *
     * @return $this
     */
    public function setWarehouse1Id($warehouse1_id)
    {
        $this->container['warehouse1_id'] = $warehouse1_id;

        return $this;
    }

    /**
     * Gets w1_available_quantity
     *
     * @return int
     */
    public function getW1AvailableQuantity()
    {
        return $this->container['w1_available_quantity'];
    }

    /**
     * Sets w1_available_quantity
     *
     * @param int $w1_available_quantity w1_available_quantity
     *
     * @return $this
     */
    public function setW1AvailableQuantity($w1_available_quantity)
    {
        $this->container['w1_available_quantity'] = $w1_available_quantity;

        return $this;
    }

    /**
     * Gets w1_damaged_quantity
     *
     * @return int
     */
    public function getW1DamagedQuantity()
    {
        return $this->container['w1_damaged_quantity'];
    }

    /**
     * Sets w1_damaged_quantity
     *
     * @param int $w1_damaged_quantity w1_damaged_quantity
     *
     * @return $this
     */
    public function setW1DamagedQuantity($w1_damaged_quantity)
    {
        $this->container['w1_damaged_quantity'] = $w1_damaged_quantity;

        return $this;
    }

    /**
     * Gets w1_in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getW1InFulfillmentProcessQuantity()
    {
        return $this->container['w1_in_fulfillment_process_quantity'];
    }

    /**
     * Sets w1_in_fulfillment_process_quantity
     *
     * @param int $w1_in_fulfillment_process_quantity w1_in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setW1InFulfillmentProcessQuantity($w1_in_fulfillment_process_quantity)
    {
        $this->container['w1_in_fulfillment_process_quantity'] = $w1_in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets w1_on_hand_quantity
     *
     * @return int
     */
    public function getW1OnHandQuantity()
    {
        return $this->container['w1_on_hand_quantity'];
    }

    /**
     * Sets w1_on_hand_quantity
     *
     * @param int $w1_on_hand_quantity w1_on_hand_quantity
     *
     * @return $this
     */
    public function setW1OnHandQuantity($w1_on_hand_quantity)
    {
        $this->container['w1_on_hand_quantity'] = $w1_on_hand_quantity;

        return $this;
    }

    /**
     * Gets w1_open_order_quantity
     *
     * @return int
     */
    public function getW1OpenOrderQuantity()
    {
        return $this->container['w1_open_order_quantity'];
    }

    /**
     * Sets w1_open_order_quantity
     *
     * @param int $w1_open_order_quantity w1_open_order_quantity
     *
     * @return $this
     */
    public function setW1OpenOrderQuantity($w1_open_order_quantity)
    {
        $this->container['w1_open_order_quantity'] = $w1_open_order_quantity;

        return $this;
    }

    /**
     * Gets w1_open_po_quantity
     *
     * @return int
     */
    public function getW1OpenPoQuantity()
    {
        return $this->container['w1_open_po_quantity'];
    }

    /**
     * Sets w1_open_po_quantity
     *
     * @param int $w1_open_po_quantity w1_open_po_quantity
     *
     * @return $this
     */
    public function setW1OpenPoQuantity($w1_open_po_quantity)
    {
        $this->container['w1_open_po_quantity'] = $w1_open_po_quantity;

        return $this;
    }

    /**
     * Gets w1_orderable_quantity
     *
     * @return int
     */
    public function getW1OrderableQuantity()
    {
        return $this->container['w1_orderable_quantity'];
    }

    /**
     * Sets w1_orderable_quantity
     *
     * @param int $w1_orderable_quantity w1_orderable_quantity
     *
     * @return $this
     */
    public function setW1OrderableQuantity($w1_orderable_quantity)
    {
        $this->container['w1_orderable_quantity'] = $w1_orderable_quantity;

        return $this;
    }

    /**
     * Gets w1_unallocatable_quantity
     *
     * @return int
     */
    public function getW1UnallocatableQuantity()
    {
        return $this->container['w1_unallocatable_quantity'];
    }

    /**
     * Sets w1_unallocatable_quantity
     *
     * @param int $w1_unallocatable_quantity w1_unallocatable_quantity
     *
     * @return $this
     */
    public function setW1UnallocatableQuantity($w1_unallocatable_quantity)
    {
        $this->container['w1_unallocatable_quantity'] = $w1_unallocatable_quantity;

        return $this;
    }

    /**
     * Gets w1_unavailable_quantity
     *
     * @return int
     */
    public function getW1UnavailableQuantity()
    {
        return $this->container['w1_unavailable_quantity'];
    }

    /**
     * Sets w1_unavailable_quantity
     *
     * @param int $w1_unavailable_quantity w1_unavailable_quantity
     *
     * @return $this
     */
    public function setW1UnavailableQuantity($w1_unavailable_quantity)
    {
        $this->container['w1_unavailable_quantity'] = $w1_unavailable_quantity;

        return $this;
    }

    /**
     * Gets w1_days_on_hand
     *
     * @return int
     */
    public function getW1DaysOnHand()
    {
        return $this->container['w1_days_on_hand'];
    }

    /**
     * Sets w1_days_on_hand
     *
     * @param int $w1_days_on_hand w1_days_on_hand
     *
     * @return $this
     */
    public function setW1DaysOnHand($w1_days_on_hand)
    {
        $this->container['w1_days_on_hand'] = $w1_days_on_hand;

        return $this;
    }

    /**
     * Gets w1_stock_status
     *
     * @return string
     */
    public function getW1StockStatus()
    {
        return $this->container['w1_stock_status'];
    }

    /**
     * Sets w1_stock_status
     *
     * @param string $w1_stock_status w1_stock_status
     *
     * @return $this
     */
    public function setW1StockStatus($w1_stock_status)
    {
        $this->container['w1_stock_status'] = $w1_stock_status;

        return $this;
    }

    /**
     * Gets w1_estimated_pallets
     *
     * @return int
     */
    public function getW1EstimatedPallets()
    {
        return $this->container['w1_estimated_pallets'];
    }

    /**
     * Sets w1_estimated_pallets
     *
     * @param int $w1_estimated_pallets w1_estimated_pallets
     *
     * @return $this
     */
    public function setW1EstimatedPallets($w1_estimated_pallets)
    {
        $this->container['w1_estimated_pallets'] = $w1_estimated_pallets;

        return $this;
    }

    /**
     * Gets w1_estimated_cases
     *
     * @return int
     */
    public function getW1EstimatedCases()
    {
        return $this->container['w1_estimated_cases'];
    }

    /**
     * Sets w1_estimated_cases
     *
     * @param int $w1_estimated_cases w1_estimated_cases
     *
     * @return $this
     */
    public function setW1EstimatedCases($w1_estimated_cases)
    {
        $this->container['w1_estimated_cases'] = $w1_estimated_cases;

        return $this;
    }

    /**
     * Gets w1_estimated_inner_packs
     *
     * @return int
     */
    public function getW1EstimatedInnerPacks()
    {
        return $this->container['w1_estimated_inner_packs'];
    }

    /**
     * Sets w1_estimated_inner_packs
     *
     * @param int $w1_estimated_inner_packs w1_estimated_inner_packs
     *
     * @return $this
     */
    public function setW1EstimatedInnerPacks($w1_estimated_inner_packs)
    {
        $this->container['w1_estimated_inner_packs'] = $w1_estimated_inner_packs;

        return $this;
    }

    /**
     * Gets w1_next_requested_delivery_date
     *
     * @return \DateTime
     */
    public function getW1NextRequestedDeliveryDate()
    {
        return $this->container['w1_next_requested_delivery_date'];
    }

    /**
     * Sets w1_next_requested_delivery_date
     *
     * @param \DateTime $w1_next_requested_delivery_date w1_next_requested_delivery_date
     *
     * @return $this
     */
    public function setW1NextRequestedDeliveryDate($w1_next_requested_delivery_date)
    {
        $this->container['w1_next_requested_delivery_date'] = $w1_next_requested_delivery_date;

        return $this;
    }

    /**
     * Gets warehouse2_id
     *
     * @return int
     */
    public function getWarehouse2Id()
    {
        return $this->container['warehouse2_id'];
    }

    /**
     * Sets warehouse2_id
     *
     * @param int $warehouse2_id warehouse2_id
     *
     * @return $this
     */
    public function setWarehouse2Id($warehouse2_id)
    {
        $this->container['warehouse2_id'] = $warehouse2_id;

        return $this;
    }

    /**
     * Gets w2_available_quantity
     *
     * @return int
     */
    public function getW2AvailableQuantity()
    {
        return $this->container['w2_available_quantity'];
    }

    /**
     * Sets w2_available_quantity
     *
     * @param int $w2_available_quantity w2_available_quantity
     *
     * @return $this
     */
    public function setW2AvailableQuantity($w2_available_quantity)
    {
        $this->container['w2_available_quantity'] = $w2_available_quantity;

        return $this;
    }

    /**
     * Gets w2_damaged_quantity
     *
     * @return int
     */
    public function getW2DamagedQuantity()
    {
        return $this->container['w2_damaged_quantity'];
    }

    /**
     * Sets w2_damaged_quantity
     *
     * @param int $w2_damaged_quantity w2_damaged_quantity
     *
     * @return $this
     */
    public function setW2DamagedQuantity($w2_damaged_quantity)
    {
        $this->container['w2_damaged_quantity'] = $w2_damaged_quantity;

        return $this;
    }

    /**
     * Gets w2_in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getW2InFulfillmentProcessQuantity()
    {
        return $this->container['w2_in_fulfillment_process_quantity'];
    }

    /**
     * Sets w2_in_fulfillment_process_quantity
     *
     * @param int $w2_in_fulfillment_process_quantity w2_in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setW2InFulfillmentProcessQuantity($w2_in_fulfillment_process_quantity)
    {
        $this->container['w2_in_fulfillment_process_quantity'] = $w2_in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets w2_on_hand_quantity
     *
     * @return int
     */
    public function getW2OnHandQuantity()
    {
        return $this->container['w2_on_hand_quantity'];
    }

    /**
     * Sets w2_on_hand_quantity
     *
     * @param int $w2_on_hand_quantity w2_on_hand_quantity
     *
     * @return $this
     */
    public function setW2OnHandQuantity($w2_on_hand_quantity)
    {
        $this->container['w2_on_hand_quantity'] = $w2_on_hand_quantity;

        return $this;
    }

    /**
     * Gets w2_open_order_quantity
     *
     * @return int
     */
    public function getW2OpenOrderQuantity()
    {
        return $this->container['w2_open_order_quantity'];
    }

    /**
     * Sets w2_open_order_quantity
     *
     * @param int $w2_open_order_quantity w2_open_order_quantity
     *
     * @return $this
     */
    public function setW2OpenOrderQuantity($w2_open_order_quantity)
    {
        $this->container['w2_open_order_quantity'] = $w2_open_order_quantity;

        return $this;
    }

    /**
     * Gets w2_open_po_quantity
     *
     * @return int
     */
    public function getW2OpenPoQuantity()
    {
        return $this->container['w2_open_po_quantity'];
    }

    /**
     * Sets w2_open_po_quantity
     *
     * @param int $w2_open_po_quantity w2_open_po_quantity
     *
     * @return $this
     */
    public function setW2OpenPoQuantity($w2_open_po_quantity)
    {
        $this->container['w2_open_po_quantity'] = $w2_open_po_quantity;

        return $this;
    }

    /**
     * Gets w2_orderable_quantity
     *
     * @return int
     */
    public function getW2OrderableQuantity()
    {
        return $this->container['w2_orderable_quantity'];
    }

    /**
     * Sets w2_orderable_quantity
     *
     * @param int $w2_orderable_quantity w2_orderable_quantity
     *
     * @return $this
     */
    public function setW2OrderableQuantity($w2_orderable_quantity)
    {
        $this->container['w2_orderable_quantity'] = $w2_orderable_quantity;

        return $this;
    }

    /**
     * Gets w2_unallocatable_quantity
     *
     * @return int
     */
    public function getW2UnallocatableQuantity()
    {
        return $this->container['w2_unallocatable_quantity'];
    }

    /**
     * Sets w2_unallocatable_quantity
     *
     * @param int $w2_unallocatable_quantity w2_unallocatable_quantity
     *
     * @return $this
     */
    public function setW2UnallocatableQuantity($w2_unallocatable_quantity)
    {
        $this->container['w2_unallocatable_quantity'] = $w2_unallocatable_quantity;

        return $this;
    }

    /**
     * Gets w2_unavailable_quantity
     *
     * @return int
     */
    public function getW2UnavailableQuantity()
    {
        return $this->container['w2_unavailable_quantity'];
    }

    /**
     * Sets w2_unavailable_quantity
     *
     * @param int $w2_unavailable_quantity w2_unavailable_quantity
     *
     * @return $this
     */
    public function setW2UnavailableQuantity($w2_unavailable_quantity)
    {
        $this->container['w2_unavailable_quantity'] = $w2_unavailable_quantity;

        return $this;
    }

    /**
     * Gets w2_days_on_hand
     *
     * @return int
     */
    public function getW2DaysOnHand()
    {
        return $this->container['w2_days_on_hand'];
    }

    /**
     * Sets w2_days_on_hand
     *
     * @param int $w2_days_on_hand w2_days_on_hand
     *
     * @return $this
     */
    public function setW2DaysOnHand($w2_days_on_hand)
    {
        $this->container['w2_days_on_hand'] = $w2_days_on_hand;

        return $this;
    }

    /**
     * Gets w2_stock_status
     *
     * @return string
     */
    public function getW2StockStatus()
    {
        return $this->container['w2_stock_status'];
    }

    /**
     * Sets w2_stock_status
     *
     * @param string $w2_stock_status w2_stock_status
     *
     * @return $this
     */
    public function setW2StockStatus($w2_stock_status)
    {
        $this->container['w2_stock_status'] = $w2_stock_status;

        return $this;
    }

    /**
     * Gets w2_estimated_pallets
     *
     * @return int
     */
    public function getW2EstimatedPallets()
    {
        return $this->container['w2_estimated_pallets'];
    }

    /**
     * Sets w2_estimated_pallets
     *
     * @param int $w2_estimated_pallets w2_estimated_pallets
     *
     * @return $this
     */
    public function setW2EstimatedPallets($w2_estimated_pallets)
    {
        $this->container['w2_estimated_pallets'] = $w2_estimated_pallets;

        return $this;
    }

    /**
     * Gets w2_estimated_cases
     *
     * @return int
     */
    public function getW2EstimatedCases()
    {
        return $this->container['w2_estimated_cases'];
    }

    /**
     * Sets w2_estimated_cases
     *
     * @param int $w2_estimated_cases w2_estimated_cases
     *
     * @return $this
     */
    public function setW2EstimatedCases($w2_estimated_cases)
    {
        $this->container['w2_estimated_cases'] = $w2_estimated_cases;

        return $this;
    }

    /**
     * Gets w2_estimated_inner_packs
     *
     * @return int
     */
    public function getW2EstimatedInnerPacks()
    {
        return $this->container['w2_estimated_inner_packs'];
    }

    /**
     * Sets w2_estimated_inner_packs
     *
     * @param int $w2_estimated_inner_packs w2_estimated_inner_packs
     *
     * @return $this
     */
    public function setW2EstimatedInnerPacks($w2_estimated_inner_packs)
    {
        $this->container['w2_estimated_inner_packs'] = $w2_estimated_inner_packs;

        return $this;
    }

    /**
     * Gets w2_next_requested_delivery_date
     *
     * @return \DateTime
     */
    public function getW2NextRequestedDeliveryDate()
    {
        return $this->container['w2_next_requested_delivery_date'];
    }

    /**
     * Sets w2_next_requested_delivery_date
     *
     * @param \DateTime $w2_next_requested_delivery_date w2_next_requested_delivery_date
     *
     * @return $this
     */
    public function setW2NextRequestedDeliveryDate($w2_next_requested_delivery_date)
    {
        $this->container['w2_next_requested_delivery_date'] = $w2_next_requested_delivery_date;

        return $this;
    }

    /**
     * Gets warehouse3_id
     *
     * @return int
     */
    public function getWarehouse3Id()
    {
        return $this->container['warehouse3_id'];
    }

    /**
     * Sets warehouse3_id
     *
     * @param int $warehouse3_id warehouse3_id
     *
     * @return $this
     */
    public function setWarehouse3Id($warehouse3_id)
    {
        $this->container['warehouse3_id'] = $warehouse3_id;

        return $this;
    }

    /**
     * Gets w3_available_quantity
     *
     * @return int
     */
    public function getW3AvailableQuantity()
    {
        return $this->container['w3_available_quantity'];
    }

    /**
     * Sets w3_available_quantity
     *
     * @param int $w3_available_quantity w3_available_quantity
     *
     * @return $this
     */
    public function setW3AvailableQuantity($w3_available_quantity)
    {
        $this->container['w3_available_quantity'] = $w3_available_quantity;

        return $this;
    }

    /**
     * Gets w3_damaged_quantity
     *
     * @return int
     */
    public function getW3DamagedQuantity()
    {
        return $this->container['w3_damaged_quantity'];
    }

    /**
     * Sets w3_damaged_quantity
     *
     * @param int $w3_damaged_quantity w3_damaged_quantity
     *
     * @return $this
     */
    public function setW3DamagedQuantity($w3_damaged_quantity)
    {
        $this->container['w3_damaged_quantity'] = $w3_damaged_quantity;

        return $this;
    }

    /**
     * Gets w3_in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getW3InFulfillmentProcessQuantity()
    {
        return $this->container['w3_in_fulfillment_process_quantity'];
    }

    /**
     * Sets w3_in_fulfillment_process_quantity
     *
     * @param int $w3_in_fulfillment_process_quantity w3_in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setW3InFulfillmentProcessQuantity($w3_in_fulfillment_process_quantity)
    {
        $this->container['w3_in_fulfillment_process_quantity'] = $w3_in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets w3_on_hand_quantity
     *
     * @return int
     */
    public function getW3OnHandQuantity()
    {
        return $this->container['w3_on_hand_quantity'];
    }

    /**
     * Sets w3_on_hand_quantity
     *
     * @param int $w3_on_hand_quantity w3_on_hand_quantity
     *
     * @return $this
     */
    public function setW3OnHandQuantity($w3_on_hand_quantity)
    {
        $this->container['w3_on_hand_quantity'] = $w3_on_hand_quantity;

        return $this;
    }

    /**
     * Gets w3_open_order_quantity
     *
     * @return int
     */
    public function getW3OpenOrderQuantity()
    {
        return $this->container['w3_open_order_quantity'];
    }

    /**
     * Sets w3_open_order_quantity
     *
     * @param int $w3_open_order_quantity w3_open_order_quantity
     *
     * @return $this
     */
    public function setW3OpenOrderQuantity($w3_open_order_quantity)
    {
        $this->container['w3_open_order_quantity'] = $w3_open_order_quantity;

        return $this;
    }

    /**
     * Gets w3_open_po_quantity
     *
     * @return int
     */
    public function getW3OpenPoQuantity()
    {
        return $this->container['w3_open_po_quantity'];
    }

    /**
     * Sets w3_open_po_quantity
     *
     * @param int $w3_open_po_quantity w3_open_po_quantity
     *
     * @return $this
     */
    public function setW3OpenPoQuantity($w3_open_po_quantity)
    {
        $this->container['w3_open_po_quantity'] = $w3_open_po_quantity;

        return $this;
    }

    /**
     * Gets w3_orderable_quantity
     *
     * @return int
     */
    public function getW3OrderableQuantity()
    {
        return $this->container['w3_orderable_quantity'];
    }

    /**
     * Sets w3_orderable_quantity
     *
     * @param int $w3_orderable_quantity w3_orderable_quantity
     *
     * @return $this
     */
    public function setW3OrderableQuantity($w3_orderable_quantity)
    {
        $this->container['w3_orderable_quantity'] = $w3_orderable_quantity;

        return $this;
    }

    /**
     * Gets w3_unallocatable_quantity
     *
     * @return int
     */
    public function getW3UnallocatableQuantity()
    {
        return $this->container['w3_unallocatable_quantity'];
    }

    /**
     * Sets w3_unallocatable_quantity
     *
     * @param int $w3_unallocatable_quantity w3_unallocatable_quantity
     *
     * @return $this
     */
    public function setW3UnallocatableQuantity($w3_unallocatable_quantity)
    {
        $this->container['w3_unallocatable_quantity'] = $w3_unallocatable_quantity;

        return $this;
    }

    /**
     * Gets w3_unavailable_quantity
     *
     * @return int
     */
    public function getW3UnavailableQuantity()
    {
        return $this->container['w3_unavailable_quantity'];
    }

    /**
     * Sets w3_unavailable_quantity
     *
     * @param int $w3_unavailable_quantity w3_unavailable_quantity
     *
     * @return $this
     */
    public function setW3UnavailableQuantity($w3_unavailable_quantity)
    {
        $this->container['w3_unavailable_quantity'] = $w3_unavailable_quantity;

        return $this;
    }

    /**
     * Gets w3_days_on_hand
     *
     * @return int
     */
    public function getW3DaysOnHand()
    {
        return $this->container['w3_days_on_hand'];
    }

    /**
     * Sets w3_days_on_hand
     *
     * @param int $w3_days_on_hand w3_days_on_hand
     *
     * @return $this
     */
    public function setW3DaysOnHand($w3_days_on_hand)
    {
        $this->container['w3_days_on_hand'] = $w3_days_on_hand;

        return $this;
    }

    /**
     * Gets w3_stock_status
     *
     * @return string
     */
    public function getW3StockStatus()
    {
        return $this->container['w3_stock_status'];
    }

    /**
     * Sets w3_stock_status
     *
     * @param string $w3_stock_status w3_stock_status
     *
     * @return $this
     */
    public function setW3StockStatus($w3_stock_status)
    {
        $this->container['w3_stock_status'] = $w3_stock_status;

        return $this;
    }

    /**
     * Gets w3_estimated_pallets
     *
     * @return int
     */
    public function getW3EstimatedPallets()
    {
        return $this->container['w3_estimated_pallets'];
    }

    /**
     * Sets w3_estimated_pallets
     *
     * @param int $w3_estimated_pallets w3_estimated_pallets
     *
     * @return $this
     */
    public function setW3EstimatedPallets($w3_estimated_pallets)
    {
        $this->container['w3_estimated_pallets'] = $w3_estimated_pallets;

        return $this;
    }

    /**
     * Gets w3_estimated_cases
     *
     * @return int
     */
    public function getW3EstimatedCases()
    {
        return $this->container['w3_estimated_cases'];
    }

    /**
     * Sets w3_estimated_cases
     *
     * @param int $w3_estimated_cases w3_estimated_cases
     *
     * @return $this
     */
    public function setW3EstimatedCases($w3_estimated_cases)
    {
        $this->container['w3_estimated_cases'] = $w3_estimated_cases;

        return $this;
    }

    /**
     * Gets w3_estimated_inner_packs
     *
     * @return int
     */
    public function getW3EstimatedInnerPacks()
    {
        return $this->container['w3_estimated_inner_packs'];
    }

    /**
     * Sets w3_estimated_inner_packs
     *
     * @param int $w3_estimated_inner_packs w3_estimated_inner_packs
     *
     * @return $this
     */
    public function setW3EstimatedInnerPacks($w3_estimated_inner_packs)
    {
        $this->container['w3_estimated_inner_packs'] = $w3_estimated_inner_packs;

        return $this;
    }

    /**
     * Gets w3_next_requested_delivery_date
     *
     * @return \DateTime
     */
    public function getW3NextRequestedDeliveryDate()
    {
        return $this->container['w3_next_requested_delivery_date'];
    }

    /**
     * Sets w3_next_requested_delivery_date
     *
     * @param \DateTime $w3_next_requested_delivery_date w3_next_requested_delivery_date
     *
     * @return $this
     */
    public function setW3NextRequestedDeliveryDate($w3_next_requested_delivery_date)
    {
        $this->container['w3_next_requested_delivery_date'] = $w3_next_requested_delivery_date;

        return $this;
    }

    /**
     * Gets warehouse4_id
     *
     * @return int
     */
    public function getWarehouse4Id()
    {
        return $this->container['warehouse4_id'];
    }

    /**
     * Sets warehouse4_id
     *
     * @param int $warehouse4_id warehouse4_id
     *
     * @return $this
     */
    public function setWarehouse4Id($warehouse4_id)
    {
        $this->container['warehouse4_id'] = $warehouse4_id;

        return $this;
    }

    /**
     * Gets w4_available_quantity
     *
     * @return int
     */
    public function getW4AvailableQuantity()
    {
        return $this->container['w4_available_quantity'];
    }

    /**
     * Sets w4_available_quantity
     *
     * @param int $w4_available_quantity w4_available_quantity
     *
     * @return $this
     */
    public function setW4AvailableQuantity($w4_available_quantity)
    {
        $this->container['w4_available_quantity'] = $w4_available_quantity;

        return $this;
    }

    /**
     * Gets w4_damaged_quantity
     *
     * @return int
     */
    public function getW4DamagedQuantity()
    {
        return $this->container['w4_damaged_quantity'];
    }

    /**
     * Sets w4_damaged_quantity
     *
     * @param int $w4_damaged_quantity w4_damaged_quantity
     *
     * @return $this
     */
    public function setW4DamagedQuantity($w4_damaged_quantity)
    {
        $this->container['w4_damaged_quantity'] = $w4_damaged_quantity;

        return $this;
    }

    /**
     * Gets w4_in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getW4InFulfillmentProcessQuantity()
    {
        return $this->container['w4_in_fulfillment_process_quantity'];
    }

    /**
     * Sets w4_in_fulfillment_process_quantity
     *
     * @param int $w4_in_fulfillment_process_quantity w4_in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setW4InFulfillmentProcessQuantity($w4_in_fulfillment_process_quantity)
    {
        $this->container['w4_in_fulfillment_process_quantity'] = $w4_in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets w4_on_hand_quantity
     *
     * @return int
     */
    public function getW4OnHandQuantity()
    {
        return $this->container['w4_on_hand_quantity'];
    }

    /**
     * Sets w4_on_hand_quantity
     *
     * @param int $w4_on_hand_quantity w4_on_hand_quantity
     *
     * @return $this
     */
    public function setW4OnHandQuantity($w4_on_hand_quantity)
    {
        $this->container['w4_on_hand_quantity'] = $w4_on_hand_quantity;

        return $this;
    }

    /**
     * Gets w4_open_order_quantity
     *
     * @return int
     */
    public function getW4OpenOrderQuantity()
    {
        return $this->container['w4_open_order_quantity'];
    }

    /**
     * Sets w4_open_order_quantity
     *
     * @param int $w4_open_order_quantity w4_open_order_quantity
     *
     * @return $this
     */
    public function setW4OpenOrderQuantity($w4_open_order_quantity)
    {
        $this->container['w4_open_order_quantity'] = $w4_open_order_quantity;

        return $this;
    }

    /**
     * Gets w4_open_po_quantity
     *
     * @return int
     */
    public function getW4OpenPoQuantity()
    {
        return $this->container['w4_open_po_quantity'];
    }

    /**
     * Sets w4_open_po_quantity
     *
     * @param int $w4_open_po_quantity w4_open_po_quantity
     *
     * @return $this
     */
    public function setW4OpenPoQuantity($w4_open_po_quantity)
    {
        $this->container['w4_open_po_quantity'] = $w4_open_po_quantity;

        return $this;
    }

    /**
     * Gets w4_orderable_quantity
     *
     * @return int
     */
    public function getW4OrderableQuantity()
    {
        return $this->container['w4_orderable_quantity'];
    }

    /**
     * Sets w4_orderable_quantity
     *
     * @param int $w4_orderable_quantity w4_orderable_quantity
     *
     * @return $this
     */
    public function setW4OrderableQuantity($w4_orderable_quantity)
    {
        $this->container['w4_orderable_quantity'] = $w4_orderable_quantity;

        return $this;
    }

    /**
     * Gets w4_unallocatable_quantity
     *
     * @return int
     */
    public function getW4UnallocatableQuantity()
    {
        return $this->container['w4_unallocatable_quantity'];
    }

    /**
     * Sets w4_unallocatable_quantity
     *
     * @param int $w4_unallocatable_quantity w4_unallocatable_quantity
     *
     * @return $this
     */
    public function setW4UnallocatableQuantity($w4_unallocatable_quantity)
    {
        $this->container['w4_unallocatable_quantity'] = $w4_unallocatable_quantity;

        return $this;
    }

    /**
     * Gets w4_unavailable_quantity
     *
     * @return int
     */
    public function getW4UnavailableQuantity()
    {
        return $this->container['w4_unavailable_quantity'];
    }

    /**
     * Sets w4_unavailable_quantity
     *
     * @param int $w4_unavailable_quantity w4_unavailable_quantity
     *
     * @return $this
     */
    public function setW4UnavailableQuantity($w4_unavailable_quantity)
    {
        $this->container['w4_unavailable_quantity'] = $w4_unavailable_quantity;

        return $this;
    }

    /**
     * Gets w4_days_on_hand
     *
     * @return int
     */
    public function getW4DaysOnHand()
    {
        return $this->container['w4_days_on_hand'];
    }

    /**
     * Sets w4_days_on_hand
     *
     * @param int $w4_days_on_hand w4_days_on_hand
     *
     * @return $this
     */
    public function setW4DaysOnHand($w4_days_on_hand)
    {
        $this->container['w4_days_on_hand'] = $w4_days_on_hand;

        return $this;
    }

    /**
     * Gets w4_stock_status
     *
     * @return string
     */
    public function getW4StockStatus()
    {
        return $this->container['w4_stock_status'];
    }

    /**
     * Sets w4_stock_status
     *
     * @param string $w4_stock_status w4_stock_status
     *
     * @return $this
     */
    public function setW4StockStatus($w4_stock_status)
    {
        $this->container['w4_stock_status'] = $w4_stock_status;

        return $this;
    }

    /**
     * Gets w4_estimated_pallets
     *
     * @return int
     */
    public function getW4EstimatedPallets()
    {
        return $this->container['w4_estimated_pallets'];
    }

    /**
     * Sets w4_estimated_pallets
     *
     * @param int $w4_estimated_pallets w4_estimated_pallets
     *
     * @return $this
     */
    public function setW4EstimatedPallets($w4_estimated_pallets)
    {
        $this->container['w4_estimated_pallets'] = $w4_estimated_pallets;

        return $this;
    }

    /**
     * Gets w4_estimated_cases
     *
     * @return int
     */
    public function getW4EstimatedCases()
    {
        return $this->container['w4_estimated_cases'];
    }

    /**
     * Sets w4_estimated_cases
     *
     * @param int $w4_estimated_cases w4_estimated_cases
     *
     * @return $this
     */
    public function setW4EstimatedCases($w4_estimated_cases)
    {
        $this->container['w4_estimated_cases'] = $w4_estimated_cases;

        return $this;
    }

    /**
     * Gets w4_estimated_inner_packs
     *
     * @return int
     */
    public function getW4EstimatedInnerPacks()
    {
        return $this->container['w4_estimated_inner_packs'];
    }

    /**
     * Sets w4_estimated_inner_packs
     *
     * @param int $w4_estimated_inner_packs w4_estimated_inner_packs
     *
     * @return $this
     */
    public function setW4EstimatedInnerPacks($w4_estimated_inner_packs)
    {
        $this->container['w4_estimated_inner_packs'] = $w4_estimated_inner_packs;

        return $this;
    }

    /**
     * Gets w4_next_requested_delivery_date
     *
     * @return \DateTime
     */
    public function getW4NextRequestedDeliveryDate()
    {
        return $this->container['w4_next_requested_delivery_date'];
    }

    /**
     * Sets w4_next_requested_delivery_date
     *
     * @param \DateTime $w4_next_requested_delivery_date w4_next_requested_delivery_date
     *
     * @return $this
     */
    public function setW4NextRequestedDeliveryDate($w4_next_requested_delivery_date)
    {
        $this->container['w4_next_requested_delivery_date'] = $w4_next_requested_delivery_date;

        return $this;
    }

    /**
     * Gets warehouse5_id
     *
     * @return int
     */
    public function getWarehouse5Id()
    {
        return $this->container['warehouse5_id'];
    }

    /**
     * Sets warehouse5_id
     *
     * @param int $warehouse5_id warehouse5_id
     *
     * @return $this
     */
    public function setWarehouse5Id($warehouse5_id)
    {
        $this->container['warehouse5_id'] = $warehouse5_id;

        return $this;
    }

    /**
     * Gets w5_available_quantity
     *
     * @return int
     */
    public function getW5AvailableQuantity()
    {
        return $this->container['w5_available_quantity'];
    }

    /**
     * Sets w5_available_quantity
     *
     * @param int $w5_available_quantity w5_available_quantity
     *
     * @return $this
     */
    public function setW5AvailableQuantity($w5_available_quantity)
    {
        $this->container['w5_available_quantity'] = $w5_available_quantity;

        return $this;
    }

    /**
     * Gets w5_damaged_quantity
     *
     * @return int
     */
    public function getW5DamagedQuantity()
    {
        return $this->container['w5_damaged_quantity'];
    }

    /**
     * Sets w5_damaged_quantity
     *
     * @param int $w5_damaged_quantity w5_damaged_quantity
     *
     * @return $this
     */
    public function setW5DamagedQuantity($w5_damaged_quantity)
    {
        $this->container['w5_damaged_quantity'] = $w5_damaged_quantity;

        return $this;
    }

    /**
     * Gets w5_in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getW5InFulfillmentProcessQuantity()
    {
        return $this->container['w5_in_fulfillment_process_quantity'];
    }

    /**
     * Sets w5_in_fulfillment_process_quantity
     *
     * @param int $w5_in_fulfillment_process_quantity w5_in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setW5InFulfillmentProcessQuantity($w5_in_fulfillment_process_quantity)
    {
        $this->container['w5_in_fulfillment_process_quantity'] = $w5_in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets w5_on_hand_quantity
     *
     * @return int
     */
    public function getW5OnHandQuantity()
    {
        return $this->container['w5_on_hand_quantity'];
    }

    /**
     * Sets w5_on_hand_quantity
     *
     * @param int $w5_on_hand_quantity w5_on_hand_quantity
     *
     * @return $this
     */
    public function setW5OnHandQuantity($w5_on_hand_quantity)
    {
        $this->container['w5_on_hand_quantity'] = $w5_on_hand_quantity;

        return $this;
    }

    /**
     * Gets w5_open_order_quantity
     *
     * @return int
     */
    public function getW5OpenOrderQuantity()
    {
        return $this->container['w5_open_order_quantity'];
    }

    /**
     * Sets w5_open_order_quantity
     *
     * @param int $w5_open_order_quantity w5_open_order_quantity
     *
     * @return $this
     */
    public function setW5OpenOrderQuantity($w5_open_order_quantity)
    {
        $this->container['w5_open_order_quantity'] = $w5_open_order_quantity;

        return $this;
    }

    /**
     * Gets w5_open_po_quantity
     *
     * @return int
     */
    public function getW5OpenPoQuantity()
    {
        return $this->container['w5_open_po_quantity'];
    }

    /**
     * Sets w5_open_po_quantity
     *
     * @param int $w5_open_po_quantity w5_open_po_quantity
     *
     * @return $this
     */
    public function setW5OpenPoQuantity($w5_open_po_quantity)
    {
        $this->container['w5_open_po_quantity'] = $w5_open_po_quantity;

        return $this;
    }

    /**
     * Gets w5_orderable_quantity
     *
     * @return int
     */
    public function getW5OrderableQuantity()
    {
        return $this->container['w5_orderable_quantity'];
    }

    /**
     * Sets w5_orderable_quantity
     *
     * @param int $w5_orderable_quantity w5_orderable_quantity
     *
     * @return $this
     */
    public function setW5OrderableQuantity($w5_orderable_quantity)
    {
        $this->container['w5_orderable_quantity'] = $w5_orderable_quantity;

        return $this;
    }

    /**
     * Gets w5_unallocatable_quantity
     *
     * @return int
     */
    public function getW5UnallocatableQuantity()
    {
        return $this->container['w5_unallocatable_quantity'];
    }

    /**
     * Sets w5_unallocatable_quantity
     *
     * @param int $w5_unallocatable_quantity w5_unallocatable_quantity
     *
     * @return $this
     */
    public function setW5UnallocatableQuantity($w5_unallocatable_quantity)
    {
        $this->container['w5_unallocatable_quantity'] = $w5_unallocatable_quantity;

        return $this;
    }

    /**
     * Gets w5_unavailable_quantity
     *
     * @return int
     */
    public function getW5UnavailableQuantity()
    {
        return $this->container['w5_unavailable_quantity'];
    }

    /**
     * Sets w5_unavailable_quantity
     *
     * @param int $w5_unavailable_quantity w5_unavailable_quantity
     *
     * @return $this
     */
    public function setW5UnavailableQuantity($w5_unavailable_quantity)
    {
        $this->container['w5_unavailable_quantity'] = $w5_unavailable_quantity;

        return $this;
    }

    /**
     * Gets w5_days_on_hand
     *
     * @return int
     */
    public function getW5DaysOnHand()
    {
        return $this->container['w5_days_on_hand'];
    }

    /**
     * Sets w5_days_on_hand
     *
     * @param int $w5_days_on_hand w5_days_on_hand
     *
     * @return $this
     */
    public function setW5DaysOnHand($w5_days_on_hand)
    {
        $this->container['w5_days_on_hand'] = $w5_days_on_hand;

        return $this;
    }

    /**
     * Gets w5_stock_status
     *
     * @return string
     */
    public function getW5StockStatus()
    {
        return $this->container['w5_stock_status'];
    }

    /**
     * Sets w5_stock_status
     *
     * @param string $w5_stock_status w5_stock_status
     *
     * @return $this
     */
    public function setW5StockStatus($w5_stock_status)
    {
        $this->container['w5_stock_status'] = $w5_stock_status;

        return $this;
    }

    /**
     * Gets w5_estimated_pallets
     *
     * @return int
     */
    public function getW5EstimatedPallets()
    {
        return $this->container['w5_estimated_pallets'];
    }

    /**
     * Sets w5_estimated_pallets
     *
     * @param int $w5_estimated_pallets w5_estimated_pallets
     *
     * @return $this
     */
    public function setW5EstimatedPallets($w5_estimated_pallets)
    {
        $this->container['w5_estimated_pallets'] = $w5_estimated_pallets;

        return $this;
    }

    /**
     * Gets w5_estimated_cases
     *
     * @return int
     */
    public function getW5EstimatedCases()
    {
        return $this->container['w5_estimated_cases'];
    }

    /**
     * Sets w5_estimated_cases
     *
     * @param int $w5_estimated_cases w5_estimated_cases
     *
     * @return $this
     */
    public function setW5EstimatedCases($w5_estimated_cases)
    {
        $this->container['w5_estimated_cases'] = $w5_estimated_cases;

        return $this;
    }

    /**
     * Gets w5_estimated_inner_packs
     *
     * @return int
     */
    public function getW5EstimatedInnerPacks()
    {
        return $this->container['w5_estimated_inner_packs'];
    }

    /**
     * Sets w5_estimated_inner_packs
     *
     * @param int $w5_estimated_inner_packs w5_estimated_inner_packs
     *
     * @return $this
     */
    public function setW5EstimatedInnerPacks($w5_estimated_inner_packs)
    {
        $this->container['w5_estimated_inner_packs'] = $w5_estimated_inner_packs;

        return $this;
    }

    /**
     * Gets w5_next_requested_delivery_date
     *
     * @return \DateTime
     */
    public function getW5NextRequestedDeliveryDate()
    {
        return $this->container['w5_next_requested_delivery_date'];
    }

    /**
     * Sets w5_next_requested_delivery_date
     *
     * @param \DateTime $w5_next_requested_delivery_date w5_next_requested_delivery_date
     *
     * @return $this
     */
    public function setW5NextRequestedDeliveryDate($w5_next_requested_delivery_date)
    {
        $this->container['w5_next_requested_delivery_date'] = $w5_next_requested_delivery_date;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


