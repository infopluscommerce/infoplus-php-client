<?php
/**
 * Item
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Model;

use \ArrayAccess;
/**
 * Item Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Infoplus
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Item implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'account_code_id' => 'int',
        'low_stock_contact_id' => 'int',
        'legacy_low_level_contact_id' => 'int',
        'low_stock_code_id' => 'int',
        'major_group_id' => 'int',
        'sub_group_id' => 'int',
        'product_code_id' => 'int',
        'summary_code_id' => 'int',
        'buyer_id' => 'int',
        'lob_id' => 'int',
        'sku' => 'string',
        'vendor_sku' => 'string',
        'upc' => 'string',
        'item_description' => 'string',
        'packing_slip_description' => 'string',
        'absolute_max' => 'string',
        'additional_description' => 'string',
        'backorder' => 'string',
        'charge_code' => 'string',
        'commodity_code' => 'string',
        'comp_code' => 'int',
        'create_date' => '\DateTime',
        'critical_amount' => 'int',
        'overall_fixed_reorder_point' => 'int',
        'overall_lead_time' => 'int',
        'list_price' => 'Number',
        'lot_control_flag' => 'string',
        'max_cycle' => 'int',
        'max_interim' => 'int',
        'numeric_sort_order' => 'int',
        'outside_vendor' => 'int',
        'pick_no' => 'string',
        'pod_order_suffix' => 'int',
        'pod_rev_date' => 'string',
        'status' => 'string',
        'seasonal_item' => 'string',
        'requires_production_lot' => 'string',
        'sector' => 'string',
        'secure' => 'string',
        'serial_code' => 'string',
        'unit_code' => 'string',
        'units_per_wrap' => 'int',
        'weight_per_wrap' => 'Number',
        'void_date' => '\DateTime',
        'wrap_code' => 'string',
        'extrinsic_text1' => 'string',
        'extrinsic_text2' => 'string',
        'extrinsic_text3' => 'string',
        'extrinsic_number1' => 'int',
        'extrinsic_number2' => 'int',
        'extrinsic_decimal1' => 'Number',
        'extrinsic_decimal2' => 'Number',
        'casebreak_enabled' => 'string',
        'modify_date' => '\DateTime',
        'forward_lot_mixing_rule' => 'string',
        'storage_lot_mixing_rule' => 'string',
        'forward_item_mixing_rule' => 'string',
        'storage_item_mixing_rule' => 'string',
        'allocation_rule' => 'string',
        'barcode_field' => 'string',
        'hazmat' => 'string',
        'is_alcohol' => 'bool',
        'alcohol_type' => 'string',
        'alcohol_content' => 'Number',
        'alcohol_container' => 'string',
        'alcohol_vintage_year' => 'string',
        'alcohol_country' => 'string',
        'alcohol_state' => 'string',
        'alcohol_region' => 'string',
        'alcohol_brand' => 'string',
        'alcohol_upc_code' => 'string',
        'alcohol_nambca_code' => 'string',
        'alcohol_unimerc_code' => 'string',
        'alcohol_scc_code' => 'string',
        'length' => 'Number',
        'width' => 'Number',
        'height' => 'Number',
        'top_up' => 'bool',
        'ship_solo' => 'bool',
        'custom_fields' => 'map[string,object]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'account_code_id' => 'accountCodeId',
        'low_stock_contact_id' => 'lowStockContactId',
        'legacy_low_level_contact_id' => 'legacyLowLevelContactId',
        'low_stock_code_id' => 'lowStockCodeId',
        'major_group_id' => 'majorGroupId',
        'sub_group_id' => 'subGroupId',
        'product_code_id' => 'productCodeId',
        'summary_code_id' => 'summaryCodeId',
        'buyer_id' => 'buyerId',
        'lob_id' => 'lobId',
        'sku' => 'sku',
        'vendor_sku' => 'vendorSKU',
        'upc' => 'upc',
        'item_description' => 'itemDescription',
        'packing_slip_description' => 'packingSlipDescription',
        'absolute_max' => 'absoluteMax',
        'additional_description' => 'additionalDescription',
        'backorder' => 'backorder',
        'charge_code' => 'chargeCode',
        'commodity_code' => 'commodityCode',
        'comp_code' => 'compCode',
        'create_date' => 'createDate',
        'critical_amount' => 'criticalAmount',
        'overall_fixed_reorder_point' => 'overallFixedReorderPoint',
        'overall_lead_time' => 'overallLeadTime',
        'list_price' => 'listPrice',
        'lot_control_flag' => 'lotControlFlag',
        'max_cycle' => 'maxCycle',
        'max_interim' => 'maxInterim',
        'numeric_sort_order' => 'numericSortOrder',
        'outside_vendor' => 'outsideVendor',
        'pick_no' => 'pickNo',
        'pod_order_suffix' => 'podOrderSuffix',
        'pod_rev_date' => 'podRevDate',
        'status' => 'status',
        'seasonal_item' => 'seasonalItem',
        'requires_production_lot' => 'requiresProductionLot',
        'sector' => 'sector',
        'secure' => 'secure',
        'serial_code' => 'serialCode',
        'unit_code' => 'unitCode',
        'units_per_wrap' => 'unitsPerWrap',
        'weight_per_wrap' => 'weightPerWrap',
        'void_date' => 'voidDate',
        'wrap_code' => 'wrapCode',
        'extrinsic_text1' => 'extrinsicText1',
        'extrinsic_text2' => 'extrinsicText2',
        'extrinsic_text3' => 'extrinsicText3',
        'extrinsic_number1' => 'extrinsicNumber1',
        'extrinsic_number2' => 'extrinsicNumber2',
        'extrinsic_decimal1' => 'extrinsicDecimal1',
        'extrinsic_decimal2' => 'extrinsicDecimal2',
        'casebreak_enabled' => 'casebreakEnabled',
        'modify_date' => 'modifyDate',
        'forward_lot_mixing_rule' => 'forwardLotMixingRule',
        'storage_lot_mixing_rule' => 'storageLotMixingRule',
        'forward_item_mixing_rule' => 'forwardItemMixingRule',
        'storage_item_mixing_rule' => 'storageItemMixingRule',
        'allocation_rule' => 'allocationRule',
        'barcode_field' => 'barcodeField',
        'hazmat' => 'hazmat',
        'is_alcohol' => 'isAlcohol',
        'alcohol_type' => 'alcoholType',
        'alcohol_content' => 'alcoholContent',
        'alcohol_container' => 'alcoholContainer',
        'alcohol_vintage_year' => 'alcoholVintageYear',
        'alcohol_country' => 'alcoholCountry',
        'alcohol_state' => 'alcoholState',
        'alcohol_region' => 'alcoholRegion',
        'alcohol_brand' => 'alcoholBrand',
        'alcohol_upc_code' => 'alcoholUPCCode',
        'alcohol_nambca_code' => 'alcoholNAMBCACode',
        'alcohol_unimerc_code' => 'alcoholUNIMERCCode',
        'alcohol_scc_code' => 'alcoholSCCCode',
        'length' => 'length',
        'width' => 'width',
        'height' => 'height',
        'top_up' => 'topUp',
        'ship_solo' => 'shipSolo',
        'custom_fields' => 'customFields'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'account_code_id' => 'setAccountCodeId',
        'low_stock_contact_id' => 'setLowStockContactId',
        'legacy_low_level_contact_id' => 'setLegacyLowLevelContactId',
        'low_stock_code_id' => 'setLowStockCodeId',
        'major_group_id' => 'setMajorGroupId',
        'sub_group_id' => 'setSubGroupId',
        'product_code_id' => 'setProductCodeId',
        'summary_code_id' => 'setSummaryCodeId',
        'buyer_id' => 'setBuyerId',
        'lob_id' => 'setLobId',
        'sku' => 'setSku',
        'vendor_sku' => 'setVendorSku',
        'upc' => 'setUpc',
        'item_description' => 'setItemDescription',
        'packing_slip_description' => 'setPackingSlipDescription',
        'absolute_max' => 'setAbsoluteMax',
        'additional_description' => 'setAdditionalDescription',
        'backorder' => 'setBackorder',
        'charge_code' => 'setChargeCode',
        'commodity_code' => 'setCommodityCode',
        'comp_code' => 'setCompCode',
        'create_date' => 'setCreateDate',
        'critical_amount' => 'setCriticalAmount',
        'overall_fixed_reorder_point' => 'setOverallFixedReorderPoint',
        'overall_lead_time' => 'setOverallLeadTime',
        'list_price' => 'setListPrice',
        'lot_control_flag' => 'setLotControlFlag',
        'max_cycle' => 'setMaxCycle',
        'max_interim' => 'setMaxInterim',
        'numeric_sort_order' => 'setNumericSortOrder',
        'outside_vendor' => 'setOutsideVendor',
        'pick_no' => 'setPickNo',
        'pod_order_suffix' => 'setPodOrderSuffix',
        'pod_rev_date' => 'setPodRevDate',
        'status' => 'setStatus',
        'seasonal_item' => 'setSeasonalItem',
        'requires_production_lot' => 'setRequiresProductionLot',
        'sector' => 'setSector',
        'secure' => 'setSecure',
        'serial_code' => 'setSerialCode',
        'unit_code' => 'setUnitCode',
        'units_per_wrap' => 'setUnitsPerWrap',
        'weight_per_wrap' => 'setWeightPerWrap',
        'void_date' => 'setVoidDate',
        'wrap_code' => 'setWrapCode',
        'extrinsic_text1' => 'setExtrinsicText1',
        'extrinsic_text2' => 'setExtrinsicText2',
        'extrinsic_text3' => 'setExtrinsicText3',
        'extrinsic_number1' => 'setExtrinsicNumber1',
        'extrinsic_number2' => 'setExtrinsicNumber2',
        'extrinsic_decimal1' => 'setExtrinsicDecimal1',
        'extrinsic_decimal2' => 'setExtrinsicDecimal2',
        'casebreak_enabled' => 'setCasebreakEnabled',
        'modify_date' => 'setModifyDate',
        'forward_lot_mixing_rule' => 'setForwardLotMixingRule',
        'storage_lot_mixing_rule' => 'setStorageLotMixingRule',
        'forward_item_mixing_rule' => 'setForwardItemMixingRule',
        'storage_item_mixing_rule' => 'setStorageItemMixingRule',
        'allocation_rule' => 'setAllocationRule',
        'barcode_field' => 'setBarcodeField',
        'hazmat' => 'setHazmat',
        'is_alcohol' => 'setIsAlcohol',
        'alcohol_type' => 'setAlcoholType',
        'alcohol_content' => 'setAlcoholContent',
        'alcohol_container' => 'setAlcoholContainer',
        'alcohol_vintage_year' => 'setAlcoholVintageYear',
        'alcohol_country' => 'setAlcoholCountry',
        'alcohol_state' => 'setAlcoholState',
        'alcohol_region' => 'setAlcoholRegion',
        'alcohol_brand' => 'setAlcoholBrand',
        'alcohol_upc_code' => 'setAlcoholUpcCode',
        'alcohol_nambca_code' => 'setAlcoholNambcaCode',
        'alcohol_unimerc_code' => 'setAlcoholUnimercCode',
        'alcohol_scc_code' => 'setAlcoholSccCode',
        'length' => 'setLength',
        'width' => 'setWidth',
        'height' => 'setHeight',
        'top_up' => 'setTopUp',
        'ship_solo' => 'setShipSolo',
        'custom_fields' => 'setCustomFields'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'account_code_id' => 'getAccountCodeId',
        'low_stock_contact_id' => 'getLowStockContactId',
        'legacy_low_level_contact_id' => 'getLegacyLowLevelContactId',
        'low_stock_code_id' => 'getLowStockCodeId',
        'major_group_id' => 'getMajorGroupId',
        'sub_group_id' => 'getSubGroupId',
        'product_code_id' => 'getProductCodeId',
        'summary_code_id' => 'getSummaryCodeId',
        'buyer_id' => 'getBuyerId',
        'lob_id' => 'getLobId',
        'sku' => 'getSku',
        'vendor_sku' => 'getVendorSku',
        'upc' => 'getUpc',
        'item_description' => 'getItemDescription',
        'packing_slip_description' => 'getPackingSlipDescription',
        'absolute_max' => 'getAbsoluteMax',
        'additional_description' => 'getAdditionalDescription',
        'backorder' => 'getBackorder',
        'charge_code' => 'getChargeCode',
        'commodity_code' => 'getCommodityCode',
        'comp_code' => 'getCompCode',
        'create_date' => 'getCreateDate',
        'critical_amount' => 'getCriticalAmount',
        'overall_fixed_reorder_point' => 'getOverallFixedReorderPoint',
        'overall_lead_time' => 'getOverallLeadTime',
        'list_price' => 'getListPrice',
        'lot_control_flag' => 'getLotControlFlag',
        'max_cycle' => 'getMaxCycle',
        'max_interim' => 'getMaxInterim',
        'numeric_sort_order' => 'getNumericSortOrder',
        'outside_vendor' => 'getOutsideVendor',
        'pick_no' => 'getPickNo',
        'pod_order_suffix' => 'getPodOrderSuffix',
        'pod_rev_date' => 'getPodRevDate',
        'status' => 'getStatus',
        'seasonal_item' => 'getSeasonalItem',
        'requires_production_lot' => 'getRequiresProductionLot',
        'sector' => 'getSector',
        'secure' => 'getSecure',
        'serial_code' => 'getSerialCode',
        'unit_code' => 'getUnitCode',
        'units_per_wrap' => 'getUnitsPerWrap',
        'weight_per_wrap' => 'getWeightPerWrap',
        'void_date' => 'getVoidDate',
        'wrap_code' => 'getWrapCode',
        'extrinsic_text1' => 'getExtrinsicText1',
        'extrinsic_text2' => 'getExtrinsicText2',
        'extrinsic_text3' => 'getExtrinsicText3',
        'extrinsic_number1' => 'getExtrinsicNumber1',
        'extrinsic_number2' => 'getExtrinsicNumber2',
        'extrinsic_decimal1' => 'getExtrinsicDecimal1',
        'extrinsic_decimal2' => 'getExtrinsicDecimal2',
        'casebreak_enabled' => 'getCasebreakEnabled',
        'modify_date' => 'getModifyDate',
        'forward_lot_mixing_rule' => 'getForwardLotMixingRule',
        'storage_lot_mixing_rule' => 'getStorageLotMixingRule',
        'forward_item_mixing_rule' => 'getForwardItemMixingRule',
        'storage_item_mixing_rule' => 'getStorageItemMixingRule',
        'allocation_rule' => 'getAllocationRule',
        'barcode_field' => 'getBarcodeField',
        'hazmat' => 'getHazmat',
        'is_alcohol' => 'getIsAlcohol',
        'alcohol_type' => 'getAlcoholType',
        'alcohol_content' => 'getAlcoholContent',
        'alcohol_container' => 'getAlcoholContainer',
        'alcohol_vintage_year' => 'getAlcoholVintageYear',
        'alcohol_country' => 'getAlcoholCountry',
        'alcohol_state' => 'getAlcoholState',
        'alcohol_region' => 'getAlcoholRegion',
        'alcohol_brand' => 'getAlcoholBrand',
        'alcohol_upc_code' => 'getAlcoholUpcCode',
        'alcohol_nambca_code' => 'getAlcoholNambcaCode',
        'alcohol_unimerc_code' => 'getAlcoholUnimercCode',
        'alcohol_scc_code' => 'getAlcoholSccCode',
        'length' => 'getLength',
        'width' => 'getWidth',
        'height' => 'getHeight',
        'top_up' => 'getTopUp',
        'ship_solo' => 'getShipSolo',
        'custom_fields' => 'getCustomFields'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $account_code_id 
      * @var int
      */
    protected $account_code_id;
    
    /**
      * $low_stock_contact_id 
      * @var int
      */
    protected $low_stock_contact_id;
    
    /**
      * $legacy_low_level_contact_id 
      * @var int
      */
    protected $legacy_low_level_contact_id;
    
    /**
      * $low_stock_code_id 
      * @var int
      */
    protected $low_stock_code_id;
    
    /**
      * $major_group_id 
      * @var int
      */
    protected $major_group_id;
    
    /**
      * $sub_group_id 
      * @var int
      */
    protected $sub_group_id;
    
    /**
      * $product_code_id 
      * @var int
      */
    protected $product_code_id;
    
    /**
      * $summary_code_id 
      * @var int
      */
    protected $summary_code_id;
    
    /**
      * $buyer_id 
      * @var int
      */
    protected $buyer_id;
    
    /**
      * $lob_id 
      * @var int
      */
    protected $lob_id;
    
    /**
      * $sku 
      * @var string
      */
    protected $sku;
    
    /**
      * $vendor_sku 
      * @var string
      */
    protected $vendor_sku;
    
    /**
      * $upc 
      * @var string
      */
    protected $upc;
    
    /**
      * $item_description 
      * @var string
      */
    protected $item_description;
    
    /**
      * $packing_slip_description 
      * @var string
      */
    protected $packing_slip_description;
    
    /**
      * $absolute_max 
      * @var string
      */
    protected $absolute_max;
    
    /**
      * $additional_description 
      * @var string
      */
    protected $additional_description;
    
    /**
      * $backorder 
      * @var string
      */
    protected $backorder;
    
    /**
      * $charge_code 
      * @var string
      */
    protected $charge_code;
    
    /**
      * $commodity_code 
      * @var string
      */
    protected $commodity_code;
    
    /**
      * $comp_code 
      * @var int
      */
    protected $comp_code;
    
    /**
      * $create_date 
      * @var \DateTime
      */
    protected $create_date;
    
    /**
      * $critical_amount 
      * @var int
      */
    protected $critical_amount;
    
    /**
      * $overall_fixed_reorder_point 
      * @var int
      */
    protected $overall_fixed_reorder_point;
    
    /**
      * $overall_lead_time 
      * @var int
      */
    protected $overall_lead_time;
    
    /**
      * $list_price 
      * @var Number
      */
    protected $list_price;
    
    /**
      * $lot_control_flag 
      * @var string
      */
    protected $lot_control_flag;
    
    /**
      * $max_cycle 
      * @var int
      */
    protected $max_cycle;
    
    /**
      * $max_interim 
      * @var int
      */
    protected $max_interim;
    
    /**
      * $numeric_sort_order 
      * @var int
      */
    protected $numeric_sort_order;
    
    /**
      * $outside_vendor 
      * @var int
      */
    protected $outside_vendor;
    
    /**
      * $pick_no 
      * @var string
      */
    protected $pick_no;
    
    /**
      * $pod_order_suffix 
      * @var int
      */
    protected $pod_order_suffix;
    
    /**
      * $pod_rev_date 
      * @var string
      */
    protected $pod_rev_date;
    
    /**
      * $status 
      * @var string
      */
    protected $status;
    
    /**
      * $seasonal_item 
      * @var string
      */
    protected $seasonal_item;
    
    /**
      * $requires_production_lot 
      * @var string
      */
    protected $requires_production_lot;
    
    /**
      * $sector 
      * @var string
      */
    protected $sector;
    
    /**
      * $secure 
      * @var string
      */
    protected $secure;
    
    /**
      * $serial_code 
      * @var string
      */
    protected $serial_code;
    
    /**
      * $unit_code 
      * @var string
      */
    protected $unit_code;
    
    /**
      * $units_per_wrap 
      * @var int
      */
    protected $units_per_wrap;
    
    /**
      * $weight_per_wrap 
      * @var Number
      */
    protected $weight_per_wrap;
    
    /**
      * $void_date 
      * @var \DateTime
      */
    protected $void_date;
    
    /**
      * $wrap_code 
      * @var string
      */
    protected $wrap_code;
    
    /**
      * $extrinsic_text1 
      * @var string
      */
    protected $extrinsic_text1;
    
    /**
      * $extrinsic_text2 
      * @var string
      */
    protected $extrinsic_text2;
    
    /**
      * $extrinsic_text3 
      * @var string
      */
    protected $extrinsic_text3;
    
    /**
      * $extrinsic_number1 
      * @var int
      */
    protected $extrinsic_number1;
    
    /**
      * $extrinsic_number2 
      * @var int
      */
    protected $extrinsic_number2;
    
    /**
      * $extrinsic_decimal1 
      * @var Number
      */
    protected $extrinsic_decimal1;
    
    /**
      * $extrinsic_decimal2 
      * @var Number
      */
    protected $extrinsic_decimal2;
    
    /**
      * $casebreak_enabled 
      * @var string
      */
    protected $casebreak_enabled;
    
    /**
      * $modify_date 
      * @var \DateTime
      */
    protected $modify_date;
    
    /**
      * $forward_lot_mixing_rule 
      * @var string
      */
    protected $forward_lot_mixing_rule;
    
    /**
      * $storage_lot_mixing_rule 
      * @var string
      */
    protected $storage_lot_mixing_rule;
    
    /**
      * $forward_item_mixing_rule 
      * @var string
      */
    protected $forward_item_mixing_rule;
    
    /**
      * $storage_item_mixing_rule 
      * @var string
      */
    protected $storage_item_mixing_rule;
    
    /**
      * $allocation_rule 
      * @var string
      */
    protected $allocation_rule;
    
    /**
      * $barcode_field 
      * @var string
      */
    protected $barcode_field;
    
    /**
      * $hazmat 
      * @var string
      */
    protected $hazmat;
    
    /**
      * $is_alcohol 
      * @var bool
      */
    protected $is_alcohol = false;
    
    /**
      * $alcohol_type 
      * @var string
      */
    protected $alcohol_type;
    
    /**
      * $alcohol_content 
      * @var Number
      */
    protected $alcohol_content;
    
    /**
      * $alcohol_container 
      * @var string
      */
    protected $alcohol_container;
    
    /**
      * $alcohol_vintage_year 
      * @var string
      */
    protected $alcohol_vintage_year;
    
    /**
      * $alcohol_country 
      * @var string
      */
    protected $alcohol_country;
    
    /**
      * $alcohol_state 
      * @var string
      */
    protected $alcohol_state;
    
    /**
      * $alcohol_region 
      * @var string
      */
    protected $alcohol_region;
    
    /**
      * $alcohol_brand 
      * @var string
      */
    protected $alcohol_brand;
    
    /**
      * $alcohol_upc_code 
      * @var string
      */
    protected $alcohol_upc_code;
    
    /**
      * $alcohol_nambca_code 
      * @var string
      */
    protected $alcohol_nambca_code;
    
    /**
      * $alcohol_unimerc_code 
      * @var string
      */
    protected $alcohol_unimerc_code;
    
    /**
      * $alcohol_scc_code 
      * @var string
      */
    protected $alcohol_scc_code;
    
    /**
      * $length 
      * @var Number
      */
    protected $length;
    
    /**
      * $width 
      * @var Number
      */
    protected $width;
    
    /**
      * $height 
      * @var Number
      */
    protected $height;
    
    /**
      * $top_up 
      * @var bool
      */
    protected $top_up = false;
    
    /**
      * $ship_solo 
      * @var bool
      */
    protected $ship_solo = false;
    
    /**
      * $custom_fields 
      * @var map[string,object]
      */
    protected $custom_fields;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->account_code_id = $data["account_code_id"];
            $this->low_stock_contact_id = $data["low_stock_contact_id"];
            $this->legacy_low_level_contact_id = $data["legacy_low_level_contact_id"];
            $this->low_stock_code_id = $data["low_stock_code_id"];
            $this->major_group_id = $data["major_group_id"];
            $this->sub_group_id = $data["sub_group_id"];
            $this->product_code_id = $data["product_code_id"];
            $this->summary_code_id = $data["summary_code_id"];
            $this->buyer_id = $data["buyer_id"];
            $this->lob_id = $data["lob_id"];
            $this->sku = $data["sku"];
            $this->vendor_sku = $data["vendor_sku"];
            $this->upc = $data["upc"];
            $this->item_description = $data["item_description"];
            $this->packing_slip_description = $data["packing_slip_description"];
            $this->absolute_max = $data["absolute_max"];
            $this->additional_description = $data["additional_description"];
            $this->backorder = $data["backorder"];
            $this->charge_code = $data["charge_code"];
            $this->commodity_code = $data["commodity_code"];
            $this->comp_code = $data["comp_code"];
            $this->create_date = $data["create_date"];
            $this->critical_amount = $data["critical_amount"];
            $this->overall_fixed_reorder_point = $data["overall_fixed_reorder_point"];
            $this->overall_lead_time = $data["overall_lead_time"];
            $this->list_price = $data["list_price"];
            $this->lot_control_flag = $data["lot_control_flag"];
            $this->max_cycle = $data["max_cycle"];
            $this->max_interim = $data["max_interim"];
            $this->numeric_sort_order = $data["numeric_sort_order"];
            $this->outside_vendor = $data["outside_vendor"];
            $this->pick_no = $data["pick_no"];
            $this->pod_order_suffix = $data["pod_order_suffix"];
            $this->pod_rev_date = $data["pod_rev_date"];
            $this->status = $data["status"];
            $this->seasonal_item = $data["seasonal_item"];
            $this->requires_production_lot = $data["requires_production_lot"];
            $this->sector = $data["sector"];
            $this->secure = $data["secure"];
            $this->serial_code = $data["serial_code"];
            $this->unit_code = $data["unit_code"];
            $this->units_per_wrap = $data["units_per_wrap"];
            $this->weight_per_wrap = $data["weight_per_wrap"];
            $this->void_date = $data["void_date"];
            $this->wrap_code = $data["wrap_code"];
            $this->extrinsic_text1 = $data["extrinsic_text1"];
            $this->extrinsic_text2 = $data["extrinsic_text2"];
            $this->extrinsic_text3 = $data["extrinsic_text3"];
            $this->extrinsic_number1 = $data["extrinsic_number1"];
            $this->extrinsic_number2 = $data["extrinsic_number2"];
            $this->extrinsic_decimal1 = $data["extrinsic_decimal1"];
            $this->extrinsic_decimal2 = $data["extrinsic_decimal2"];
            $this->casebreak_enabled = $data["casebreak_enabled"];
            $this->modify_date = $data["modify_date"];
            $this->forward_lot_mixing_rule = $data["forward_lot_mixing_rule"];
            $this->storage_lot_mixing_rule = $data["storage_lot_mixing_rule"];
            $this->forward_item_mixing_rule = $data["forward_item_mixing_rule"];
            $this->storage_item_mixing_rule = $data["storage_item_mixing_rule"];
            $this->allocation_rule = $data["allocation_rule"];
            $this->barcode_field = $data["barcode_field"];
            $this->hazmat = $data["hazmat"];
            $this->is_alcohol = $data["is_alcohol"];
            $this->alcohol_type = $data["alcohol_type"];
            $this->alcohol_content = $data["alcohol_content"];
            $this->alcohol_container = $data["alcohol_container"];
            $this->alcohol_vintage_year = $data["alcohol_vintage_year"];
            $this->alcohol_country = $data["alcohol_country"];
            $this->alcohol_state = $data["alcohol_state"];
            $this->alcohol_region = $data["alcohol_region"];
            $this->alcohol_brand = $data["alcohol_brand"];
            $this->alcohol_upc_code = $data["alcohol_upc_code"];
            $this->alcohol_nambca_code = $data["alcohol_nambca_code"];
            $this->alcohol_unimerc_code = $data["alcohol_unimerc_code"];
            $this->alcohol_scc_code = $data["alcohol_scc_code"];
            $this->length = $data["length"];
            $this->width = $data["width"];
            $this->height = $data["height"];
            $this->top_up = $data["top_up"];
            $this->ship_solo = $data["ship_solo"];
            $this->custom_fields = $data["custom_fields"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets account_code_id
     * @return int
     */
    public function getAccountCodeId()
    {
        return $this->account_code_id;
    }
  
    /**
     * Sets account_code_id
     * @param int $account_code_id 
     * @return $this
     */
    public function setAccountCodeId($account_code_id)
    {
        
        $this->account_code_id = $account_code_id;
        return $this;
    }
    
    /**
     * Gets low_stock_contact_id
     * @return int
     */
    public function getLowStockContactId()
    {
        return $this->low_stock_contact_id;
    }
  
    /**
     * Sets low_stock_contact_id
     * @param int $low_stock_contact_id 
     * @return $this
     */
    public function setLowStockContactId($low_stock_contact_id)
    {
        
        $this->low_stock_contact_id = $low_stock_contact_id;
        return $this;
    }
    
    /**
     * Gets legacy_low_level_contact_id
     * @return int
     */
    public function getLegacyLowLevelContactId()
    {
        return $this->legacy_low_level_contact_id;
    }
  
    /**
     * Sets legacy_low_level_contact_id
     * @param int $legacy_low_level_contact_id 
     * @return $this
     */
    public function setLegacyLowLevelContactId($legacy_low_level_contact_id)
    {
        
        $this->legacy_low_level_contact_id = $legacy_low_level_contact_id;
        return $this;
    }
    
    /**
     * Gets low_stock_code_id
     * @return int
     */
    public function getLowStockCodeId()
    {
        return $this->low_stock_code_id;
    }
  
    /**
     * Sets low_stock_code_id
     * @param int $low_stock_code_id 
     * @return $this
     */
    public function setLowStockCodeId($low_stock_code_id)
    {
        
        $this->low_stock_code_id = $low_stock_code_id;
        return $this;
    }
    
    /**
     * Gets major_group_id
     * @return int
     */
    public function getMajorGroupId()
    {
        return $this->major_group_id;
    }
  
    /**
     * Sets major_group_id
     * @param int $major_group_id 
     * @return $this
     */
    public function setMajorGroupId($major_group_id)
    {
        
        $this->major_group_id = $major_group_id;
        return $this;
    }
    
    /**
     * Gets sub_group_id
     * @return int
     */
    public function getSubGroupId()
    {
        return $this->sub_group_id;
    }
  
    /**
     * Sets sub_group_id
     * @param int $sub_group_id 
     * @return $this
     */
    public function setSubGroupId($sub_group_id)
    {
        
        $this->sub_group_id = $sub_group_id;
        return $this;
    }
    
    /**
     * Gets product_code_id
     * @return int
     */
    public function getProductCodeId()
    {
        return $this->product_code_id;
    }
  
    /**
     * Sets product_code_id
     * @param int $product_code_id 
     * @return $this
     */
    public function setProductCodeId($product_code_id)
    {
        
        $this->product_code_id = $product_code_id;
        return $this;
    }
    
    /**
     * Gets summary_code_id
     * @return int
     */
    public function getSummaryCodeId()
    {
        return $this->summary_code_id;
    }
  
    /**
     * Sets summary_code_id
     * @param int $summary_code_id 
     * @return $this
     */
    public function setSummaryCodeId($summary_code_id)
    {
        
        $this->summary_code_id = $summary_code_id;
        return $this;
    }
    
    /**
     * Gets buyer_id
     * @return int
     */
    public function getBuyerId()
    {
        return $this->buyer_id;
    }
  
    /**
     * Sets buyer_id
     * @param int $buyer_id 
     * @return $this
     */
    public function setBuyerId($buyer_id)
    {
        
        $this->buyer_id = $buyer_id;
        return $this;
    }
    
    /**
     * Gets lob_id
     * @return int
     */
    public function getLobId()
    {
        return $this->lob_id;
    }
  
    /**
     * Sets lob_id
     * @param int $lob_id 
     * @return $this
     */
    public function setLobId($lob_id)
    {
        
        $this->lob_id = $lob_id;
        return $this;
    }
    
    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }
  
    /**
     * Sets sku
     * @param string $sku 
     * @return $this
     */
    public function setSku($sku)
    {
        
        $this->sku = $sku;
        return $this;
    }
    
    /**
     * Gets vendor_sku
     * @return string
     */
    public function getVendorSku()
    {
        return $this->vendor_sku;
    }
  
    /**
     * Sets vendor_sku
     * @param string $vendor_sku 
     * @return $this
     */
    public function setVendorSku($vendor_sku)
    {
        
        $this->vendor_sku = $vendor_sku;
        return $this;
    }
    
    /**
     * Gets upc
     * @return string
     */
    public function getUpc()
    {
        return $this->upc;
    }
  
    /**
     * Sets upc
     * @param string $upc 
     * @return $this
     */
    public function setUpc($upc)
    {
        
        $this->upc = $upc;
        return $this;
    }
    
    /**
     * Gets item_description
     * @return string
     */
    public function getItemDescription()
    {
        return $this->item_description;
    }
  
    /**
     * Sets item_description
     * @param string $item_description 
     * @return $this
     */
    public function setItemDescription($item_description)
    {
        
        $this->item_description = $item_description;
        return $this;
    }
    
    /**
     * Gets packing_slip_description
     * @return string
     */
    public function getPackingSlipDescription()
    {
        return $this->packing_slip_description;
    }
  
    /**
     * Sets packing_slip_description
     * @param string $packing_slip_description 
     * @return $this
     */
    public function setPackingSlipDescription($packing_slip_description)
    {
        
        $this->packing_slip_description = $packing_slip_description;
        return $this;
    }
    
    /**
     * Gets absolute_max
     * @return string
     */
    public function getAbsoluteMax()
    {
        return $this->absolute_max;
    }
  
    /**
     * Sets absolute_max
     * @param string $absolute_max 
     * @return $this
     */
    public function setAbsoluteMax($absolute_max)
    {
        
        $this->absolute_max = $absolute_max;
        return $this;
    }
    
    /**
     * Gets additional_description
     * @return string
     */
    public function getAdditionalDescription()
    {
        return $this->additional_description;
    }
  
    /**
     * Sets additional_description
     * @param string $additional_description 
     * @return $this
     */
    public function setAdditionalDescription($additional_description)
    {
        
        $this->additional_description = $additional_description;
        return $this;
    }
    
    /**
     * Gets backorder
     * @return string
     */
    public function getBackorder()
    {
        return $this->backorder;
    }
  
    /**
     * Sets backorder
     * @param string $backorder 
     * @return $this
     */
    public function setBackorder($backorder)
    {
        
        $this->backorder = $backorder;
        return $this;
    }
    
    /**
     * Gets charge_code
     * @return string
     */
    public function getChargeCode()
    {
        return $this->charge_code;
    }
  
    /**
     * Sets charge_code
     * @param string $charge_code 
     * @return $this
     */
    public function setChargeCode($charge_code)
    {
        
        $this->charge_code = $charge_code;
        return $this;
    }
    
    /**
     * Gets commodity_code
     * @return string
     */
    public function getCommodityCode()
    {
        return $this->commodity_code;
    }
  
    /**
     * Sets commodity_code
     * @param string $commodity_code 
     * @return $this
     */
    public function setCommodityCode($commodity_code)
    {
        
        $this->commodity_code = $commodity_code;
        return $this;
    }
    
    /**
     * Gets comp_code
     * @return int
     */
    public function getCompCode()
    {
        return $this->comp_code;
    }
  
    /**
     * Sets comp_code
     * @param int $comp_code 
     * @return $this
     */
    public function setCompCode($comp_code)
    {
        
        $this->comp_code = $comp_code;
        return $this;
    }
    
    /**
     * Gets create_date
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->create_date;
    }
  
    /**
     * Sets create_date
     * @param \DateTime $create_date 
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        
        $this->create_date = $create_date;
        return $this;
    }
    
    /**
     * Gets critical_amount
     * @return int
     */
    public function getCriticalAmount()
    {
        return $this->critical_amount;
    }
  
    /**
     * Sets critical_amount
     * @param int $critical_amount 
     * @return $this
     */
    public function setCriticalAmount($critical_amount)
    {
        
        $this->critical_amount = $critical_amount;
        return $this;
    }
    
    /**
     * Gets overall_fixed_reorder_point
     * @return int
     */
    public function getOverallFixedReorderPoint()
    {
        return $this->overall_fixed_reorder_point;
    }
  
    /**
     * Sets overall_fixed_reorder_point
     * @param int $overall_fixed_reorder_point 
     * @return $this
     */
    public function setOverallFixedReorderPoint($overall_fixed_reorder_point)
    {
        
        $this->overall_fixed_reorder_point = $overall_fixed_reorder_point;
        return $this;
    }
    
    /**
     * Gets overall_lead_time
     * @return int
     */
    public function getOverallLeadTime()
    {
        return $this->overall_lead_time;
    }
  
    /**
     * Sets overall_lead_time
     * @param int $overall_lead_time 
     * @return $this
     */
    public function setOverallLeadTime($overall_lead_time)
    {
        
        $this->overall_lead_time = $overall_lead_time;
        return $this;
    }
    
    /**
     * Gets list_price
     * @return Number
     */
    public function getListPrice()
    {
        return $this->list_price;
    }
  
    /**
     * Sets list_price
     * @param Number $list_price 
     * @return $this
     */
    public function setListPrice($list_price)
    {
        
        $this->list_price = $list_price;
        return $this;
    }
    
    /**
     * Gets lot_control_flag
     * @return string
     */
    public function getLotControlFlag()
    {
        return $this->lot_control_flag;
    }
  
    /**
     * Sets lot_control_flag
     * @param string $lot_control_flag 
     * @return $this
     */
    public function setLotControlFlag($lot_control_flag)
    {
        
        $this->lot_control_flag = $lot_control_flag;
        return $this;
    }
    
    /**
     * Gets max_cycle
     * @return int
     */
    public function getMaxCycle()
    {
        return $this->max_cycle;
    }
  
    /**
     * Sets max_cycle
     * @param int $max_cycle 
     * @return $this
     */
    public function setMaxCycle($max_cycle)
    {
        
        $this->max_cycle = $max_cycle;
        return $this;
    }
    
    /**
     * Gets max_interim
     * @return int
     */
    public function getMaxInterim()
    {
        return $this->max_interim;
    }
  
    /**
     * Sets max_interim
     * @param int $max_interim 
     * @return $this
     */
    public function setMaxInterim($max_interim)
    {
        
        $this->max_interim = $max_interim;
        return $this;
    }
    
    /**
     * Gets numeric_sort_order
     * @return int
     */
    public function getNumericSortOrder()
    {
        return $this->numeric_sort_order;
    }
  
    /**
     * Sets numeric_sort_order
     * @param int $numeric_sort_order 
     * @return $this
     */
    public function setNumericSortOrder($numeric_sort_order)
    {
        
        $this->numeric_sort_order = $numeric_sort_order;
        return $this;
    }
    
    /**
     * Gets outside_vendor
     * @return int
     */
    public function getOutsideVendor()
    {
        return $this->outside_vendor;
    }
  
    /**
     * Sets outside_vendor
     * @param int $outside_vendor 
     * @return $this
     */
    public function setOutsideVendor($outside_vendor)
    {
        
        $this->outside_vendor = $outside_vendor;
        return $this;
    }
    
    /**
     * Gets pick_no
     * @return string
     */
    public function getPickNo()
    {
        return $this->pick_no;
    }
  
    /**
     * Sets pick_no
     * @param string $pick_no 
     * @return $this
     */
    public function setPickNo($pick_no)
    {
        
        $this->pick_no = $pick_no;
        return $this;
    }
    
    /**
     * Gets pod_order_suffix
     * @return int
     */
    public function getPodOrderSuffix()
    {
        return $this->pod_order_suffix;
    }
  
    /**
     * Sets pod_order_suffix
     * @param int $pod_order_suffix 
     * @return $this
     */
    public function setPodOrderSuffix($pod_order_suffix)
    {
        
        $this->pod_order_suffix = $pod_order_suffix;
        return $this;
    }
    
    /**
     * Gets pod_rev_date
     * @return string
     */
    public function getPodRevDate()
    {
        return $this->pod_rev_date;
    }
  
    /**
     * Sets pod_rev_date
     * @param string $pod_rev_date 
     * @return $this
     */
    public function setPodRevDate($pod_rev_date)
    {
        
        $this->pod_rev_date = $pod_rev_date;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets seasonal_item
     * @return string
     */
    public function getSeasonalItem()
    {
        return $this->seasonal_item;
    }
  
    /**
     * Sets seasonal_item
     * @param string $seasonal_item 
     * @return $this
     */
    public function setSeasonalItem($seasonal_item)
    {
        
        $this->seasonal_item = $seasonal_item;
        return $this;
    }
    
    /**
     * Gets requires_production_lot
     * @return string
     */
    public function getRequiresProductionLot()
    {
        return $this->requires_production_lot;
    }
  
    /**
     * Sets requires_production_lot
     * @param string $requires_production_lot 
     * @return $this
     */
    public function setRequiresProductionLot($requires_production_lot)
    {
        
        $this->requires_production_lot = $requires_production_lot;
        return $this;
    }
    
    /**
     * Gets sector
     * @return string
     */
    public function getSector()
    {
        return $this->sector;
    }
  
    /**
     * Sets sector
     * @param string $sector 
     * @return $this
     */
    public function setSector($sector)
    {
        
        $this->sector = $sector;
        return $this;
    }
    
    /**
     * Gets secure
     * @return string
     */
    public function getSecure()
    {
        return $this->secure;
    }
  
    /**
     * Sets secure
     * @param string $secure 
     * @return $this
     */
    public function setSecure($secure)
    {
        
        $this->secure = $secure;
        return $this;
    }
    
    /**
     * Gets serial_code
     * @return string
     */
    public function getSerialCode()
    {
        return $this->serial_code;
    }
  
    /**
     * Sets serial_code
     * @param string $serial_code 
     * @return $this
     */
    public function setSerialCode($serial_code)
    {
        
        $this->serial_code = $serial_code;
        return $this;
    }
    
    /**
     * Gets unit_code
     * @return string
     */
    public function getUnitCode()
    {
        return $this->unit_code;
    }
  
    /**
     * Sets unit_code
     * @param string $unit_code 
     * @return $this
     */
    public function setUnitCode($unit_code)
    {
        
        $this->unit_code = $unit_code;
        return $this;
    }
    
    /**
     * Gets units_per_wrap
     * @return int
     */
    public function getUnitsPerWrap()
    {
        return $this->units_per_wrap;
    }
  
    /**
     * Sets units_per_wrap
     * @param int $units_per_wrap 
     * @return $this
     */
    public function setUnitsPerWrap($units_per_wrap)
    {
        
        $this->units_per_wrap = $units_per_wrap;
        return $this;
    }
    
    /**
     * Gets weight_per_wrap
     * @return Number
     */
    public function getWeightPerWrap()
    {
        return $this->weight_per_wrap;
    }
  
    /**
     * Sets weight_per_wrap
     * @param Number $weight_per_wrap 
     * @return $this
     */
    public function setWeightPerWrap($weight_per_wrap)
    {
        
        $this->weight_per_wrap = $weight_per_wrap;
        return $this;
    }
    
    /**
     * Gets void_date
     * @return \DateTime
     */
    public function getVoidDate()
    {
        return $this->void_date;
    }
  
    /**
     * Sets void_date
     * @param \DateTime $void_date 
     * @return $this
     */
    public function setVoidDate($void_date)
    {
        
        $this->void_date = $void_date;
        return $this;
    }
    
    /**
     * Gets wrap_code
     * @return string
     */
    public function getWrapCode()
    {
        return $this->wrap_code;
    }
  
    /**
     * Sets wrap_code
     * @param string $wrap_code 
     * @return $this
     */
    public function setWrapCode($wrap_code)
    {
        
        $this->wrap_code = $wrap_code;
        return $this;
    }
    
    /**
     * Gets extrinsic_text1
     * @return string
     */
    public function getExtrinsicText1()
    {
        return $this->extrinsic_text1;
    }
  
    /**
     * Sets extrinsic_text1
     * @param string $extrinsic_text1 
     * @return $this
     */
    public function setExtrinsicText1($extrinsic_text1)
    {
        
        $this->extrinsic_text1 = $extrinsic_text1;
        return $this;
    }
    
    /**
     * Gets extrinsic_text2
     * @return string
     */
    public function getExtrinsicText2()
    {
        return $this->extrinsic_text2;
    }
  
    /**
     * Sets extrinsic_text2
     * @param string $extrinsic_text2 
     * @return $this
     */
    public function setExtrinsicText2($extrinsic_text2)
    {
        
        $this->extrinsic_text2 = $extrinsic_text2;
        return $this;
    }
    
    /**
     * Gets extrinsic_text3
     * @return string
     */
    public function getExtrinsicText3()
    {
        return $this->extrinsic_text3;
    }
  
    /**
     * Sets extrinsic_text3
     * @param string $extrinsic_text3 
     * @return $this
     */
    public function setExtrinsicText3($extrinsic_text3)
    {
        
        $this->extrinsic_text3 = $extrinsic_text3;
        return $this;
    }
    
    /**
     * Gets extrinsic_number1
     * @return int
     */
    public function getExtrinsicNumber1()
    {
        return $this->extrinsic_number1;
    }
  
    /**
     * Sets extrinsic_number1
     * @param int $extrinsic_number1 
     * @return $this
     */
    public function setExtrinsicNumber1($extrinsic_number1)
    {
        
        $this->extrinsic_number1 = $extrinsic_number1;
        return $this;
    }
    
    /**
     * Gets extrinsic_number2
     * @return int
     */
    public function getExtrinsicNumber2()
    {
        return $this->extrinsic_number2;
    }
  
    /**
     * Sets extrinsic_number2
     * @param int $extrinsic_number2 
     * @return $this
     */
    public function setExtrinsicNumber2($extrinsic_number2)
    {
        
        $this->extrinsic_number2 = $extrinsic_number2;
        return $this;
    }
    
    /**
     * Gets extrinsic_decimal1
     * @return Number
     */
    public function getExtrinsicDecimal1()
    {
        return $this->extrinsic_decimal1;
    }
  
    /**
     * Sets extrinsic_decimal1
     * @param Number $extrinsic_decimal1 
     * @return $this
     */
    public function setExtrinsicDecimal1($extrinsic_decimal1)
    {
        
        $this->extrinsic_decimal1 = $extrinsic_decimal1;
        return $this;
    }
    
    /**
     * Gets extrinsic_decimal2
     * @return Number
     */
    public function getExtrinsicDecimal2()
    {
        return $this->extrinsic_decimal2;
    }
  
    /**
     * Sets extrinsic_decimal2
     * @param Number $extrinsic_decimal2 
     * @return $this
     */
    public function setExtrinsicDecimal2($extrinsic_decimal2)
    {
        
        $this->extrinsic_decimal2 = $extrinsic_decimal2;
        return $this;
    }
    
    /**
     * Gets casebreak_enabled
     * @return string
     */
    public function getCasebreakEnabled()
    {
        return $this->casebreak_enabled;
    }
  
    /**
     * Sets casebreak_enabled
     * @param string $casebreak_enabled 
     * @return $this
     */
    public function setCasebreakEnabled($casebreak_enabled)
    {
        
        $this->casebreak_enabled = $casebreak_enabled;
        return $this;
    }
    
    /**
     * Gets modify_date
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->modify_date;
    }
  
    /**
     * Sets modify_date
     * @param \DateTime $modify_date 
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        
        $this->modify_date = $modify_date;
        return $this;
    }
    
    /**
     * Gets forward_lot_mixing_rule
     * @return string
     */
    public function getForwardLotMixingRule()
    {
        return $this->forward_lot_mixing_rule;
    }
  
    /**
     * Sets forward_lot_mixing_rule
     * @param string $forward_lot_mixing_rule 
     * @return $this
     */
    public function setForwardLotMixingRule($forward_lot_mixing_rule)
    {
        
        $this->forward_lot_mixing_rule = $forward_lot_mixing_rule;
        return $this;
    }
    
    /**
     * Gets storage_lot_mixing_rule
     * @return string
     */
    public function getStorageLotMixingRule()
    {
        return $this->storage_lot_mixing_rule;
    }
  
    /**
     * Sets storage_lot_mixing_rule
     * @param string $storage_lot_mixing_rule 
     * @return $this
     */
    public function setStorageLotMixingRule($storage_lot_mixing_rule)
    {
        
        $this->storage_lot_mixing_rule = $storage_lot_mixing_rule;
        return $this;
    }
    
    /**
     * Gets forward_item_mixing_rule
     * @return string
     */
    public function getForwardItemMixingRule()
    {
        return $this->forward_item_mixing_rule;
    }
  
    /**
     * Sets forward_item_mixing_rule
     * @param string $forward_item_mixing_rule 
     * @return $this
     */
    public function setForwardItemMixingRule($forward_item_mixing_rule)
    {
        
        $this->forward_item_mixing_rule = $forward_item_mixing_rule;
        return $this;
    }
    
    /**
     * Gets storage_item_mixing_rule
     * @return string
     */
    public function getStorageItemMixingRule()
    {
        return $this->storage_item_mixing_rule;
    }
  
    /**
     * Sets storage_item_mixing_rule
     * @param string $storage_item_mixing_rule 
     * @return $this
     */
    public function setStorageItemMixingRule($storage_item_mixing_rule)
    {
        
        $this->storage_item_mixing_rule = $storage_item_mixing_rule;
        return $this;
    }
    
    /**
     * Gets allocation_rule
     * @return string
     */
    public function getAllocationRule()
    {
        return $this->allocation_rule;
    }
  
    /**
     * Sets allocation_rule
     * @param string $allocation_rule 
     * @return $this
     */
    public function setAllocationRule($allocation_rule)
    {
        
        $this->allocation_rule = $allocation_rule;
        return $this;
    }
    
    /**
     * Gets barcode_field
     * @return string
     */
    public function getBarcodeField()
    {
        return $this->barcode_field;
    }
  
    /**
     * Sets barcode_field
     * @param string $barcode_field 
     * @return $this
     */
    public function setBarcodeField($barcode_field)
    {
        
        $this->barcode_field = $barcode_field;
        return $this;
    }
    
    /**
     * Gets hazmat
     * @return string
     */
    public function getHazmat()
    {
        return $this->hazmat;
    }
  
    /**
     * Sets hazmat
     * @param string $hazmat 
     * @return $this
     */
    public function setHazmat($hazmat)
    {
        
        $this->hazmat = $hazmat;
        return $this;
    }
    
    /**
     * Gets is_alcohol
     * @return bool
     */
    public function getIsAlcohol()
    {
        return $this->is_alcohol;
    }
  
    /**
     * Sets is_alcohol
     * @param bool $is_alcohol 
     * @return $this
     */
    public function setIsAlcohol($is_alcohol)
    {
        
        $this->is_alcohol = $is_alcohol;
        return $this;
    }
    
    /**
     * Gets alcohol_type
     * @return string
     */
    public function getAlcoholType()
    {
        return $this->alcohol_type;
    }
  
    /**
     * Sets alcohol_type
     * @param string $alcohol_type 
     * @return $this
     */
    public function setAlcoholType($alcohol_type)
    {
        
        $this->alcohol_type = $alcohol_type;
        return $this;
    }
    
    /**
     * Gets alcohol_content
     * @return Number
     */
    public function getAlcoholContent()
    {
        return $this->alcohol_content;
    }
  
    /**
     * Sets alcohol_content
     * @param Number $alcohol_content 
     * @return $this
     */
    public function setAlcoholContent($alcohol_content)
    {
        
        $this->alcohol_content = $alcohol_content;
        return $this;
    }
    
    /**
     * Gets alcohol_container
     * @return string
     */
    public function getAlcoholContainer()
    {
        return $this->alcohol_container;
    }
  
    /**
     * Sets alcohol_container
     * @param string $alcohol_container 
     * @return $this
     */
    public function setAlcoholContainer($alcohol_container)
    {
        
        $this->alcohol_container = $alcohol_container;
        return $this;
    }
    
    /**
     * Gets alcohol_vintage_year
     * @return string
     */
    public function getAlcoholVintageYear()
    {
        return $this->alcohol_vintage_year;
    }
  
    /**
     * Sets alcohol_vintage_year
     * @param string $alcohol_vintage_year 
     * @return $this
     */
    public function setAlcoholVintageYear($alcohol_vintage_year)
    {
        
        $this->alcohol_vintage_year = $alcohol_vintage_year;
        return $this;
    }
    
    /**
     * Gets alcohol_country
     * @return string
     */
    public function getAlcoholCountry()
    {
        return $this->alcohol_country;
    }
  
    /**
     * Sets alcohol_country
     * @param string $alcohol_country 
     * @return $this
     */
    public function setAlcoholCountry($alcohol_country)
    {
        
        $this->alcohol_country = $alcohol_country;
        return $this;
    }
    
    /**
     * Gets alcohol_state
     * @return string
     */
    public function getAlcoholState()
    {
        return $this->alcohol_state;
    }
  
    /**
     * Sets alcohol_state
     * @param string $alcohol_state 
     * @return $this
     */
    public function setAlcoholState($alcohol_state)
    {
        
        $this->alcohol_state = $alcohol_state;
        return $this;
    }
    
    /**
     * Gets alcohol_region
     * @return string
     */
    public function getAlcoholRegion()
    {
        return $this->alcohol_region;
    }
  
    /**
     * Sets alcohol_region
     * @param string $alcohol_region 
     * @return $this
     */
    public function setAlcoholRegion($alcohol_region)
    {
        
        $this->alcohol_region = $alcohol_region;
        return $this;
    }
    
    /**
     * Gets alcohol_brand
     * @return string
     */
    public function getAlcoholBrand()
    {
        return $this->alcohol_brand;
    }
  
    /**
     * Sets alcohol_brand
     * @param string $alcohol_brand 
     * @return $this
     */
    public function setAlcoholBrand($alcohol_brand)
    {
        
        $this->alcohol_brand = $alcohol_brand;
        return $this;
    }
    
    /**
     * Gets alcohol_upc_code
     * @return string
     */
    public function getAlcoholUpcCode()
    {
        return $this->alcohol_upc_code;
    }
  
    /**
     * Sets alcohol_upc_code
     * @param string $alcohol_upc_code 
     * @return $this
     */
    public function setAlcoholUpcCode($alcohol_upc_code)
    {
        
        $this->alcohol_upc_code = $alcohol_upc_code;
        return $this;
    }
    
    /**
     * Gets alcohol_nambca_code
     * @return string
     */
    public function getAlcoholNambcaCode()
    {
        return $this->alcohol_nambca_code;
    }
  
    /**
     * Sets alcohol_nambca_code
     * @param string $alcohol_nambca_code 
     * @return $this
     */
    public function setAlcoholNambcaCode($alcohol_nambca_code)
    {
        
        $this->alcohol_nambca_code = $alcohol_nambca_code;
        return $this;
    }
    
    /**
     * Gets alcohol_unimerc_code
     * @return string
     */
    public function getAlcoholUnimercCode()
    {
        return $this->alcohol_unimerc_code;
    }
  
    /**
     * Sets alcohol_unimerc_code
     * @param string $alcohol_unimerc_code 
     * @return $this
     */
    public function setAlcoholUnimercCode($alcohol_unimerc_code)
    {
        
        $this->alcohol_unimerc_code = $alcohol_unimerc_code;
        return $this;
    }
    
    /**
     * Gets alcohol_scc_code
     * @return string
     */
    public function getAlcoholSccCode()
    {
        return $this->alcohol_scc_code;
    }
  
    /**
     * Sets alcohol_scc_code
     * @param string $alcohol_scc_code 
     * @return $this
     */
    public function setAlcoholSccCode($alcohol_scc_code)
    {
        
        $this->alcohol_scc_code = $alcohol_scc_code;
        return $this;
    }
    
    /**
     * Gets length
     * @return Number
     */
    public function getLength()
    {
        return $this->length;
    }
  
    /**
     * Sets length
     * @param Number $length 
     * @return $this
     */
    public function setLength($length)
    {
        
        $this->length = $length;
        return $this;
    }
    
    /**
     * Gets width
     * @return Number
     */
    public function getWidth()
    {
        return $this->width;
    }
  
    /**
     * Sets width
     * @param Number $width 
     * @return $this
     */
    public function setWidth($width)
    {
        
        $this->width = $width;
        return $this;
    }
    
    /**
     * Gets height
     * @return Number
     */
    public function getHeight()
    {
        return $this->height;
    }
  
    /**
     * Sets height
     * @param Number $height 
     * @return $this
     */
    public function setHeight($height)
    {
        
        $this->height = $height;
        return $this;
    }
    
    /**
     * Gets top_up
     * @return bool
     */
    public function getTopUp()
    {
        return $this->top_up;
    }
  
    /**
     * Sets top_up
     * @param bool $top_up 
     * @return $this
     */
    public function setTopUp($top_up)
    {
        
        $this->top_up = $top_up;
        return $this;
    }
    
    /**
     * Gets ship_solo
     * @return bool
     */
    public function getShipSolo()
    {
        return $this->ship_solo;
    }
  
    /**
     * Sets ship_solo
     * @param bool $ship_solo 
     * @return $this
     */
    public function setShipSolo($ship_solo)
    {
        
        $this->ship_solo = $ship_solo;
        return $this;
    }
    
    /**
     * Gets custom_fields
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->custom_fields;
    }
  
    /**
     * Sets custom_fields
     * @param map[string,object] $custom_fields 
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        
        $this->custom_fields = $custom_fields;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
