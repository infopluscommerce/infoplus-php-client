<?php
/**
 * ReceivingWorksheet
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Model;

use \ArrayAccess;
/**
 * ReceivingWorksheet Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Infoplus
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ReceivingWorksheet implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'warehouse_id' => 'int',
        'po_no_id' => 'int',
        'lob_id' => 'int',
        'vendor_id' => 'int',
        'status' => 'string',
        'service_level' => 'string',
        'created_by' => 'int',
        'worksheet_name' => 'string',
        'carrier' => 'string',
        'on_the_dock' => 'bool',
        'auto_commit' => 'bool',
        'line_items' => '\Infoplus\Model\ReceivingWorksheetLineItem[]',
        'notes' => 'string',
        'work_batch_id' => 'int',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'warehouse_id' => 'warehouseId',
        'po_no_id' => 'poNoId',
        'lob_id' => 'lobId',
        'vendor_id' => 'vendorId',
        'status' => 'status',
        'service_level' => 'serviceLevel',
        'created_by' => 'createdBy',
        'worksheet_name' => 'worksheetName',
        'carrier' => 'carrier',
        'on_the_dock' => 'onTheDock',
        'auto_commit' => 'autoCommit',
        'line_items' => 'lineItems',
        'notes' => 'notes',
        'work_batch_id' => 'workBatchId',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'warehouse_id' => 'setWarehouseId',
        'po_no_id' => 'setPoNoId',
        'lob_id' => 'setLobId',
        'vendor_id' => 'setVendorId',
        'status' => 'setStatus',
        'service_level' => 'setServiceLevel',
        'created_by' => 'setCreatedBy',
        'worksheet_name' => 'setWorksheetName',
        'carrier' => 'setCarrier',
        'on_the_dock' => 'setOnTheDock',
        'auto_commit' => 'setAutoCommit',
        'line_items' => 'setLineItems',
        'notes' => 'setNotes',
        'work_batch_id' => 'setWorkBatchId',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'warehouse_id' => 'getWarehouseId',
        'po_no_id' => 'getPoNoId',
        'lob_id' => 'getLobId',
        'vendor_id' => 'getVendorId',
        'status' => 'getStatus',
        'service_level' => 'getServiceLevel',
        'created_by' => 'getCreatedBy',
        'worksheet_name' => 'getWorksheetName',
        'carrier' => 'getCarrier',
        'on_the_dock' => 'getOnTheDock',
        'auto_commit' => 'getAutoCommit',
        'line_items' => 'getLineItems',
        'notes' => 'getNotes',
        'work_batch_id' => 'getWorkBatchId',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $warehouse_id 
      * @var int
      */
    protected $warehouse_id;
    
    /**
      * $po_no_id 
      * @var int
      */
    protected $po_no_id;
    
    /**
      * $lob_id 
      * @var int
      */
    protected $lob_id;
    
    /**
      * $vendor_id 
      * @var int
      */
    protected $vendor_id;
    
    /**
      * $status 
      * @var string
      */
    protected $status;
    
    /**
      * $service_level 
      * @var string
      */
    protected $service_level;
    
    /**
      * $created_by 
      * @var int
      */
    protected $created_by;
    
    /**
      * $worksheet_name 
      * @var string
      */
    protected $worksheet_name;
    
    /**
      * $carrier 
      * @var string
      */
    protected $carrier;
    
    /**
      * $on_the_dock 
      * @var bool
      */
    protected $on_the_dock = false;
    
    /**
      * $auto_commit 
      * @var bool
      */
    protected $auto_commit = false;
    
    /**
      * $line_items 
      * @var \Infoplus\Model\ReceivingWorksheetLineItem[]
      */
    protected $line_items;
    
    /**
      * $notes 
      * @var string
      */
    protected $notes;
    
    /**
      * $work_batch_id 
      * @var int
      */
    protected $work_batch_id;
    
    /**
      * $create_date 
      * @var \DateTime
      */
    protected $create_date;
    
    /**
      * $modify_date 
      * @var \DateTime
      */
    protected $modify_date;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->warehouse_id = $data["warehouse_id"];
            $this->po_no_id = $data["po_no_id"];
            $this->lob_id = $data["lob_id"];
            $this->vendor_id = $data["vendor_id"];
            $this->status = $data["status"];
            $this->service_level = $data["service_level"];
            $this->created_by = $data["created_by"];
            $this->worksheet_name = $data["worksheet_name"];
            $this->carrier = $data["carrier"];
            $this->on_the_dock = $data["on_the_dock"];
            $this->auto_commit = $data["auto_commit"];
            $this->line_items = $data["line_items"];
            $this->notes = $data["notes"];
            $this->work_batch_id = $data["work_batch_id"];
            $this->create_date = $data["create_date"];
            $this->modify_date = $data["modify_date"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets warehouse_id
     * @return int
     */
    public function getWarehouseId()
    {
        return $this->warehouse_id;
    }
  
    /**
     * Sets warehouse_id
     * @param int $warehouse_id 
     * @return $this
     */
    public function setWarehouseId($warehouse_id)
    {
        
        $this->warehouse_id = $warehouse_id;
        return $this;
    }
    
    /**
     * Gets po_no_id
     * @return int
     */
    public function getPoNoId()
    {
        return $this->po_no_id;
    }
  
    /**
     * Sets po_no_id
     * @param int $po_no_id 
     * @return $this
     */
    public function setPoNoId($po_no_id)
    {
        
        $this->po_no_id = $po_no_id;
        return $this;
    }
    
    /**
     * Gets lob_id
     * @return int
     */
    public function getLobId()
    {
        return $this->lob_id;
    }
  
    /**
     * Sets lob_id
     * @param int $lob_id 
     * @return $this
     */
    public function setLobId($lob_id)
    {
        
        $this->lob_id = $lob_id;
        return $this;
    }
    
    /**
     * Gets vendor_id
     * @return int
     */
    public function getVendorId()
    {
        return $this->vendor_id;
    }
  
    /**
     * Sets vendor_id
     * @param int $vendor_id 
     * @return $this
     */
    public function setVendorId($vendor_id)
    {
        
        $this->vendor_id = $vendor_id;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets service_level
     * @return string
     */
    public function getServiceLevel()
    {
        return $this->service_level;
    }
  
    /**
     * Sets service_level
     * @param string $service_level 
     * @return $this
     */
    public function setServiceLevel($service_level)
    {
        
        $this->service_level = $service_level;
        return $this;
    }
    
    /**
     * Gets created_by
     * @return int
     */
    public function getCreatedBy()
    {
        return $this->created_by;
    }
  
    /**
     * Sets created_by
     * @param int $created_by 
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        
        $this->created_by = $created_by;
        return $this;
    }
    
    /**
     * Gets worksheet_name
     * @return string
     */
    public function getWorksheetName()
    {
        return $this->worksheet_name;
    }
  
    /**
     * Sets worksheet_name
     * @param string $worksheet_name 
     * @return $this
     */
    public function setWorksheetName($worksheet_name)
    {
        
        $this->worksheet_name = $worksheet_name;
        return $this;
    }
    
    /**
     * Gets carrier
     * @return string
     */
    public function getCarrier()
    {
        return $this->carrier;
    }
  
    /**
     * Sets carrier
     * @param string $carrier 
     * @return $this
     */
    public function setCarrier($carrier)
    {
        
        $this->carrier = $carrier;
        return $this;
    }
    
    /**
     * Gets on_the_dock
     * @return bool
     */
    public function getOnTheDock()
    {
        return $this->on_the_dock;
    }
  
    /**
     * Sets on_the_dock
     * @param bool $on_the_dock 
     * @return $this
     */
    public function setOnTheDock($on_the_dock)
    {
        
        $this->on_the_dock = $on_the_dock;
        return $this;
    }
    
    /**
     * Gets auto_commit
     * @return bool
     */
    public function getAutoCommit()
    {
        return $this->auto_commit;
    }
  
    /**
     * Sets auto_commit
     * @param bool $auto_commit 
     * @return $this
     */
    public function setAutoCommit($auto_commit)
    {
        
        $this->auto_commit = $auto_commit;
        return $this;
    }
    
    /**
     * Gets line_items
     * @return \Infoplus\Model\ReceivingWorksheetLineItem[]
     */
    public function getLineItems()
    {
        return $this->line_items;
    }
  
    /**
     * Sets line_items
     * @param \Infoplus\Model\ReceivingWorksheetLineItem[] $line_items 
     * @return $this
     */
    public function setLineItems($line_items)
    {
        
        $this->line_items = $line_items;
        return $this;
    }
    
    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->notes;
    }
  
    /**
     * Sets notes
     * @param string $notes 
     * @return $this
     */
    public function setNotes($notes)
    {
        
        $this->notes = $notes;
        return $this;
    }
    
    /**
     * Gets work_batch_id
     * @return int
     */
    public function getWorkBatchId()
    {
        return $this->work_batch_id;
    }
  
    /**
     * Sets work_batch_id
     * @param int $work_batch_id 
     * @return $this
     */
    public function setWorkBatchId($work_batch_id)
    {
        
        $this->work_batch_id = $work_batch_id;
        return $this;
    }
    
    /**
     * Gets create_date
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->create_date;
    }
  
    /**
     * Sets create_date
     * @param \DateTime $create_date 
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        
        $this->create_date = $create_date;
        return $this;
    }
    
    /**
     * Gets modify_date
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->modify_date;
    }
  
    /**
     * Sets modify_date
     * @param \DateTime $modify_date 
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        
        $this->modify_date = $modify_date;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
