<?php
/**
 * InvoiceWorksheetLineDetail
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * InvoiceWorksheetLineDetail Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvoiceWorksheetLineDetail implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'invoiceWorksheetLineDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'lob_id' => 'int',
        'quantity' => 'float',
        'charge_rate' => 'float',
        'extended_charge' => 'float',
        'invoice_worksheet_id' => 'int',
        'invoice_worksheet_line_id' => 'int',
        'activity_type' => 'string',
        'activity_record_id' => 'string',
        'reference1' => 'string',
        'reference2' => 'string',
        'reference3' => 'string',
        'reference4' => 'string',
        'reference5' => 'string',
        'activity_record' => 'map[string,object]',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'create_date' => 'date-time',
        'modify_date' => 'date-time',
        'lob_id' => 'int32',
        'quantity' => null,
        'charge_rate' => null,
        'extended_charge' => null,
        'invoice_worksheet_id' => 'int32',
        'invoice_worksheet_line_id' => 'int32',
        'activity_type' => null,
        'activity_record_id' => null,
        'reference1' => null,
        'reference2' => null,
        'reference3' => null,
        'reference4' => null,
        'reference5' => null,
        'activity_record' => null,
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'lob_id' => 'lobId',
        'quantity' => 'quantity',
        'charge_rate' => 'chargeRate',
        'extended_charge' => 'extendedCharge',
        'invoice_worksheet_id' => 'invoiceWorksheetId',
        'invoice_worksheet_line_id' => 'invoiceWorksheetLineId',
        'activity_type' => 'activityType',
        'activity_record_id' => 'activityRecordID',
        'reference1' => 'reference1',
        'reference2' => 'reference2',
        'reference3' => 'reference3',
        'reference4' => 'reference4',
        'reference5' => 'reference5',
        'activity_record' => 'activityRecord',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'lob_id' => 'setLobId',
        'quantity' => 'setQuantity',
        'charge_rate' => 'setChargeRate',
        'extended_charge' => 'setExtendedCharge',
        'invoice_worksheet_id' => 'setInvoiceWorksheetId',
        'invoice_worksheet_line_id' => 'setInvoiceWorksheetLineId',
        'activity_type' => 'setActivityType',
        'activity_record_id' => 'setActivityRecordId',
        'reference1' => 'setReference1',
        'reference2' => 'setReference2',
        'reference3' => 'setReference3',
        'reference4' => 'setReference4',
        'reference5' => 'setReference5',
        'activity_record' => 'setActivityRecord',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'lob_id' => 'getLobId',
        'quantity' => 'getQuantity',
        'charge_rate' => 'getChargeRate',
        'extended_charge' => 'getExtendedCharge',
        'invoice_worksheet_id' => 'getInvoiceWorksheetId',
        'invoice_worksheet_line_id' => 'getInvoiceWorksheetLineId',
        'activity_type' => 'getActivityType',
        'activity_record_id' => 'getActivityRecordId',
        'reference1' => 'getReference1',
        'reference2' => 'getReference2',
        'reference3' => 'getReference3',
        'reference4' => 'getReference4',
        'reference5' => 'getReference5',
        'activity_record' => 'getActivityRecord',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['charge_rate'] = isset($data['charge_rate']) ? $data['charge_rate'] : null;
        $this->container['extended_charge'] = isset($data['extended_charge']) ? $data['extended_charge'] : null;
        $this->container['invoice_worksheet_id'] = isset($data['invoice_worksheet_id']) ? $data['invoice_worksheet_id'] : null;
        $this->container['invoice_worksheet_line_id'] = isset($data['invoice_worksheet_line_id']) ? $data['invoice_worksheet_line_id'] : null;
        $this->container['activity_type'] = isset($data['activity_type']) ? $data['activity_type'] : null;
        $this->container['activity_record_id'] = isset($data['activity_record_id']) ? $data['activity_record_id'] : null;
        $this->container['reference1'] = isset($data['reference1']) ? $data['reference1'] : null;
        $this->container['reference2'] = isset($data['reference2']) ? $data['reference2'] : null;
        $this->container['reference3'] = isset($data['reference3']) ? $data['reference3'] : null;
        $this->container['reference4'] = isset($data['reference4']) ? $data['reference4'] : null;
        $this->container['reference5'] = isset($data['reference5']) ? $data['reference5'] : null;
        $this->container['activity_record'] = isset($data['activity_record']) ? $data['activity_record'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['invoice_worksheet_id'] === null) {
            $invalidProperties[] = "'invoice_worksheet_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['invoice_worksheet_id'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return float
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param float $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets charge_rate
     *
     * @return float
     */
    public function getChargeRate()
    {
        return $this->container['charge_rate'];
    }

    /**
     * Sets charge_rate
     *
     * @param float $charge_rate charge_rate
     *
     * @return $this
     */
    public function setChargeRate($charge_rate)
    {
        $this->container['charge_rate'] = $charge_rate;

        return $this;
    }

    /**
     * Gets extended_charge
     *
     * @return float
     */
    public function getExtendedCharge()
    {
        return $this->container['extended_charge'];
    }

    /**
     * Sets extended_charge
     *
     * @param float $extended_charge extended_charge
     *
     * @return $this
     */
    public function setExtendedCharge($extended_charge)
    {
        $this->container['extended_charge'] = $extended_charge;

        return $this;
    }

    /**
     * Gets invoice_worksheet_id
     *
     * @return int
     */
    public function getInvoiceWorksheetId()
    {
        return $this->container['invoice_worksheet_id'];
    }

    /**
     * Sets invoice_worksheet_id
     *
     * @param int $invoice_worksheet_id invoice_worksheet_id
     *
     * @return $this
     */
    public function setInvoiceWorksheetId($invoice_worksheet_id)
    {
        $this->container['invoice_worksheet_id'] = $invoice_worksheet_id;

        return $this;
    }

    /**
     * Gets invoice_worksheet_line_id
     *
     * @return int
     */
    public function getInvoiceWorksheetLineId()
    {
        return $this->container['invoice_worksheet_line_id'];
    }

    /**
     * Sets invoice_worksheet_line_id
     *
     * @param int $invoice_worksheet_line_id invoice_worksheet_line_id
     *
     * @return $this
     */
    public function setInvoiceWorksheetLineId($invoice_worksheet_line_id)
    {
        $this->container['invoice_worksheet_line_id'] = $invoice_worksheet_line_id;

        return $this;
    }

    /**
     * Gets activity_type
     *
     * @return string
     */
    public function getActivityType()
    {
        return $this->container['activity_type'];
    }

    /**
     * Sets activity_type
     *
     * @param string $activity_type activity_type
     *
     * @return $this
     */
    public function setActivityType($activity_type)
    {
        $this->container['activity_type'] = $activity_type;

        return $this;
    }

    /**
     * Gets activity_record_id
     *
     * @return string
     */
    public function getActivityRecordId()
    {
        return $this->container['activity_record_id'];
    }

    /**
     * Sets activity_record_id
     *
     * @param string $activity_record_id activity_record_id
     *
     * @return $this
     */
    public function setActivityRecordId($activity_record_id)
    {
        $this->container['activity_record_id'] = $activity_record_id;

        return $this;
    }

    /**
     * Gets reference1
     *
     * @return string
     */
    public function getReference1()
    {
        return $this->container['reference1'];
    }

    /**
     * Sets reference1
     *
     * @param string $reference1 reference1
     *
     * @return $this
     */
    public function setReference1($reference1)
    {
        $this->container['reference1'] = $reference1;

        return $this;
    }

    /**
     * Gets reference2
     *
     * @return string
     */
    public function getReference2()
    {
        return $this->container['reference2'];
    }

    /**
     * Sets reference2
     *
     * @param string $reference2 reference2
     *
     * @return $this
     */
    public function setReference2($reference2)
    {
        $this->container['reference2'] = $reference2;

        return $this;
    }

    /**
     * Gets reference3
     *
     * @return string
     */
    public function getReference3()
    {
        return $this->container['reference3'];
    }

    /**
     * Sets reference3
     *
     * @param string $reference3 reference3
     *
     * @return $this
     */
    public function setReference3($reference3)
    {
        $this->container['reference3'] = $reference3;

        return $this;
    }

    /**
     * Gets reference4
     *
     * @return string
     */
    public function getReference4()
    {
        return $this->container['reference4'];
    }

    /**
     * Sets reference4
     *
     * @param string $reference4 reference4
     *
     * @return $this
     */
    public function setReference4($reference4)
    {
        $this->container['reference4'] = $reference4;

        return $this;
    }

    /**
     * Gets reference5
     *
     * @return string
     */
    public function getReference5()
    {
        return $this->container['reference5'];
    }

    /**
     * Sets reference5
     *
     * @param string $reference5 reference5
     *
     * @return $this
     */
    public function setReference5($reference5)
    {
        $this->container['reference5'] = $reference5;

        return $this;
    }

    /**
     * Gets activity_record
     *
     * @return map[string,object]
     */
    public function getActivityRecord()
    {
        return $this->container['activity_record'];
    }

    /**
     * Sets activity_record
     *
     * @param map[string,object] $activity_record activity_record
     *
     * @return $this
     */
    public function setActivityRecord($activity_record)
    {
        $this->container['activity_record'] = $activity_record;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


