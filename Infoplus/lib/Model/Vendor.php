<?php
/**
 * Vendor
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * Vendor Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Vendor implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'vendor';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'vendor_no' => 'int',
        'lob_id' => 'int',
        'name' => 'string',
        'street' => 'string',
        'street2' => 'string',
        'city' => 'string',
        'state' => 'string',
        'country' => 'string',
        'zip_code' => 'string',
        'contact' => 'string',
        'phone' => 'string',
        'fax' => 'string',
        'external_id' => 'string',
        'terms' => 'string',
        'fob' => 'string',
        'ship_via' => 'int',
        'request_days' => 'int',
        'actual_days' => 'int',
        'sales_tax_code' => 'string',
        'product1' => 'int',
        'product2' => 'int',
        'product3' => 'int',
        'product4' => 'int',
        'product5' => 'int',
        'product6' => 'int',
        'product7' => 'int',
        'product8' => 'int',
        'product9' => 'int',
        'pod_days' => 'int',
        'charge_out' => 'string',
        'ar_email' => 'string',
        'order_email' => 'string',
        'order_attach' => 'string',
        'send_quantity_type' => 'string',
        'minority' => 'string',
        'send_outside' => 'string',
        'pod_order_suffix' => 'int',
        'pod_email' => 'string',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'inactive' => 'string',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'vendor_no' => 'int32',
        'lob_id' => 'int32',
        'name' => null,
        'street' => null,
        'street2' => null,
        'city' => null,
        'state' => null,
        'country' => null,
        'zip_code' => null,
        'contact' => null,
        'phone' => null,
        'fax' => null,
        'external_id' => null,
        'terms' => null,
        'fob' => null,
        'ship_via' => 'int32',
        'request_days' => 'int32',
        'actual_days' => 'int32',
        'sales_tax_code' => null,
        'product1' => 'int32',
        'product2' => 'int32',
        'product3' => 'int32',
        'product4' => 'int32',
        'product5' => 'int32',
        'product6' => 'int32',
        'product7' => 'int32',
        'product8' => 'int32',
        'product9' => 'int32',
        'pod_days' => 'int32',
        'charge_out' => null,
        'ar_email' => null,
        'order_email' => null,
        'order_attach' => null,
        'send_quantity_type' => null,
        'minority' => null,
        'send_outside' => null,
        'pod_order_suffix' => 'int32',
        'pod_email' => null,
        'create_date' => 'date-time',
        'modify_date' => 'date-time',
        'inactive' => null,
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'vendor_no' => 'vendorNo',
        'lob_id' => 'lobId',
        'name' => 'name',
        'street' => 'street',
        'street2' => 'street2',
        'city' => 'city',
        'state' => 'state',
        'country' => 'country',
        'zip_code' => 'zipCode',
        'contact' => 'contact',
        'phone' => 'phone',
        'fax' => 'fax',
        'external_id' => 'externalId',
        'terms' => 'terms',
        'fob' => 'fob',
        'ship_via' => 'shipVia',
        'request_days' => 'requestDays',
        'actual_days' => 'actualDays',
        'sales_tax_code' => 'salesTaxCode',
        'product1' => 'product1',
        'product2' => 'product2',
        'product3' => 'product3',
        'product4' => 'product4',
        'product5' => 'product5',
        'product6' => 'product6',
        'product7' => 'product7',
        'product8' => 'product8',
        'product9' => 'product9',
        'pod_days' => 'podDays',
        'charge_out' => 'chargeOut',
        'ar_email' => 'arEmail',
        'order_email' => 'orderEmail',
        'order_attach' => 'orderAttach',
        'send_quantity_type' => 'sendQuantityType',
        'minority' => 'minority',
        'send_outside' => 'sendOutside',
        'pod_order_suffix' => 'podOrderSuffix',
        'pod_email' => 'podEmail',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'inactive' => 'inactive',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'vendor_no' => 'setVendorNo',
        'lob_id' => 'setLobId',
        'name' => 'setName',
        'street' => 'setStreet',
        'street2' => 'setStreet2',
        'city' => 'setCity',
        'state' => 'setState',
        'country' => 'setCountry',
        'zip_code' => 'setZipCode',
        'contact' => 'setContact',
        'phone' => 'setPhone',
        'fax' => 'setFax',
        'external_id' => 'setExternalId',
        'terms' => 'setTerms',
        'fob' => 'setFob',
        'ship_via' => 'setShipVia',
        'request_days' => 'setRequestDays',
        'actual_days' => 'setActualDays',
        'sales_tax_code' => 'setSalesTaxCode',
        'product1' => 'setProduct1',
        'product2' => 'setProduct2',
        'product3' => 'setProduct3',
        'product4' => 'setProduct4',
        'product5' => 'setProduct5',
        'product6' => 'setProduct6',
        'product7' => 'setProduct7',
        'product8' => 'setProduct8',
        'product9' => 'setProduct9',
        'pod_days' => 'setPodDays',
        'charge_out' => 'setChargeOut',
        'ar_email' => 'setArEmail',
        'order_email' => 'setOrderEmail',
        'order_attach' => 'setOrderAttach',
        'send_quantity_type' => 'setSendQuantityType',
        'minority' => 'setMinority',
        'send_outside' => 'setSendOutside',
        'pod_order_suffix' => 'setPodOrderSuffix',
        'pod_email' => 'setPodEmail',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'inactive' => 'setInactive',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'vendor_no' => 'getVendorNo',
        'lob_id' => 'getLobId',
        'name' => 'getName',
        'street' => 'getStreet',
        'street2' => 'getStreet2',
        'city' => 'getCity',
        'state' => 'getState',
        'country' => 'getCountry',
        'zip_code' => 'getZipCode',
        'contact' => 'getContact',
        'phone' => 'getPhone',
        'fax' => 'getFax',
        'external_id' => 'getExternalId',
        'terms' => 'getTerms',
        'fob' => 'getFob',
        'ship_via' => 'getShipVia',
        'request_days' => 'getRequestDays',
        'actual_days' => 'getActualDays',
        'sales_tax_code' => 'getSalesTaxCode',
        'product1' => 'getProduct1',
        'product2' => 'getProduct2',
        'product3' => 'getProduct3',
        'product4' => 'getProduct4',
        'product5' => 'getProduct5',
        'product6' => 'getProduct6',
        'product7' => 'getProduct7',
        'product8' => 'getProduct8',
        'product9' => 'getProduct9',
        'pod_days' => 'getPodDays',
        'charge_out' => 'getChargeOut',
        'ar_email' => 'getArEmail',
        'order_email' => 'getOrderEmail',
        'order_attach' => 'getOrderAttach',
        'send_quantity_type' => 'getSendQuantityType',
        'minority' => 'getMinority',
        'send_outside' => 'getSendOutside',
        'pod_order_suffix' => 'getPodOrderSuffix',
        'pod_email' => 'getPodEmail',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'inactive' => 'getInactive',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['vendor_no'] = isset($data['vendor_no']) ? $data['vendor_no'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['street2'] = isset($data['street2']) ? $data['street2'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['zip_code'] = isset($data['zip_code']) ? $data['zip_code'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['external_id'] = isset($data['external_id']) ? $data['external_id'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['fob'] = isset($data['fob']) ? $data['fob'] : null;
        $this->container['ship_via'] = isset($data['ship_via']) ? $data['ship_via'] : null;
        $this->container['request_days'] = isset($data['request_days']) ? $data['request_days'] : null;
        $this->container['actual_days'] = isset($data['actual_days']) ? $data['actual_days'] : null;
        $this->container['sales_tax_code'] = isset($data['sales_tax_code']) ? $data['sales_tax_code'] : null;
        $this->container['product1'] = isset($data['product1']) ? $data['product1'] : null;
        $this->container['product2'] = isset($data['product2']) ? $data['product2'] : null;
        $this->container['product3'] = isset($data['product3']) ? $data['product3'] : null;
        $this->container['product4'] = isset($data['product4']) ? $data['product4'] : null;
        $this->container['product5'] = isset($data['product5']) ? $data['product5'] : null;
        $this->container['product6'] = isset($data['product6']) ? $data['product6'] : null;
        $this->container['product7'] = isset($data['product7']) ? $data['product7'] : null;
        $this->container['product8'] = isset($data['product8']) ? $data['product8'] : null;
        $this->container['product9'] = isset($data['product9']) ? $data['product9'] : null;
        $this->container['pod_days'] = isset($data['pod_days']) ? $data['pod_days'] : null;
        $this->container['charge_out'] = isset($data['charge_out']) ? $data['charge_out'] : null;
        $this->container['ar_email'] = isset($data['ar_email']) ? $data['ar_email'] : null;
        $this->container['order_email'] = isset($data['order_email']) ? $data['order_email'] : null;
        $this->container['order_attach'] = isset($data['order_attach']) ? $data['order_attach'] : null;
        $this->container['send_quantity_type'] = isset($data['send_quantity_type']) ? $data['send_quantity_type'] : null;
        $this->container['minority'] = isset($data['minority']) ? $data['minority'] : null;
        $this->container['send_outside'] = isset($data['send_outside']) ? $data['send_outside'] : null;
        $this->container['pod_order_suffix'] = isset($data['pod_order_suffix']) ? $data['pod_order_suffix'] : null;
        $this->container['pod_email'] = isset($data['pod_email']) ? $data['pod_email'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['inactive'] = isset($data['inactive']) ? $data['inactive'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['vendor_no'] === null) {
            $invalidProperties[] = "'vendor_no' can't be null";
        }
        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['street'] === null) {
            $invalidProperties[] = "'street' can't be null";
        }
        if ($this->container['city'] === null) {
            $invalidProperties[] = "'city' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['zip_code'] === null) {
            $invalidProperties[] = "'zip_code' can't be null";
        }
        if ($this->container['inactive'] === null) {
            $invalidProperties[] = "'inactive' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['vendor_no'] === null) {
            return false;
        }
        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['name'] === null) {
            return false;
        }
        if ($this->container['street'] === null) {
            return false;
        }
        if ($this->container['city'] === null) {
            return false;
        }
        if ($this->container['state'] === null) {
            return false;
        }
        if ($this->container['zip_code'] === null) {
            return false;
        }
        if ($this->container['inactive'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets vendor_no
     *
     * @return int
     */
    public function getVendorNo()
    {
        return $this->container['vendor_no'];
    }

    /**
     * Sets vendor_no
     *
     * @param int $vendor_no vendor_no
     *
     * @return $this
     */
    public function setVendorNo($vendor_no)
    {
        $this->container['vendor_no'] = $vendor_no;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets street
     *
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     *
     * @param string $street street
     *
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets street2
     *
     * @return string
     */
    public function getStreet2()
    {
        return $this->container['street2'];
    }

    /**
     * Sets street2
     *
     * @param string $street2 street2
     *
     * @return $this
     */
    public function setStreet2($street2)
    {
        $this->container['street2'] = $street2;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets zip_code
     *
     * @return string
     */
    public function getZipCode()
    {
        return $this->container['zip_code'];
    }

    /**
     * Sets zip_code
     *
     * @param string $zip_code zip_code
     *
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        $this->container['zip_code'] = $zip_code;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact contact
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string $external_id external_id
     *
     * @return $this
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets fob
     *
     * @return string
     */
    public function getFob()
    {
        return $this->container['fob'];
    }

    /**
     * Sets fob
     *
     * @param string $fob fob
     *
     * @return $this
     */
    public function setFob($fob)
    {
        $this->container['fob'] = $fob;

        return $this;
    }

    /**
     * Gets ship_via
     *
     * @return int
     */
    public function getShipVia()
    {
        return $this->container['ship_via'];
    }

    /**
     * Sets ship_via
     *
     * @param int $ship_via ship_via
     *
     * @return $this
     */
    public function setShipVia($ship_via)
    {
        $this->container['ship_via'] = $ship_via;

        return $this;
    }

    /**
     * Gets request_days
     *
     * @return int
     */
    public function getRequestDays()
    {
        return $this->container['request_days'];
    }

    /**
     * Sets request_days
     *
     * @param int $request_days request_days
     *
     * @return $this
     */
    public function setRequestDays($request_days)
    {
        $this->container['request_days'] = $request_days;

        return $this;
    }

    /**
     * Gets actual_days
     *
     * @return int
     */
    public function getActualDays()
    {
        return $this->container['actual_days'];
    }

    /**
     * Sets actual_days
     *
     * @param int $actual_days actual_days
     *
     * @return $this
     */
    public function setActualDays($actual_days)
    {
        $this->container['actual_days'] = $actual_days;

        return $this;
    }

    /**
     * Gets sales_tax_code
     *
     * @return string
     */
    public function getSalesTaxCode()
    {
        return $this->container['sales_tax_code'];
    }

    /**
     * Sets sales_tax_code
     *
     * @param string $sales_tax_code sales_tax_code
     *
     * @return $this
     */
    public function setSalesTaxCode($sales_tax_code)
    {
        $this->container['sales_tax_code'] = $sales_tax_code;

        return $this;
    }

    /**
     * Gets product1
     *
     * @return int
     */
    public function getProduct1()
    {
        return $this->container['product1'];
    }

    /**
     * Sets product1
     *
     * @param int $product1 product1
     *
     * @return $this
     */
    public function setProduct1($product1)
    {
        $this->container['product1'] = $product1;

        return $this;
    }

    /**
     * Gets product2
     *
     * @return int
     */
    public function getProduct2()
    {
        return $this->container['product2'];
    }

    /**
     * Sets product2
     *
     * @param int $product2 product2
     *
     * @return $this
     */
    public function setProduct2($product2)
    {
        $this->container['product2'] = $product2;

        return $this;
    }

    /**
     * Gets product3
     *
     * @return int
     */
    public function getProduct3()
    {
        return $this->container['product3'];
    }

    /**
     * Sets product3
     *
     * @param int $product3 product3
     *
     * @return $this
     */
    public function setProduct3($product3)
    {
        $this->container['product3'] = $product3;

        return $this;
    }

    /**
     * Gets product4
     *
     * @return int
     */
    public function getProduct4()
    {
        return $this->container['product4'];
    }

    /**
     * Sets product4
     *
     * @param int $product4 product4
     *
     * @return $this
     */
    public function setProduct4($product4)
    {
        $this->container['product4'] = $product4;

        return $this;
    }

    /**
     * Gets product5
     *
     * @return int
     */
    public function getProduct5()
    {
        return $this->container['product5'];
    }

    /**
     * Sets product5
     *
     * @param int $product5 product5
     *
     * @return $this
     */
    public function setProduct5($product5)
    {
        $this->container['product5'] = $product5;

        return $this;
    }

    /**
     * Gets product6
     *
     * @return int
     */
    public function getProduct6()
    {
        return $this->container['product6'];
    }

    /**
     * Sets product6
     *
     * @param int $product6 product6
     *
     * @return $this
     */
    public function setProduct6($product6)
    {
        $this->container['product6'] = $product6;

        return $this;
    }

    /**
     * Gets product7
     *
     * @return int
     */
    public function getProduct7()
    {
        return $this->container['product7'];
    }

    /**
     * Sets product7
     *
     * @param int $product7 product7
     *
     * @return $this
     */
    public function setProduct7($product7)
    {
        $this->container['product7'] = $product7;

        return $this;
    }

    /**
     * Gets product8
     *
     * @return int
     */
    public function getProduct8()
    {
        return $this->container['product8'];
    }

    /**
     * Sets product8
     *
     * @param int $product8 product8
     *
     * @return $this
     */
    public function setProduct8($product8)
    {
        $this->container['product8'] = $product8;

        return $this;
    }

    /**
     * Gets product9
     *
     * @return int
     */
    public function getProduct9()
    {
        return $this->container['product9'];
    }

    /**
     * Sets product9
     *
     * @param int $product9 product9
     *
     * @return $this
     */
    public function setProduct9($product9)
    {
        $this->container['product9'] = $product9;

        return $this;
    }

    /**
     * Gets pod_days
     *
     * @return int
     */
    public function getPodDays()
    {
        return $this->container['pod_days'];
    }

    /**
     * Sets pod_days
     *
     * @param int $pod_days pod_days
     *
     * @return $this
     */
    public function setPodDays($pod_days)
    {
        $this->container['pod_days'] = $pod_days;

        return $this;
    }

    /**
     * Gets charge_out
     *
     * @return string
     */
    public function getChargeOut()
    {
        return $this->container['charge_out'];
    }

    /**
     * Sets charge_out
     *
     * @param string $charge_out charge_out
     *
     * @return $this
     */
    public function setChargeOut($charge_out)
    {
        $this->container['charge_out'] = $charge_out;

        return $this;
    }

    /**
     * Gets ar_email
     *
     * @return string
     */
    public function getArEmail()
    {
        return $this->container['ar_email'];
    }

    /**
     * Sets ar_email
     *
     * @param string $ar_email ar_email
     *
     * @return $this
     */
    public function setArEmail($ar_email)
    {
        $this->container['ar_email'] = $ar_email;

        return $this;
    }

    /**
     * Gets order_email
     *
     * @return string
     */
    public function getOrderEmail()
    {
        return $this->container['order_email'];
    }

    /**
     * Sets order_email
     *
     * @param string $order_email order_email
     *
     * @return $this
     */
    public function setOrderEmail($order_email)
    {
        $this->container['order_email'] = $order_email;

        return $this;
    }

    /**
     * Gets order_attach
     *
     * @return string
     */
    public function getOrderAttach()
    {
        return $this->container['order_attach'];
    }

    /**
     * Sets order_attach
     *
     * @param string $order_attach order_attach
     *
     * @return $this
     */
    public function setOrderAttach($order_attach)
    {
        $this->container['order_attach'] = $order_attach;

        return $this;
    }

    /**
     * Gets send_quantity_type
     *
     * @return string
     */
    public function getSendQuantityType()
    {
        return $this->container['send_quantity_type'];
    }

    /**
     * Sets send_quantity_type
     *
     * @param string $send_quantity_type send_quantity_type
     *
     * @return $this
     */
    public function setSendQuantityType($send_quantity_type)
    {
        $this->container['send_quantity_type'] = $send_quantity_type;

        return $this;
    }

    /**
     * Gets minority
     *
     * @return string
     */
    public function getMinority()
    {
        return $this->container['minority'];
    }

    /**
     * Sets minority
     *
     * @param string $minority minority
     *
     * @return $this
     */
    public function setMinority($minority)
    {
        $this->container['minority'] = $minority;

        return $this;
    }

    /**
     * Gets send_outside
     *
     * @return string
     */
    public function getSendOutside()
    {
        return $this->container['send_outside'];
    }

    /**
     * Sets send_outside
     *
     * @param string $send_outside send_outside
     *
     * @return $this
     */
    public function setSendOutside($send_outside)
    {
        $this->container['send_outside'] = $send_outside;

        return $this;
    }

    /**
     * Gets pod_order_suffix
     *
     * @return int
     */
    public function getPodOrderSuffix()
    {
        return $this->container['pod_order_suffix'];
    }

    /**
     * Sets pod_order_suffix
     *
     * @param int $pod_order_suffix pod_order_suffix
     *
     * @return $this
     */
    public function setPodOrderSuffix($pod_order_suffix)
    {
        $this->container['pod_order_suffix'] = $pod_order_suffix;

        return $this;
    }

    /**
     * Gets pod_email
     *
     * @return string
     */
    public function getPodEmail()
    {
        return $this->container['pod_email'];
    }

    /**
     * Sets pod_email
     *
     * @param string $pod_email pod_email
     *
     * @return $this
     */
    public function setPodEmail($pod_email)
    {
        $this->container['pod_email'] = $pod_email;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets inactive
     *
     * @return string
     */
    public function getInactive()
    {
        return $this->container['inactive'];
    }

    /**
     * Sets inactive
     *
     * @param string $inactive inactive
     *
     * @return $this
     */
    public function setInactive($inactive)
    {
        $this->container['inactive'] = $inactive;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


