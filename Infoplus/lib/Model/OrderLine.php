<?php
/**
 * OrderLine
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * OrderLine Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderLine implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'orderLine';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'line_item_id' => 'int',
        'customer_line_item_no' => 'string',
        'order_no' => 'float',
        'lob_id' => 'int',
        'sku' => 'string',
        'po_no_id' => 'int',
        'ordered_qty' => 'int',
        'allowed_qty' => 'int',
        'shipped_qty' => 'int',
        'backorder_qty' => 'int',
        'number_of_wraps' => 'int',
        'number_of_cases' => 'int',
        'number_of_inner_packs' => 'int',
        'rev_date' => 'string',
        'charge_code' => 'string',
        'distribution_code' => 'string',
        'upc' => 'string',
        'vendor_sku' => 'string',
        'order_source_sku' => 'string',
        'unit_cost' => 'float',
        'unit_sell' => 'float',
        'unit_discount' => 'float',
        'unit_declared_value_override' => 'float',
        'extended_cost' => 'float',
        'extended_sell' => 'float',
        'extended_discount' => 'float',
        'nc_extended_sell' => 'float',
        'extended_declared_value_override' => 'float',
        'item_weight' => 'float',
        'production_lot' => 'string',
        'product_id_tag' => 'string',
        'expiration_date' => '\DateTime',
        'weight_per_wrap' => 'float',
        'sector' => 'string',
        'order_assembly_instructions' => 'string',
        'item_account_code_id' => 'int',
        'item_legacy_low_stock_contact_id' => 'int',
        'item_major_group_id' => 'int',
        'item_sub_group_id' => 'int',
        'item_product_code_id' => 'int',
        'item_summary_code_id' => 'int',
        'fulfillment_channel' => 'string',
        'dynamic_kit_component_list' => '\Infoplus\Infoplus\Model\DynamicKitComponentLine[]',
        'override_receipts_for_fulfillment_list' => '\Infoplus\Infoplus\Model\OverrideReceiptsForFulfillment[]',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'line_item_id' => 'int32',
        'customer_line_item_no' => null,
        'order_no' => null,
        'lob_id' => 'int32',
        'sku' => null,
        'po_no_id' => 'int32',
        'ordered_qty' => 'int32',
        'allowed_qty' => 'int32',
        'shipped_qty' => 'int32',
        'backorder_qty' => 'int32',
        'number_of_wraps' => 'int32',
        'number_of_cases' => 'int32',
        'number_of_inner_packs' => 'int32',
        'rev_date' => null,
        'charge_code' => null,
        'distribution_code' => null,
        'upc' => null,
        'vendor_sku' => null,
        'order_source_sku' => null,
        'unit_cost' => null,
        'unit_sell' => null,
        'unit_discount' => null,
        'unit_declared_value_override' => null,
        'extended_cost' => null,
        'extended_sell' => null,
        'extended_discount' => null,
        'nc_extended_sell' => null,
        'extended_declared_value_override' => null,
        'item_weight' => null,
        'production_lot' => null,
        'product_id_tag' => null,
        'expiration_date' => 'date-time',
        'weight_per_wrap' => null,
        'sector' => null,
        'order_assembly_instructions' => null,
        'item_account_code_id' => 'int32',
        'item_legacy_low_stock_contact_id' => 'int32',
        'item_major_group_id' => 'int32',
        'item_sub_group_id' => 'int32',
        'item_product_code_id' => 'int32',
        'item_summary_code_id' => 'int32',
        'fulfillment_channel' => null,
        'dynamic_kit_component_list' => null,
        'override_receipts_for_fulfillment_list' => null,
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'line_item_id' => 'lineItemId',
        'customer_line_item_no' => 'customerLineItemNo',
        'order_no' => 'orderNo',
        'lob_id' => 'lobId',
        'sku' => 'sku',
        'po_no_id' => 'poNoId',
        'ordered_qty' => 'orderedQty',
        'allowed_qty' => 'allowedQty',
        'shipped_qty' => 'shippedQty',
        'backorder_qty' => 'backorderQty',
        'number_of_wraps' => 'numberOfWraps',
        'number_of_cases' => 'numberOfCases',
        'number_of_inner_packs' => 'numberOfInnerPacks',
        'rev_date' => 'revDate',
        'charge_code' => 'chargeCode',
        'distribution_code' => 'distributionCode',
        'upc' => 'upc',
        'vendor_sku' => 'vendorSKU',
        'order_source_sku' => 'orderSourceSKU',
        'unit_cost' => 'unitCost',
        'unit_sell' => 'unitSell',
        'unit_discount' => 'unitDiscount',
        'unit_declared_value_override' => 'unitDeclaredValueOverride',
        'extended_cost' => 'extendedCost',
        'extended_sell' => 'extendedSell',
        'extended_discount' => 'extendedDiscount',
        'nc_extended_sell' => 'ncExtendedSell',
        'extended_declared_value_override' => 'extendedDeclaredValueOverride',
        'item_weight' => 'itemWeight',
        'production_lot' => 'productionLot',
        'product_id_tag' => 'productIdTag',
        'expiration_date' => 'expirationDate',
        'weight_per_wrap' => 'weightPerWrap',
        'sector' => 'sector',
        'order_assembly_instructions' => 'orderAssemblyInstructions',
        'item_account_code_id' => 'itemAccountCodeId',
        'item_legacy_low_stock_contact_id' => 'itemLegacyLowStockContactId',
        'item_major_group_id' => 'itemMajorGroupId',
        'item_sub_group_id' => 'itemSubGroupId',
        'item_product_code_id' => 'itemProductCodeId',
        'item_summary_code_id' => 'itemSummaryCodeId',
        'fulfillment_channel' => 'fulfillmentChannel',
        'dynamic_kit_component_list' => 'dynamicKitComponentList',
        'override_receipts_for_fulfillment_list' => 'overrideReceiptsForFulfillmentList',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'line_item_id' => 'setLineItemId',
        'customer_line_item_no' => 'setCustomerLineItemNo',
        'order_no' => 'setOrderNo',
        'lob_id' => 'setLobId',
        'sku' => 'setSku',
        'po_no_id' => 'setPoNoId',
        'ordered_qty' => 'setOrderedQty',
        'allowed_qty' => 'setAllowedQty',
        'shipped_qty' => 'setShippedQty',
        'backorder_qty' => 'setBackorderQty',
        'number_of_wraps' => 'setNumberOfWraps',
        'number_of_cases' => 'setNumberOfCases',
        'number_of_inner_packs' => 'setNumberOfInnerPacks',
        'rev_date' => 'setRevDate',
        'charge_code' => 'setChargeCode',
        'distribution_code' => 'setDistributionCode',
        'upc' => 'setUpc',
        'vendor_sku' => 'setVendorSku',
        'order_source_sku' => 'setOrderSourceSku',
        'unit_cost' => 'setUnitCost',
        'unit_sell' => 'setUnitSell',
        'unit_discount' => 'setUnitDiscount',
        'unit_declared_value_override' => 'setUnitDeclaredValueOverride',
        'extended_cost' => 'setExtendedCost',
        'extended_sell' => 'setExtendedSell',
        'extended_discount' => 'setExtendedDiscount',
        'nc_extended_sell' => 'setNcExtendedSell',
        'extended_declared_value_override' => 'setExtendedDeclaredValueOverride',
        'item_weight' => 'setItemWeight',
        'production_lot' => 'setProductionLot',
        'product_id_tag' => 'setProductIdTag',
        'expiration_date' => 'setExpirationDate',
        'weight_per_wrap' => 'setWeightPerWrap',
        'sector' => 'setSector',
        'order_assembly_instructions' => 'setOrderAssemblyInstructions',
        'item_account_code_id' => 'setItemAccountCodeId',
        'item_legacy_low_stock_contact_id' => 'setItemLegacyLowStockContactId',
        'item_major_group_id' => 'setItemMajorGroupId',
        'item_sub_group_id' => 'setItemSubGroupId',
        'item_product_code_id' => 'setItemProductCodeId',
        'item_summary_code_id' => 'setItemSummaryCodeId',
        'fulfillment_channel' => 'setFulfillmentChannel',
        'dynamic_kit_component_list' => 'setDynamicKitComponentList',
        'override_receipts_for_fulfillment_list' => 'setOverrideReceiptsForFulfillmentList',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'line_item_id' => 'getLineItemId',
        'customer_line_item_no' => 'getCustomerLineItemNo',
        'order_no' => 'getOrderNo',
        'lob_id' => 'getLobId',
        'sku' => 'getSku',
        'po_no_id' => 'getPoNoId',
        'ordered_qty' => 'getOrderedQty',
        'allowed_qty' => 'getAllowedQty',
        'shipped_qty' => 'getShippedQty',
        'backorder_qty' => 'getBackorderQty',
        'number_of_wraps' => 'getNumberOfWraps',
        'number_of_cases' => 'getNumberOfCases',
        'number_of_inner_packs' => 'getNumberOfInnerPacks',
        'rev_date' => 'getRevDate',
        'charge_code' => 'getChargeCode',
        'distribution_code' => 'getDistributionCode',
        'upc' => 'getUpc',
        'vendor_sku' => 'getVendorSku',
        'order_source_sku' => 'getOrderSourceSku',
        'unit_cost' => 'getUnitCost',
        'unit_sell' => 'getUnitSell',
        'unit_discount' => 'getUnitDiscount',
        'unit_declared_value_override' => 'getUnitDeclaredValueOverride',
        'extended_cost' => 'getExtendedCost',
        'extended_sell' => 'getExtendedSell',
        'extended_discount' => 'getExtendedDiscount',
        'nc_extended_sell' => 'getNcExtendedSell',
        'extended_declared_value_override' => 'getExtendedDeclaredValueOverride',
        'item_weight' => 'getItemWeight',
        'production_lot' => 'getProductionLot',
        'product_id_tag' => 'getProductIdTag',
        'expiration_date' => 'getExpirationDate',
        'weight_per_wrap' => 'getWeightPerWrap',
        'sector' => 'getSector',
        'order_assembly_instructions' => 'getOrderAssemblyInstructions',
        'item_account_code_id' => 'getItemAccountCodeId',
        'item_legacy_low_stock_contact_id' => 'getItemLegacyLowStockContactId',
        'item_major_group_id' => 'getItemMajorGroupId',
        'item_sub_group_id' => 'getItemSubGroupId',
        'item_product_code_id' => 'getItemProductCodeId',
        'item_summary_code_id' => 'getItemSummaryCodeId',
        'fulfillment_channel' => 'getFulfillmentChannel',
        'dynamic_kit_component_list' => 'getDynamicKitComponentList',
        'override_receipts_for_fulfillment_list' => 'getOverrideReceiptsForFulfillmentList',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['line_item_id'] = isset($data['line_item_id']) ? $data['line_item_id'] : null;
        $this->container['customer_line_item_no'] = isset($data['customer_line_item_no']) ? $data['customer_line_item_no'] : null;
        $this->container['order_no'] = isset($data['order_no']) ? $data['order_no'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['po_no_id'] = isset($data['po_no_id']) ? $data['po_no_id'] : null;
        $this->container['ordered_qty'] = isset($data['ordered_qty']) ? $data['ordered_qty'] : null;
        $this->container['allowed_qty'] = isset($data['allowed_qty']) ? $data['allowed_qty'] : null;
        $this->container['shipped_qty'] = isset($data['shipped_qty']) ? $data['shipped_qty'] : null;
        $this->container['backorder_qty'] = isset($data['backorder_qty']) ? $data['backorder_qty'] : null;
        $this->container['number_of_wraps'] = isset($data['number_of_wraps']) ? $data['number_of_wraps'] : null;
        $this->container['number_of_cases'] = isset($data['number_of_cases']) ? $data['number_of_cases'] : null;
        $this->container['number_of_inner_packs'] = isset($data['number_of_inner_packs']) ? $data['number_of_inner_packs'] : null;
        $this->container['rev_date'] = isset($data['rev_date']) ? $data['rev_date'] : null;
        $this->container['charge_code'] = isset($data['charge_code']) ? $data['charge_code'] : null;
        $this->container['distribution_code'] = isset($data['distribution_code']) ? $data['distribution_code'] : null;
        $this->container['upc'] = isset($data['upc']) ? $data['upc'] : null;
        $this->container['vendor_sku'] = isset($data['vendor_sku']) ? $data['vendor_sku'] : null;
        $this->container['order_source_sku'] = isset($data['order_source_sku']) ? $data['order_source_sku'] : null;
        $this->container['unit_cost'] = isset($data['unit_cost']) ? $data['unit_cost'] : null;
        $this->container['unit_sell'] = isset($data['unit_sell']) ? $data['unit_sell'] : null;
        $this->container['unit_discount'] = isset($data['unit_discount']) ? $data['unit_discount'] : null;
        $this->container['unit_declared_value_override'] = isset($data['unit_declared_value_override']) ? $data['unit_declared_value_override'] : null;
        $this->container['extended_cost'] = isset($data['extended_cost']) ? $data['extended_cost'] : null;
        $this->container['extended_sell'] = isset($data['extended_sell']) ? $data['extended_sell'] : null;
        $this->container['extended_discount'] = isset($data['extended_discount']) ? $data['extended_discount'] : null;
        $this->container['nc_extended_sell'] = isset($data['nc_extended_sell']) ? $data['nc_extended_sell'] : null;
        $this->container['extended_declared_value_override'] = isset($data['extended_declared_value_override']) ? $data['extended_declared_value_override'] : null;
        $this->container['item_weight'] = isset($data['item_weight']) ? $data['item_weight'] : null;
        $this->container['production_lot'] = isset($data['production_lot']) ? $data['production_lot'] : null;
        $this->container['product_id_tag'] = isset($data['product_id_tag']) ? $data['product_id_tag'] : null;
        $this->container['expiration_date'] = isset($data['expiration_date']) ? $data['expiration_date'] : null;
        $this->container['weight_per_wrap'] = isset($data['weight_per_wrap']) ? $data['weight_per_wrap'] : null;
        $this->container['sector'] = isset($data['sector']) ? $data['sector'] : null;
        $this->container['order_assembly_instructions'] = isset($data['order_assembly_instructions']) ? $data['order_assembly_instructions'] : null;
        $this->container['item_account_code_id'] = isset($data['item_account_code_id']) ? $data['item_account_code_id'] : null;
        $this->container['item_legacy_low_stock_contact_id'] = isset($data['item_legacy_low_stock_contact_id']) ? $data['item_legacy_low_stock_contact_id'] : null;
        $this->container['item_major_group_id'] = isset($data['item_major_group_id']) ? $data['item_major_group_id'] : null;
        $this->container['item_sub_group_id'] = isset($data['item_sub_group_id']) ? $data['item_sub_group_id'] : null;
        $this->container['item_product_code_id'] = isset($data['item_product_code_id']) ? $data['item_product_code_id'] : null;
        $this->container['item_summary_code_id'] = isset($data['item_summary_code_id']) ? $data['item_summary_code_id'] : null;
        $this->container['fulfillment_channel'] = isset($data['fulfillment_channel']) ? $data['fulfillment_channel'] : null;
        $this->container['dynamic_kit_component_list'] = isset($data['dynamic_kit_component_list']) ? $data['dynamic_kit_component_list'] : null;
        $this->container['override_receipts_for_fulfillment_list'] = isset($data['override_receipts_for_fulfillment_list']) ? $data['override_receipts_for_fulfillment_list'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['sku'] === null) {
            $invalidProperties[] = "'sku' can't be null";
        }
        if ($this->container['ordered_qty'] === null) {
            $invalidProperties[] = "'ordered_qty' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['sku'] === null) {
            return false;
        }
        if ($this->container['ordered_qty'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets line_item_id
     *
     * @return int
     */
    public function getLineItemId()
    {
        return $this->container['line_item_id'];
    }

    /**
     * Sets line_item_id
     *
     * @param int $line_item_id line_item_id
     *
     * @return $this
     */
    public function setLineItemId($line_item_id)
    {
        $this->container['line_item_id'] = $line_item_id;

        return $this;
    }

    /**
     * Gets customer_line_item_no
     *
     * @return string
     */
    public function getCustomerLineItemNo()
    {
        return $this->container['customer_line_item_no'];
    }

    /**
     * Sets customer_line_item_no
     *
     * @param string $customer_line_item_no customer_line_item_no
     *
     * @return $this
     */
    public function setCustomerLineItemNo($customer_line_item_no)
    {
        $this->container['customer_line_item_no'] = $customer_line_item_no;

        return $this;
    }

    /**
     * Gets order_no
     *
     * @return float
     */
    public function getOrderNo()
    {
        return $this->container['order_no'];
    }

    /**
     * Sets order_no
     *
     * @param float $order_no order_no
     *
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        $this->container['order_no'] = $order_no;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string $sku sku
     *
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets po_no_id
     *
     * @return int
     */
    public function getPoNoId()
    {
        return $this->container['po_no_id'];
    }

    /**
     * Sets po_no_id
     *
     * @param int $po_no_id po_no_id
     *
     * @return $this
     */
    public function setPoNoId($po_no_id)
    {
        $this->container['po_no_id'] = $po_no_id;

        return $this;
    }

    /**
     * Gets ordered_qty
     *
     * @return int
     */
    public function getOrderedQty()
    {
        return $this->container['ordered_qty'];
    }

    /**
     * Sets ordered_qty
     *
     * @param int $ordered_qty ordered_qty
     *
     * @return $this
     */
    public function setOrderedQty($ordered_qty)
    {
        $this->container['ordered_qty'] = $ordered_qty;

        return $this;
    }

    /**
     * Gets allowed_qty
     *
     * @return int
     */
    public function getAllowedQty()
    {
        return $this->container['allowed_qty'];
    }

    /**
     * Sets allowed_qty
     *
     * @param int $allowed_qty allowed_qty
     *
     * @return $this
     */
    public function setAllowedQty($allowed_qty)
    {
        $this->container['allowed_qty'] = $allowed_qty;

        return $this;
    }

    /**
     * Gets shipped_qty
     *
     * @return int
     */
    public function getShippedQty()
    {
        return $this->container['shipped_qty'];
    }

    /**
     * Sets shipped_qty
     *
     * @param int $shipped_qty shipped_qty
     *
     * @return $this
     */
    public function setShippedQty($shipped_qty)
    {
        $this->container['shipped_qty'] = $shipped_qty;

        return $this;
    }

    /**
     * Gets backorder_qty
     *
     * @return int
     */
    public function getBackorderQty()
    {
        return $this->container['backorder_qty'];
    }

    /**
     * Sets backorder_qty
     *
     * @param int $backorder_qty backorder_qty
     *
     * @return $this
     */
    public function setBackorderQty($backorder_qty)
    {
        $this->container['backorder_qty'] = $backorder_qty;

        return $this;
    }

    /**
     * Gets number_of_wraps
     *
     * @return int
     */
    public function getNumberOfWraps()
    {
        return $this->container['number_of_wraps'];
    }

    /**
     * Sets number_of_wraps
     *
     * @param int $number_of_wraps number_of_wraps
     *
     * @return $this
     */
    public function setNumberOfWraps($number_of_wraps)
    {
        $this->container['number_of_wraps'] = $number_of_wraps;

        return $this;
    }

    /**
     * Gets number_of_cases
     *
     * @return int
     */
    public function getNumberOfCases()
    {
        return $this->container['number_of_cases'];
    }

    /**
     * Sets number_of_cases
     *
     * @param int $number_of_cases number_of_cases
     *
     * @return $this
     */
    public function setNumberOfCases($number_of_cases)
    {
        $this->container['number_of_cases'] = $number_of_cases;

        return $this;
    }

    /**
     * Gets number_of_inner_packs
     *
     * @return int
     */
    public function getNumberOfInnerPacks()
    {
        return $this->container['number_of_inner_packs'];
    }

    /**
     * Sets number_of_inner_packs
     *
     * @param int $number_of_inner_packs number_of_inner_packs
     *
     * @return $this
     */
    public function setNumberOfInnerPacks($number_of_inner_packs)
    {
        $this->container['number_of_inner_packs'] = $number_of_inner_packs;

        return $this;
    }

    /**
     * Gets rev_date
     *
     * @return string
     */
    public function getRevDate()
    {
        return $this->container['rev_date'];
    }

    /**
     * Sets rev_date
     *
     * @param string $rev_date rev_date
     *
     * @return $this
     */
    public function setRevDate($rev_date)
    {
        $this->container['rev_date'] = $rev_date;

        return $this;
    }

    /**
     * Gets charge_code
     *
     * @return string
     */
    public function getChargeCode()
    {
        return $this->container['charge_code'];
    }

    /**
     * Sets charge_code
     *
     * @param string $charge_code charge_code
     *
     * @return $this
     */
    public function setChargeCode($charge_code)
    {
        $this->container['charge_code'] = $charge_code;

        return $this;
    }

    /**
     * Gets distribution_code
     *
     * @return string
     */
    public function getDistributionCode()
    {
        return $this->container['distribution_code'];
    }

    /**
     * Sets distribution_code
     *
     * @param string $distribution_code distribution_code
     *
     * @return $this
     */
    public function setDistributionCode($distribution_code)
    {
        $this->container['distribution_code'] = $distribution_code;

        return $this;
    }

    /**
     * Gets upc
     *
     * @return string
     */
    public function getUpc()
    {
        return $this->container['upc'];
    }

    /**
     * Sets upc
     *
     * @param string $upc upc
     *
     * @return $this
     */
    public function setUpc($upc)
    {
        $this->container['upc'] = $upc;

        return $this;
    }

    /**
     * Gets vendor_sku
     *
     * @return string
     */
    public function getVendorSku()
    {
        return $this->container['vendor_sku'];
    }

    /**
     * Sets vendor_sku
     *
     * @param string $vendor_sku vendor_sku
     *
     * @return $this
     */
    public function setVendorSku($vendor_sku)
    {
        $this->container['vendor_sku'] = $vendor_sku;

        return $this;
    }

    /**
     * Gets order_source_sku
     *
     * @return string
     */
    public function getOrderSourceSku()
    {
        return $this->container['order_source_sku'];
    }

    /**
     * Sets order_source_sku
     *
     * @param string $order_source_sku order_source_sku
     *
     * @return $this
     */
    public function setOrderSourceSku($order_source_sku)
    {
        $this->container['order_source_sku'] = $order_source_sku;

        return $this;
    }

    /**
     * Gets unit_cost
     *
     * @return float
     */
    public function getUnitCost()
    {
        return $this->container['unit_cost'];
    }

    /**
     * Sets unit_cost
     *
     * @param float $unit_cost unit_cost
     *
     * @return $this
     */
    public function setUnitCost($unit_cost)
    {
        $this->container['unit_cost'] = $unit_cost;

        return $this;
    }

    /**
     * Gets unit_sell
     *
     * @return float
     */
    public function getUnitSell()
    {
        return $this->container['unit_sell'];
    }

    /**
     * Sets unit_sell
     *
     * @param float $unit_sell unit_sell
     *
     * @return $this
     */
    public function setUnitSell($unit_sell)
    {
        $this->container['unit_sell'] = $unit_sell;

        return $this;
    }

    /**
     * Gets unit_discount
     *
     * @return float
     */
    public function getUnitDiscount()
    {
        return $this->container['unit_discount'];
    }

    /**
     * Sets unit_discount
     *
     * @param float $unit_discount unit_discount
     *
     * @return $this
     */
    public function setUnitDiscount($unit_discount)
    {
        $this->container['unit_discount'] = $unit_discount;

        return $this;
    }

    /**
     * Gets unit_declared_value_override
     *
     * @return float
     */
    public function getUnitDeclaredValueOverride()
    {
        return $this->container['unit_declared_value_override'];
    }

    /**
     * Sets unit_declared_value_override
     *
     * @param float $unit_declared_value_override unit_declared_value_override
     *
     * @return $this
     */
    public function setUnitDeclaredValueOverride($unit_declared_value_override)
    {
        $this->container['unit_declared_value_override'] = $unit_declared_value_override;

        return $this;
    }

    /**
     * Gets extended_cost
     *
     * @return float
     */
    public function getExtendedCost()
    {
        return $this->container['extended_cost'];
    }

    /**
     * Sets extended_cost
     *
     * @param float $extended_cost extended_cost
     *
     * @return $this
     */
    public function setExtendedCost($extended_cost)
    {
        $this->container['extended_cost'] = $extended_cost;

        return $this;
    }

    /**
     * Gets extended_sell
     *
     * @return float
     */
    public function getExtendedSell()
    {
        return $this->container['extended_sell'];
    }

    /**
     * Sets extended_sell
     *
     * @param float $extended_sell extended_sell
     *
     * @return $this
     */
    public function setExtendedSell($extended_sell)
    {
        $this->container['extended_sell'] = $extended_sell;

        return $this;
    }

    /**
     * Gets extended_discount
     *
     * @return float
     */
    public function getExtendedDiscount()
    {
        return $this->container['extended_discount'];
    }

    /**
     * Sets extended_discount
     *
     * @param float $extended_discount extended_discount
     *
     * @return $this
     */
    public function setExtendedDiscount($extended_discount)
    {
        $this->container['extended_discount'] = $extended_discount;

        return $this;
    }

    /**
     * Gets nc_extended_sell
     *
     * @return float
     */
    public function getNcExtendedSell()
    {
        return $this->container['nc_extended_sell'];
    }

    /**
     * Sets nc_extended_sell
     *
     * @param float $nc_extended_sell nc_extended_sell
     *
     * @return $this
     */
    public function setNcExtendedSell($nc_extended_sell)
    {
        $this->container['nc_extended_sell'] = $nc_extended_sell;

        return $this;
    }

    /**
     * Gets extended_declared_value_override
     *
     * @return float
     */
    public function getExtendedDeclaredValueOverride()
    {
        return $this->container['extended_declared_value_override'];
    }

    /**
     * Sets extended_declared_value_override
     *
     * @param float $extended_declared_value_override extended_declared_value_override
     *
     * @return $this
     */
    public function setExtendedDeclaredValueOverride($extended_declared_value_override)
    {
        $this->container['extended_declared_value_override'] = $extended_declared_value_override;

        return $this;
    }

    /**
     * Gets item_weight
     *
     * @return float
     */
    public function getItemWeight()
    {
        return $this->container['item_weight'];
    }

    /**
     * Sets item_weight
     *
     * @param float $item_weight item_weight
     *
     * @return $this
     */
    public function setItemWeight($item_weight)
    {
        $this->container['item_weight'] = $item_weight;

        return $this;
    }

    /**
     * Gets production_lot
     *
     * @return string
     */
    public function getProductionLot()
    {
        return $this->container['production_lot'];
    }

    /**
     * Sets production_lot
     *
     * @param string $production_lot production_lot
     *
     * @return $this
     */
    public function setProductionLot($production_lot)
    {
        $this->container['production_lot'] = $production_lot;

        return $this;
    }

    /**
     * Gets product_id_tag
     *
     * @return string
     */
    public function getProductIdTag()
    {
        return $this->container['product_id_tag'];
    }

    /**
     * Sets product_id_tag
     *
     * @param string $product_id_tag product_id_tag
     *
     * @return $this
     */
    public function setProductIdTag($product_id_tag)
    {
        $this->container['product_id_tag'] = $product_id_tag;

        return $this;
    }

    /**
     * Gets expiration_date
     *
     * @return \DateTime
     */
    public function getExpirationDate()
    {
        return $this->container['expiration_date'];
    }

    /**
     * Sets expiration_date
     *
     * @param \DateTime $expiration_date expiration_date
     *
     * @return $this
     */
    public function setExpirationDate($expiration_date)
    {
        $this->container['expiration_date'] = $expiration_date;

        return $this;
    }

    /**
     * Gets weight_per_wrap
     *
     * @return float
     */
    public function getWeightPerWrap()
    {
        return $this->container['weight_per_wrap'];
    }

    /**
     * Sets weight_per_wrap
     *
     * @param float $weight_per_wrap weight_per_wrap
     *
     * @return $this
     */
    public function setWeightPerWrap($weight_per_wrap)
    {
        $this->container['weight_per_wrap'] = $weight_per_wrap;

        return $this;
    }

    /**
     * Gets sector
     *
     * @return string
     */
    public function getSector()
    {
        return $this->container['sector'];
    }

    /**
     * Sets sector
     *
     * @param string $sector sector
     *
     * @return $this
     */
    public function setSector($sector)
    {
        $this->container['sector'] = $sector;

        return $this;
    }

    /**
     * Gets order_assembly_instructions
     *
     * @return string
     */
    public function getOrderAssemblyInstructions()
    {
        return $this->container['order_assembly_instructions'];
    }

    /**
     * Sets order_assembly_instructions
     *
     * @param string $order_assembly_instructions order_assembly_instructions
     *
     * @return $this
     */
    public function setOrderAssemblyInstructions($order_assembly_instructions)
    {
        $this->container['order_assembly_instructions'] = $order_assembly_instructions;

        return $this;
    }

    /**
     * Gets item_account_code_id
     *
     * @return int
     */
    public function getItemAccountCodeId()
    {
        return $this->container['item_account_code_id'];
    }

    /**
     * Sets item_account_code_id
     *
     * @param int $item_account_code_id item_account_code_id
     *
     * @return $this
     */
    public function setItemAccountCodeId($item_account_code_id)
    {
        $this->container['item_account_code_id'] = $item_account_code_id;

        return $this;
    }

    /**
     * Gets item_legacy_low_stock_contact_id
     *
     * @return int
     */
    public function getItemLegacyLowStockContactId()
    {
        return $this->container['item_legacy_low_stock_contact_id'];
    }

    /**
     * Sets item_legacy_low_stock_contact_id
     *
     * @param int $item_legacy_low_stock_contact_id item_legacy_low_stock_contact_id
     *
     * @return $this
     */
    public function setItemLegacyLowStockContactId($item_legacy_low_stock_contact_id)
    {
        $this->container['item_legacy_low_stock_contact_id'] = $item_legacy_low_stock_contact_id;

        return $this;
    }

    /**
     * Gets item_major_group_id
     *
     * @return int
     */
    public function getItemMajorGroupId()
    {
        return $this->container['item_major_group_id'];
    }

    /**
     * Sets item_major_group_id
     *
     * @param int $item_major_group_id item_major_group_id
     *
     * @return $this
     */
    public function setItemMajorGroupId($item_major_group_id)
    {
        $this->container['item_major_group_id'] = $item_major_group_id;

        return $this;
    }

    /**
     * Gets item_sub_group_id
     *
     * @return int
     */
    public function getItemSubGroupId()
    {
        return $this->container['item_sub_group_id'];
    }

    /**
     * Sets item_sub_group_id
     *
     * @param int $item_sub_group_id item_sub_group_id
     *
     * @return $this
     */
    public function setItemSubGroupId($item_sub_group_id)
    {
        $this->container['item_sub_group_id'] = $item_sub_group_id;

        return $this;
    }

    /**
     * Gets item_product_code_id
     *
     * @return int
     */
    public function getItemProductCodeId()
    {
        return $this->container['item_product_code_id'];
    }

    /**
     * Sets item_product_code_id
     *
     * @param int $item_product_code_id item_product_code_id
     *
     * @return $this
     */
    public function setItemProductCodeId($item_product_code_id)
    {
        $this->container['item_product_code_id'] = $item_product_code_id;

        return $this;
    }

    /**
     * Gets item_summary_code_id
     *
     * @return int
     */
    public function getItemSummaryCodeId()
    {
        return $this->container['item_summary_code_id'];
    }

    /**
     * Sets item_summary_code_id
     *
     * @param int $item_summary_code_id item_summary_code_id
     *
     * @return $this
     */
    public function setItemSummaryCodeId($item_summary_code_id)
    {
        $this->container['item_summary_code_id'] = $item_summary_code_id;

        return $this;
    }

    /**
     * Gets fulfillment_channel
     *
     * @return string
     */
    public function getFulfillmentChannel()
    {
        return $this->container['fulfillment_channel'];
    }

    /**
     * Sets fulfillment_channel
     *
     * @param string $fulfillment_channel fulfillment_channel
     *
     * @return $this
     */
    public function setFulfillmentChannel($fulfillment_channel)
    {
        $this->container['fulfillment_channel'] = $fulfillment_channel;

        return $this;
    }

    /**
     * Gets dynamic_kit_component_list
     *
     * @return \Infoplus\Infoplus\Model\DynamicKitComponentLine[]
     */
    public function getDynamicKitComponentList()
    {
        return $this->container['dynamic_kit_component_list'];
    }

    /**
     * Sets dynamic_kit_component_list
     *
     * @param \Infoplus\Infoplus\Model\DynamicKitComponentLine[] $dynamic_kit_component_list dynamic_kit_component_list
     *
     * @return $this
     */
    public function setDynamicKitComponentList($dynamic_kit_component_list)
    {
        $this->container['dynamic_kit_component_list'] = $dynamic_kit_component_list;

        return $this;
    }

    /**
     * Gets override_receipts_for_fulfillment_list
     *
     * @return \Infoplus\Infoplus\Model\OverrideReceiptsForFulfillment[]
     */
    public function getOverrideReceiptsForFulfillmentList()
    {
        return $this->container['override_receipts_for_fulfillment_list'];
    }

    /**
     * Sets override_receipts_for_fulfillment_list
     *
     * @param \Infoplus\Infoplus\Model\OverrideReceiptsForFulfillment[] $override_receipts_for_fulfillment_list override_receipts_for_fulfillment_list
     *
     * @return $this
     */
    public function setOverrideReceiptsForFulfillmentList($override_receipts_for_fulfillment_list)
    {
        $this->container['override_receipts_for_fulfillment_list'] = $override_receipts_for_fulfillment_list;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


