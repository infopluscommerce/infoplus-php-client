<?php
/**
 * QuickReceipt
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Model;

use \ArrayAccess;
/**
 * QuickReceipt Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Infoplus
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class QuickReceipt implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'created_by' => 'int',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'warehouse_id' => 'int',
        'lob_id' => 'int',
        'location_id' => 'int',
        'quantity' => 'int',
        'vendor_id' => 'int',
        'carrier' => 'string',
        'status' => 'string',
        'unit_code' => 'string',
        'wrap_code' => 'string',
        'weight_per_wrap' => 'Number',
        'units_per_wrap' => 'int',
        'units_per_case' => 'int',
        'cases_per_pallet' => 'int',
        'case_weight' => 'Number',
        'production_lot' => 'string',
        'revision_date' => 'string',
        'origin' => 'string',
        'carton_length' => 'Number',
        'carton_width' => 'Number',
        'carton_height' => 'Number',
        'cost' => 'Number',
        'sell_price' => 'Number',
        'pricing_per' => 'string',
        'generated_item_receipt_id' => 'int',
        'generated_asn_id' => 'int',
        'dock_date' => '\DateTime',
        'product_id_tag' => 'string',
        'custom_fields' => 'map[string,object]',
        'sku' => 'string'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'created_by' => 'createdBy',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'warehouse_id' => 'warehouseId',
        'lob_id' => 'lobId',
        'location_id' => 'locationId',
        'quantity' => 'quantity',
        'vendor_id' => 'vendorId',
        'carrier' => 'carrier',
        'status' => 'status',
        'unit_code' => 'unitCode',
        'wrap_code' => 'wrapCode',
        'weight_per_wrap' => 'weightPerWrap',
        'units_per_wrap' => 'unitsPerWrap',
        'units_per_case' => 'unitsPerCase',
        'cases_per_pallet' => 'casesPerPallet',
        'case_weight' => 'caseWeight',
        'production_lot' => 'productionLot',
        'revision_date' => 'revisionDate',
        'origin' => 'origin',
        'carton_length' => 'cartonLength',
        'carton_width' => 'cartonWidth',
        'carton_height' => 'cartonHeight',
        'cost' => 'cost',
        'sell_price' => 'sellPrice',
        'pricing_per' => 'pricingPer',
        'generated_item_receipt_id' => 'generatedItemReceiptId',
        'generated_asn_id' => 'generatedASNId',
        'dock_date' => 'dockDate',
        'product_id_tag' => 'productIdTag',
        'custom_fields' => 'customFields',
        'sku' => 'sku'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'created_by' => 'setCreatedBy',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'warehouse_id' => 'setWarehouseId',
        'lob_id' => 'setLobId',
        'location_id' => 'setLocationId',
        'quantity' => 'setQuantity',
        'vendor_id' => 'setVendorId',
        'carrier' => 'setCarrier',
        'status' => 'setStatus',
        'unit_code' => 'setUnitCode',
        'wrap_code' => 'setWrapCode',
        'weight_per_wrap' => 'setWeightPerWrap',
        'units_per_wrap' => 'setUnitsPerWrap',
        'units_per_case' => 'setUnitsPerCase',
        'cases_per_pallet' => 'setCasesPerPallet',
        'case_weight' => 'setCaseWeight',
        'production_lot' => 'setProductionLot',
        'revision_date' => 'setRevisionDate',
        'origin' => 'setOrigin',
        'carton_length' => 'setCartonLength',
        'carton_width' => 'setCartonWidth',
        'carton_height' => 'setCartonHeight',
        'cost' => 'setCost',
        'sell_price' => 'setSellPrice',
        'pricing_per' => 'setPricingPer',
        'generated_item_receipt_id' => 'setGeneratedItemReceiptId',
        'generated_asn_id' => 'setGeneratedAsnId',
        'dock_date' => 'setDockDate',
        'product_id_tag' => 'setProductIdTag',
        'custom_fields' => 'setCustomFields',
        'sku' => 'setSku'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'created_by' => 'getCreatedBy',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'warehouse_id' => 'getWarehouseId',
        'lob_id' => 'getLobId',
        'location_id' => 'getLocationId',
        'quantity' => 'getQuantity',
        'vendor_id' => 'getVendorId',
        'carrier' => 'getCarrier',
        'status' => 'getStatus',
        'unit_code' => 'getUnitCode',
        'wrap_code' => 'getWrapCode',
        'weight_per_wrap' => 'getWeightPerWrap',
        'units_per_wrap' => 'getUnitsPerWrap',
        'units_per_case' => 'getUnitsPerCase',
        'cases_per_pallet' => 'getCasesPerPallet',
        'case_weight' => 'getCaseWeight',
        'production_lot' => 'getProductionLot',
        'revision_date' => 'getRevisionDate',
        'origin' => 'getOrigin',
        'carton_length' => 'getCartonLength',
        'carton_width' => 'getCartonWidth',
        'carton_height' => 'getCartonHeight',
        'cost' => 'getCost',
        'sell_price' => 'getSellPrice',
        'pricing_per' => 'getPricingPer',
        'generated_item_receipt_id' => 'getGeneratedItemReceiptId',
        'generated_asn_id' => 'getGeneratedAsnId',
        'dock_date' => 'getDockDate',
        'product_id_tag' => 'getProductIdTag',
        'custom_fields' => 'getCustomFields',
        'sku' => 'getSku'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $created_by 
      * @var int
      */
    protected $created_by;
    
    /**
      * $create_date 
      * @var \DateTime
      */
    protected $create_date;
    
    /**
      * $modify_date 
      * @var \DateTime
      */
    protected $modify_date;
    
    /**
      * $warehouse_id 
      * @var int
      */
    protected $warehouse_id;
    
    /**
      * $lob_id 
      * @var int
      */
    protected $lob_id;
    
    /**
      * $location_id 
      * @var int
      */
    protected $location_id;
    
    /**
      * $quantity 
      * @var int
      */
    protected $quantity;
    
    /**
      * $vendor_id 
      * @var int
      */
    protected $vendor_id;
    
    /**
      * $carrier 
      * @var string
      */
    protected $carrier;
    
    /**
      * $status 
      * @var string
      */
    protected $status;
    
    /**
      * $unit_code 
      * @var string
      */
    protected $unit_code;
    
    /**
      * $wrap_code 
      * @var string
      */
    protected $wrap_code;
    
    /**
      * $weight_per_wrap 
      * @var Number
      */
    protected $weight_per_wrap;
    
    /**
      * $units_per_wrap 
      * @var int
      */
    protected $units_per_wrap;
    
    /**
      * $units_per_case 
      * @var int
      */
    protected $units_per_case;
    
    /**
      * $cases_per_pallet 
      * @var int
      */
    protected $cases_per_pallet;
    
    /**
      * $case_weight 
      * @var Number
      */
    protected $case_weight;
    
    /**
      * $production_lot 
      * @var string
      */
    protected $production_lot;
    
    /**
      * $revision_date 
      * @var string
      */
    protected $revision_date;
    
    /**
      * $origin 
      * @var string
      */
    protected $origin;
    
    /**
      * $carton_length 
      * @var Number
      */
    protected $carton_length;
    
    /**
      * $carton_width 
      * @var Number
      */
    protected $carton_width;
    
    /**
      * $carton_height 
      * @var Number
      */
    protected $carton_height;
    
    /**
      * $cost 
      * @var Number
      */
    protected $cost;
    
    /**
      * $sell_price 
      * @var Number
      */
    protected $sell_price;
    
    /**
      * $pricing_per 
      * @var string
      */
    protected $pricing_per;
    
    /**
      * $generated_item_receipt_id 
      * @var int
      */
    protected $generated_item_receipt_id;
    
    /**
      * $generated_asn_id 
      * @var int
      */
    protected $generated_asn_id;
    
    /**
      * $dock_date 
      * @var \DateTime
      */
    protected $dock_date;
    
    /**
      * $product_id_tag 
      * @var string
      */
    protected $product_id_tag;
    
    /**
      * $custom_fields 
      * @var map[string,object]
      */
    protected $custom_fields;
    
    /**
      * $sku 
      * @var string
      */
    protected $sku;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->created_by = $data["created_by"];
            $this->create_date = $data["create_date"];
            $this->modify_date = $data["modify_date"];
            $this->warehouse_id = $data["warehouse_id"];
            $this->lob_id = $data["lob_id"];
            $this->location_id = $data["location_id"];
            $this->quantity = $data["quantity"];
            $this->vendor_id = $data["vendor_id"];
            $this->carrier = $data["carrier"];
            $this->status = $data["status"];
            $this->unit_code = $data["unit_code"];
            $this->wrap_code = $data["wrap_code"];
            $this->weight_per_wrap = $data["weight_per_wrap"];
            $this->units_per_wrap = $data["units_per_wrap"];
            $this->units_per_case = $data["units_per_case"];
            $this->cases_per_pallet = $data["cases_per_pallet"];
            $this->case_weight = $data["case_weight"];
            $this->production_lot = $data["production_lot"];
            $this->revision_date = $data["revision_date"];
            $this->origin = $data["origin"];
            $this->carton_length = $data["carton_length"];
            $this->carton_width = $data["carton_width"];
            $this->carton_height = $data["carton_height"];
            $this->cost = $data["cost"];
            $this->sell_price = $data["sell_price"];
            $this->pricing_per = $data["pricing_per"];
            $this->generated_item_receipt_id = $data["generated_item_receipt_id"];
            $this->generated_asn_id = $data["generated_asn_id"];
            $this->dock_date = $data["dock_date"];
            $this->product_id_tag = $data["product_id_tag"];
            $this->custom_fields = $data["custom_fields"];
            $this->sku = $data["sku"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets created_by
     * @return int
     */
    public function getCreatedBy()
    {
        return $this->created_by;
    }
  
    /**
     * Sets created_by
     * @param int $created_by 
     * @return $this
     */
    public function setCreatedBy($created_by)
    {
        
        $this->created_by = $created_by;
        return $this;
    }
    
    /**
     * Gets create_date
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->create_date;
    }
  
    /**
     * Sets create_date
     * @param \DateTime $create_date 
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        
        $this->create_date = $create_date;
        return $this;
    }
    
    /**
     * Gets modify_date
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->modify_date;
    }
  
    /**
     * Sets modify_date
     * @param \DateTime $modify_date 
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        
        $this->modify_date = $modify_date;
        return $this;
    }
    
    /**
     * Gets warehouse_id
     * @return int
     */
    public function getWarehouseId()
    {
        return $this->warehouse_id;
    }
  
    /**
     * Sets warehouse_id
     * @param int $warehouse_id 
     * @return $this
     */
    public function setWarehouseId($warehouse_id)
    {
        
        $this->warehouse_id = $warehouse_id;
        return $this;
    }
    
    /**
     * Gets lob_id
     * @return int
     */
    public function getLobId()
    {
        return $this->lob_id;
    }
  
    /**
     * Sets lob_id
     * @param int $lob_id 
     * @return $this
     */
    public function setLobId($lob_id)
    {
        
        $this->lob_id = $lob_id;
        return $this;
    }
    
    /**
     * Gets location_id
     * @return int
     */
    public function getLocationId()
    {
        return $this->location_id;
    }
  
    /**
     * Sets location_id
     * @param int $location_id 
     * @return $this
     */
    public function setLocationId($location_id)
    {
        
        $this->location_id = $location_id;
        return $this;
    }
    
    /**
     * Gets quantity
     * @return int
     */
    public function getQuantity()
    {
        return $this->quantity;
    }
  
    /**
     * Sets quantity
     * @param int $quantity 
     * @return $this
     */
    public function setQuantity($quantity)
    {
        
        $this->quantity = $quantity;
        return $this;
    }
    
    /**
     * Gets vendor_id
     * @return int
     */
    public function getVendorId()
    {
        return $this->vendor_id;
    }
  
    /**
     * Sets vendor_id
     * @param int $vendor_id 
     * @return $this
     */
    public function setVendorId($vendor_id)
    {
        
        $this->vendor_id = $vendor_id;
        return $this;
    }
    
    /**
     * Gets carrier
     * @return string
     */
    public function getCarrier()
    {
        return $this->carrier;
    }
  
    /**
     * Sets carrier
     * @param string $carrier 
     * @return $this
     */
    public function setCarrier($carrier)
    {
        
        $this->carrier = $carrier;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets unit_code
     * @return string
     */
    public function getUnitCode()
    {
        return $this->unit_code;
    }
  
    /**
     * Sets unit_code
     * @param string $unit_code 
     * @return $this
     */
    public function setUnitCode($unit_code)
    {
        
        $this->unit_code = $unit_code;
        return $this;
    }
    
    /**
     * Gets wrap_code
     * @return string
     */
    public function getWrapCode()
    {
        return $this->wrap_code;
    }
  
    /**
     * Sets wrap_code
     * @param string $wrap_code 
     * @return $this
     */
    public function setWrapCode($wrap_code)
    {
        
        $this->wrap_code = $wrap_code;
        return $this;
    }
    
    /**
     * Gets weight_per_wrap
     * @return Number
     */
    public function getWeightPerWrap()
    {
        return $this->weight_per_wrap;
    }
  
    /**
     * Sets weight_per_wrap
     * @param Number $weight_per_wrap 
     * @return $this
     */
    public function setWeightPerWrap($weight_per_wrap)
    {
        
        $this->weight_per_wrap = $weight_per_wrap;
        return $this;
    }
    
    /**
     * Gets units_per_wrap
     * @return int
     */
    public function getUnitsPerWrap()
    {
        return $this->units_per_wrap;
    }
  
    /**
     * Sets units_per_wrap
     * @param int $units_per_wrap 
     * @return $this
     */
    public function setUnitsPerWrap($units_per_wrap)
    {
        
        $this->units_per_wrap = $units_per_wrap;
        return $this;
    }
    
    /**
     * Gets units_per_case
     * @return int
     */
    public function getUnitsPerCase()
    {
        return $this->units_per_case;
    }
  
    /**
     * Sets units_per_case
     * @param int $units_per_case 
     * @return $this
     */
    public function setUnitsPerCase($units_per_case)
    {
        
        $this->units_per_case = $units_per_case;
        return $this;
    }
    
    /**
     * Gets cases_per_pallet
     * @return int
     */
    public function getCasesPerPallet()
    {
        return $this->cases_per_pallet;
    }
  
    /**
     * Sets cases_per_pallet
     * @param int $cases_per_pallet 
     * @return $this
     */
    public function setCasesPerPallet($cases_per_pallet)
    {
        
        $this->cases_per_pallet = $cases_per_pallet;
        return $this;
    }
    
    /**
     * Gets case_weight
     * @return Number
     */
    public function getCaseWeight()
    {
        return $this->case_weight;
    }
  
    /**
     * Sets case_weight
     * @param Number $case_weight 
     * @return $this
     */
    public function setCaseWeight($case_weight)
    {
        
        $this->case_weight = $case_weight;
        return $this;
    }
    
    /**
     * Gets production_lot
     * @return string
     */
    public function getProductionLot()
    {
        return $this->production_lot;
    }
  
    /**
     * Sets production_lot
     * @param string $production_lot 
     * @return $this
     */
    public function setProductionLot($production_lot)
    {
        
        $this->production_lot = $production_lot;
        return $this;
    }
    
    /**
     * Gets revision_date
     * @return string
     */
    public function getRevisionDate()
    {
        return $this->revision_date;
    }
  
    /**
     * Sets revision_date
     * @param string $revision_date 
     * @return $this
     */
    public function setRevisionDate($revision_date)
    {
        
        $this->revision_date = $revision_date;
        return $this;
    }
    
    /**
     * Gets origin
     * @return string
     */
    public function getOrigin()
    {
        return $this->origin;
    }
  
    /**
     * Sets origin
     * @param string $origin 
     * @return $this
     */
    public function setOrigin($origin)
    {
        
        $this->origin = $origin;
        return $this;
    }
    
    /**
     * Gets carton_length
     * @return Number
     */
    public function getCartonLength()
    {
        return $this->carton_length;
    }
  
    /**
     * Sets carton_length
     * @param Number $carton_length 
     * @return $this
     */
    public function setCartonLength($carton_length)
    {
        
        $this->carton_length = $carton_length;
        return $this;
    }
    
    /**
     * Gets carton_width
     * @return Number
     */
    public function getCartonWidth()
    {
        return $this->carton_width;
    }
  
    /**
     * Sets carton_width
     * @param Number $carton_width 
     * @return $this
     */
    public function setCartonWidth($carton_width)
    {
        
        $this->carton_width = $carton_width;
        return $this;
    }
    
    /**
     * Gets carton_height
     * @return Number
     */
    public function getCartonHeight()
    {
        return $this->carton_height;
    }
  
    /**
     * Sets carton_height
     * @param Number $carton_height 
     * @return $this
     */
    public function setCartonHeight($carton_height)
    {
        
        $this->carton_height = $carton_height;
        return $this;
    }
    
    /**
     * Gets cost
     * @return Number
     */
    public function getCost()
    {
        return $this->cost;
    }
  
    /**
     * Sets cost
     * @param Number $cost 
     * @return $this
     */
    public function setCost($cost)
    {
        
        $this->cost = $cost;
        return $this;
    }
    
    /**
     * Gets sell_price
     * @return Number
     */
    public function getSellPrice()
    {
        return $this->sell_price;
    }
  
    /**
     * Sets sell_price
     * @param Number $sell_price 
     * @return $this
     */
    public function setSellPrice($sell_price)
    {
        
        $this->sell_price = $sell_price;
        return $this;
    }
    
    /**
     * Gets pricing_per
     * @return string
     */
    public function getPricingPer()
    {
        return $this->pricing_per;
    }
  
    /**
     * Sets pricing_per
     * @param string $pricing_per 
     * @return $this
     */
    public function setPricingPer($pricing_per)
    {
        
        $this->pricing_per = $pricing_per;
        return $this;
    }
    
    /**
     * Gets generated_item_receipt_id
     * @return int
     */
    public function getGeneratedItemReceiptId()
    {
        return $this->generated_item_receipt_id;
    }
  
    /**
     * Sets generated_item_receipt_id
     * @param int $generated_item_receipt_id 
     * @return $this
     */
    public function setGeneratedItemReceiptId($generated_item_receipt_id)
    {
        
        $this->generated_item_receipt_id = $generated_item_receipt_id;
        return $this;
    }
    
    /**
     * Gets generated_asn_id
     * @return int
     */
    public function getGeneratedAsnId()
    {
        return $this->generated_asn_id;
    }
  
    /**
     * Sets generated_asn_id
     * @param int $generated_asn_id 
     * @return $this
     */
    public function setGeneratedAsnId($generated_asn_id)
    {
        
        $this->generated_asn_id = $generated_asn_id;
        return $this;
    }
    
    /**
     * Gets dock_date
     * @return \DateTime
     */
    public function getDockDate()
    {
        return $this->dock_date;
    }
  
    /**
     * Sets dock_date
     * @param \DateTime $dock_date 
     * @return $this
     */
    public function setDockDate($dock_date)
    {
        
        $this->dock_date = $dock_date;
        return $this;
    }
    
    /**
     * Gets product_id_tag
     * @return string
     */
    public function getProductIdTag()
    {
        return $this->product_id_tag;
    }
  
    /**
     * Sets product_id_tag
     * @param string $product_id_tag 
     * @return $this
     */
    public function setProductIdTag($product_id_tag)
    {
        
        $this->product_id_tag = $product_id_tag;
        return $this;
    }
    
    /**
     * Gets custom_fields
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->custom_fields;
    }
  
    /**
     * Sets custom_fields
     * @param map[string,object] $custom_fields 
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        
        $this->custom_fields = $custom_fields;
        return $this;
    }
    
    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }
  
    /**
     * Sets sku
     * @param string $sku 
     * @return $this
     */
    public function setSku($sku)
    {
        
        $this->sku = $sku;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
