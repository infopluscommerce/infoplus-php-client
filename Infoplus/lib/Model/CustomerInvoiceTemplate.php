<?php
/**
 * CustomerInvoiceTemplate
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * CustomerInvoiceTemplate Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerInvoiceTemplate implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'customerInvoiceTemplate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'name' => 'string',
        'po_no' => 'string',
        'cost_center' => 'string',
        'description' => 'string',
        'notes' => 'string',
        'terms' => 'string',
        'special_instructions' => 'string',
        'lob_id' => 'int',
        'billing_period' => 'string',
        'remit_to_attention' => 'string',
        'remit_to_company' => 'string',
        'remit_to_street' => 'string',
        'remit_to_street2' => 'string',
        'remit_to_street3' => 'string',
        'remit_to_city' => 'string',
        'remit_to_state' => 'string',
        'remit_to_zip' => 'string',
        'remit_to_country' => 'string',
        'remit_to_phone' => 'string',
        'remit_to_email' => 'string',
        'bill_to_attention' => 'string',
        'bill_to_company' => 'string',
        'bill_to_street' => 'string',
        'bill_to_street2' => 'string',
        'bill_to_street3' => 'string',
        'bill_to_city' => 'string',
        'bill_to_state' => 'string',
        'bill_to_zip' => 'string',
        'bill_to_country' => 'string',
        'bill_to_phone' => 'string',
        'bill_to_email' => 'string',
        'line_items' => '\Infoplus\Infoplus\Model\CustomerInvoiceTemplateLine[]',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'create_date' => 'date-time',
        'modify_date' => 'date-time',
        'name' => null,
        'po_no' => null,
        'cost_center' => null,
        'description' => null,
        'notes' => null,
        'terms' => null,
        'special_instructions' => null,
        'lob_id' => 'int32',
        'billing_period' => null,
        'remit_to_attention' => null,
        'remit_to_company' => null,
        'remit_to_street' => null,
        'remit_to_street2' => null,
        'remit_to_street3' => null,
        'remit_to_city' => null,
        'remit_to_state' => null,
        'remit_to_zip' => null,
        'remit_to_country' => null,
        'remit_to_phone' => null,
        'remit_to_email' => null,
        'bill_to_attention' => null,
        'bill_to_company' => null,
        'bill_to_street' => null,
        'bill_to_street2' => null,
        'bill_to_street3' => null,
        'bill_to_city' => null,
        'bill_to_state' => null,
        'bill_to_zip' => null,
        'bill_to_country' => null,
        'bill_to_phone' => null,
        'bill_to_email' => null,
        'line_items' => null,
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'name' => 'name',
        'po_no' => 'poNo',
        'cost_center' => 'costCenter',
        'description' => 'description',
        'notes' => 'notes',
        'terms' => 'terms',
        'special_instructions' => 'specialInstructions',
        'lob_id' => 'lobId',
        'billing_period' => 'billingPeriod',
        'remit_to_attention' => 'remitToAttention',
        'remit_to_company' => 'remitToCompany',
        'remit_to_street' => 'remitToStreet',
        'remit_to_street2' => 'remitToStreet2',
        'remit_to_street3' => 'remitToStreet3',
        'remit_to_city' => 'remitToCity',
        'remit_to_state' => 'remitToState',
        'remit_to_zip' => 'remitToZip',
        'remit_to_country' => 'remitToCountry',
        'remit_to_phone' => 'remitToPhone',
        'remit_to_email' => 'remitToEmail',
        'bill_to_attention' => 'billToAttention',
        'bill_to_company' => 'billToCompany',
        'bill_to_street' => 'billToStreet',
        'bill_to_street2' => 'billToStreet2',
        'bill_to_street3' => 'billToStreet3',
        'bill_to_city' => 'billToCity',
        'bill_to_state' => 'billToState',
        'bill_to_zip' => 'billToZip',
        'bill_to_country' => 'billToCountry',
        'bill_to_phone' => 'billToPhone',
        'bill_to_email' => 'billToEmail',
        'line_items' => 'lineItems',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'name' => 'setName',
        'po_no' => 'setPoNo',
        'cost_center' => 'setCostCenter',
        'description' => 'setDescription',
        'notes' => 'setNotes',
        'terms' => 'setTerms',
        'special_instructions' => 'setSpecialInstructions',
        'lob_id' => 'setLobId',
        'billing_period' => 'setBillingPeriod',
        'remit_to_attention' => 'setRemitToAttention',
        'remit_to_company' => 'setRemitToCompany',
        'remit_to_street' => 'setRemitToStreet',
        'remit_to_street2' => 'setRemitToStreet2',
        'remit_to_street3' => 'setRemitToStreet3',
        'remit_to_city' => 'setRemitToCity',
        'remit_to_state' => 'setRemitToState',
        'remit_to_zip' => 'setRemitToZip',
        'remit_to_country' => 'setRemitToCountry',
        'remit_to_phone' => 'setRemitToPhone',
        'remit_to_email' => 'setRemitToEmail',
        'bill_to_attention' => 'setBillToAttention',
        'bill_to_company' => 'setBillToCompany',
        'bill_to_street' => 'setBillToStreet',
        'bill_to_street2' => 'setBillToStreet2',
        'bill_to_street3' => 'setBillToStreet3',
        'bill_to_city' => 'setBillToCity',
        'bill_to_state' => 'setBillToState',
        'bill_to_zip' => 'setBillToZip',
        'bill_to_country' => 'setBillToCountry',
        'bill_to_phone' => 'setBillToPhone',
        'bill_to_email' => 'setBillToEmail',
        'line_items' => 'setLineItems',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'name' => 'getName',
        'po_no' => 'getPoNo',
        'cost_center' => 'getCostCenter',
        'description' => 'getDescription',
        'notes' => 'getNotes',
        'terms' => 'getTerms',
        'special_instructions' => 'getSpecialInstructions',
        'lob_id' => 'getLobId',
        'billing_period' => 'getBillingPeriod',
        'remit_to_attention' => 'getRemitToAttention',
        'remit_to_company' => 'getRemitToCompany',
        'remit_to_street' => 'getRemitToStreet',
        'remit_to_street2' => 'getRemitToStreet2',
        'remit_to_street3' => 'getRemitToStreet3',
        'remit_to_city' => 'getRemitToCity',
        'remit_to_state' => 'getRemitToState',
        'remit_to_zip' => 'getRemitToZip',
        'remit_to_country' => 'getRemitToCountry',
        'remit_to_phone' => 'getRemitToPhone',
        'remit_to_email' => 'getRemitToEmail',
        'bill_to_attention' => 'getBillToAttention',
        'bill_to_company' => 'getBillToCompany',
        'bill_to_street' => 'getBillToStreet',
        'bill_to_street2' => 'getBillToStreet2',
        'bill_to_street3' => 'getBillToStreet3',
        'bill_to_city' => 'getBillToCity',
        'bill_to_state' => 'getBillToState',
        'bill_to_zip' => 'getBillToZip',
        'bill_to_country' => 'getBillToCountry',
        'bill_to_phone' => 'getBillToPhone',
        'bill_to_email' => 'getBillToEmail',
        'line_items' => 'getLineItems',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['po_no'] = isset($data['po_no']) ? $data['po_no'] : null;
        $this->container['cost_center'] = isset($data['cost_center']) ? $data['cost_center'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['special_instructions'] = isset($data['special_instructions']) ? $data['special_instructions'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['billing_period'] = isset($data['billing_period']) ? $data['billing_period'] : null;
        $this->container['remit_to_attention'] = isset($data['remit_to_attention']) ? $data['remit_to_attention'] : null;
        $this->container['remit_to_company'] = isset($data['remit_to_company']) ? $data['remit_to_company'] : null;
        $this->container['remit_to_street'] = isset($data['remit_to_street']) ? $data['remit_to_street'] : null;
        $this->container['remit_to_street2'] = isset($data['remit_to_street2']) ? $data['remit_to_street2'] : null;
        $this->container['remit_to_street3'] = isset($data['remit_to_street3']) ? $data['remit_to_street3'] : null;
        $this->container['remit_to_city'] = isset($data['remit_to_city']) ? $data['remit_to_city'] : null;
        $this->container['remit_to_state'] = isset($data['remit_to_state']) ? $data['remit_to_state'] : null;
        $this->container['remit_to_zip'] = isset($data['remit_to_zip']) ? $data['remit_to_zip'] : null;
        $this->container['remit_to_country'] = isset($data['remit_to_country']) ? $data['remit_to_country'] : null;
        $this->container['remit_to_phone'] = isset($data['remit_to_phone']) ? $data['remit_to_phone'] : null;
        $this->container['remit_to_email'] = isset($data['remit_to_email']) ? $data['remit_to_email'] : null;
        $this->container['bill_to_attention'] = isset($data['bill_to_attention']) ? $data['bill_to_attention'] : null;
        $this->container['bill_to_company'] = isset($data['bill_to_company']) ? $data['bill_to_company'] : null;
        $this->container['bill_to_street'] = isset($data['bill_to_street']) ? $data['bill_to_street'] : null;
        $this->container['bill_to_street2'] = isset($data['bill_to_street2']) ? $data['bill_to_street2'] : null;
        $this->container['bill_to_street3'] = isset($data['bill_to_street3']) ? $data['bill_to_street3'] : null;
        $this->container['bill_to_city'] = isset($data['bill_to_city']) ? $data['bill_to_city'] : null;
        $this->container['bill_to_state'] = isset($data['bill_to_state']) ? $data['bill_to_state'] : null;
        $this->container['bill_to_zip'] = isset($data['bill_to_zip']) ? $data['bill_to_zip'] : null;
        $this->container['bill_to_country'] = isset($data['bill_to_country']) ? $data['bill_to_country'] : null;
        $this->container['bill_to_phone'] = isset($data['bill_to_phone']) ? $data['bill_to_phone'] : null;
        $this->container['bill_to_email'] = isset($data['bill_to_email']) ? $data['bill_to_email'] : null;
        $this->container['line_items'] = isset($data['line_items']) ? $data['line_items'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['billing_period'] === null) {
            $invalidProperties[] = "'billing_period' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['name'] === null) {
            return false;
        }
        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['billing_period'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets po_no
     *
     * @return string
     */
    public function getPoNo()
    {
        return $this->container['po_no'];
    }

    /**
     * Sets po_no
     *
     * @param string $po_no po_no
     *
     * @return $this
     */
    public function setPoNo($po_no)
    {
        $this->container['po_no'] = $po_no;

        return $this;
    }

    /**
     * Gets cost_center
     *
     * @return string
     */
    public function getCostCenter()
    {
        return $this->container['cost_center'];
    }

    /**
     * Sets cost_center
     *
     * @param string $cost_center cost_center
     *
     * @return $this
     */
    public function setCostCenter($cost_center)
    {
        $this->container['cost_center'] = $cost_center;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets special_instructions
     *
     * @return string
     */
    public function getSpecialInstructions()
    {
        return $this->container['special_instructions'];
    }

    /**
     * Sets special_instructions
     *
     * @param string $special_instructions special_instructions
     *
     * @return $this
     */
    public function setSpecialInstructions($special_instructions)
    {
        $this->container['special_instructions'] = $special_instructions;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets billing_period
     *
     * @return string
     */
    public function getBillingPeriod()
    {
        return $this->container['billing_period'];
    }

    /**
     * Sets billing_period
     *
     * @param string $billing_period billing_period
     *
     * @return $this
     */
    public function setBillingPeriod($billing_period)
    {
        $this->container['billing_period'] = $billing_period;

        return $this;
    }

    /**
     * Gets remit_to_attention
     *
     * @return string
     */
    public function getRemitToAttention()
    {
        return $this->container['remit_to_attention'];
    }

    /**
     * Sets remit_to_attention
     *
     * @param string $remit_to_attention remit_to_attention
     *
     * @return $this
     */
    public function setRemitToAttention($remit_to_attention)
    {
        $this->container['remit_to_attention'] = $remit_to_attention;

        return $this;
    }

    /**
     * Gets remit_to_company
     *
     * @return string
     */
    public function getRemitToCompany()
    {
        return $this->container['remit_to_company'];
    }

    /**
     * Sets remit_to_company
     *
     * @param string $remit_to_company remit_to_company
     *
     * @return $this
     */
    public function setRemitToCompany($remit_to_company)
    {
        $this->container['remit_to_company'] = $remit_to_company;

        return $this;
    }

    /**
     * Gets remit_to_street
     *
     * @return string
     */
    public function getRemitToStreet()
    {
        return $this->container['remit_to_street'];
    }

    /**
     * Sets remit_to_street
     *
     * @param string $remit_to_street remit_to_street
     *
     * @return $this
     */
    public function setRemitToStreet($remit_to_street)
    {
        $this->container['remit_to_street'] = $remit_to_street;

        return $this;
    }

    /**
     * Gets remit_to_street2
     *
     * @return string
     */
    public function getRemitToStreet2()
    {
        return $this->container['remit_to_street2'];
    }

    /**
     * Sets remit_to_street2
     *
     * @param string $remit_to_street2 remit_to_street2
     *
     * @return $this
     */
    public function setRemitToStreet2($remit_to_street2)
    {
        $this->container['remit_to_street2'] = $remit_to_street2;

        return $this;
    }

    /**
     * Gets remit_to_street3
     *
     * @return string
     */
    public function getRemitToStreet3()
    {
        return $this->container['remit_to_street3'];
    }

    /**
     * Sets remit_to_street3
     *
     * @param string $remit_to_street3 remit_to_street3
     *
     * @return $this
     */
    public function setRemitToStreet3($remit_to_street3)
    {
        $this->container['remit_to_street3'] = $remit_to_street3;

        return $this;
    }

    /**
     * Gets remit_to_city
     *
     * @return string
     */
    public function getRemitToCity()
    {
        return $this->container['remit_to_city'];
    }

    /**
     * Sets remit_to_city
     *
     * @param string $remit_to_city remit_to_city
     *
     * @return $this
     */
    public function setRemitToCity($remit_to_city)
    {
        $this->container['remit_to_city'] = $remit_to_city;

        return $this;
    }

    /**
     * Gets remit_to_state
     *
     * @return string
     */
    public function getRemitToState()
    {
        return $this->container['remit_to_state'];
    }

    /**
     * Sets remit_to_state
     *
     * @param string $remit_to_state remit_to_state
     *
     * @return $this
     */
    public function setRemitToState($remit_to_state)
    {
        $this->container['remit_to_state'] = $remit_to_state;

        return $this;
    }

    /**
     * Gets remit_to_zip
     *
     * @return string
     */
    public function getRemitToZip()
    {
        return $this->container['remit_to_zip'];
    }

    /**
     * Sets remit_to_zip
     *
     * @param string $remit_to_zip remit_to_zip
     *
     * @return $this
     */
    public function setRemitToZip($remit_to_zip)
    {
        $this->container['remit_to_zip'] = $remit_to_zip;

        return $this;
    }

    /**
     * Gets remit_to_country
     *
     * @return string
     */
    public function getRemitToCountry()
    {
        return $this->container['remit_to_country'];
    }

    /**
     * Sets remit_to_country
     *
     * @param string $remit_to_country remit_to_country
     *
     * @return $this
     */
    public function setRemitToCountry($remit_to_country)
    {
        $this->container['remit_to_country'] = $remit_to_country;

        return $this;
    }

    /**
     * Gets remit_to_phone
     *
     * @return string
     */
    public function getRemitToPhone()
    {
        return $this->container['remit_to_phone'];
    }

    /**
     * Sets remit_to_phone
     *
     * @param string $remit_to_phone remit_to_phone
     *
     * @return $this
     */
    public function setRemitToPhone($remit_to_phone)
    {
        $this->container['remit_to_phone'] = $remit_to_phone;

        return $this;
    }

    /**
     * Gets remit_to_email
     *
     * @return string
     */
    public function getRemitToEmail()
    {
        return $this->container['remit_to_email'];
    }

    /**
     * Sets remit_to_email
     *
     * @param string $remit_to_email remit_to_email
     *
     * @return $this
     */
    public function setRemitToEmail($remit_to_email)
    {
        $this->container['remit_to_email'] = $remit_to_email;

        return $this;
    }

    /**
     * Gets bill_to_attention
     *
     * @return string
     */
    public function getBillToAttention()
    {
        return $this->container['bill_to_attention'];
    }

    /**
     * Sets bill_to_attention
     *
     * @param string $bill_to_attention bill_to_attention
     *
     * @return $this
     */
    public function setBillToAttention($bill_to_attention)
    {
        $this->container['bill_to_attention'] = $bill_to_attention;

        return $this;
    }

    /**
     * Gets bill_to_company
     *
     * @return string
     */
    public function getBillToCompany()
    {
        return $this->container['bill_to_company'];
    }

    /**
     * Sets bill_to_company
     *
     * @param string $bill_to_company bill_to_company
     *
     * @return $this
     */
    public function setBillToCompany($bill_to_company)
    {
        $this->container['bill_to_company'] = $bill_to_company;

        return $this;
    }

    /**
     * Gets bill_to_street
     *
     * @return string
     */
    public function getBillToStreet()
    {
        return $this->container['bill_to_street'];
    }

    /**
     * Sets bill_to_street
     *
     * @param string $bill_to_street bill_to_street
     *
     * @return $this
     */
    public function setBillToStreet($bill_to_street)
    {
        $this->container['bill_to_street'] = $bill_to_street;

        return $this;
    }

    /**
     * Gets bill_to_street2
     *
     * @return string
     */
    public function getBillToStreet2()
    {
        return $this->container['bill_to_street2'];
    }

    /**
     * Sets bill_to_street2
     *
     * @param string $bill_to_street2 bill_to_street2
     *
     * @return $this
     */
    public function setBillToStreet2($bill_to_street2)
    {
        $this->container['bill_to_street2'] = $bill_to_street2;

        return $this;
    }

    /**
     * Gets bill_to_street3
     *
     * @return string
     */
    public function getBillToStreet3()
    {
        return $this->container['bill_to_street3'];
    }

    /**
     * Sets bill_to_street3
     *
     * @param string $bill_to_street3 bill_to_street3
     *
     * @return $this
     */
    public function setBillToStreet3($bill_to_street3)
    {
        $this->container['bill_to_street3'] = $bill_to_street3;

        return $this;
    }

    /**
     * Gets bill_to_city
     *
     * @return string
     */
    public function getBillToCity()
    {
        return $this->container['bill_to_city'];
    }

    /**
     * Sets bill_to_city
     *
     * @param string $bill_to_city bill_to_city
     *
     * @return $this
     */
    public function setBillToCity($bill_to_city)
    {
        $this->container['bill_to_city'] = $bill_to_city;

        return $this;
    }

    /**
     * Gets bill_to_state
     *
     * @return string
     */
    public function getBillToState()
    {
        return $this->container['bill_to_state'];
    }

    /**
     * Sets bill_to_state
     *
     * @param string $bill_to_state bill_to_state
     *
     * @return $this
     */
    public function setBillToState($bill_to_state)
    {
        $this->container['bill_to_state'] = $bill_to_state;

        return $this;
    }

    /**
     * Gets bill_to_zip
     *
     * @return string
     */
    public function getBillToZip()
    {
        return $this->container['bill_to_zip'];
    }

    /**
     * Sets bill_to_zip
     *
     * @param string $bill_to_zip bill_to_zip
     *
     * @return $this
     */
    public function setBillToZip($bill_to_zip)
    {
        $this->container['bill_to_zip'] = $bill_to_zip;

        return $this;
    }

    /**
     * Gets bill_to_country
     *
     * @return string
     */
    public function getBillToCountry()
    {
        return $this->container['bill_to_country'];
    }

    /**
     * Sets bill_to_country
     *
     * @param string $bill_to_country bill_to_country
     *
     * @return $this
     */
    public function setBillToCountry($bill_to_country)
    {
        $this->container['bill_to_country'] = $bill_to_country;

        return $this;
    }

    /**
     * Gets bill_to_phone
     *
     * @return string
     */
    public function getBillToPhone()
    {
        return $this->container['bill_to_phone'];
    }

    /**
     * Sets bill_to_phone
     *
     * @param string $bill_to_phone bill_to_phone
     *
     * @return $this
     */
    public function setBillToPhone($bill_to_phone)
    {
        $this->container['bill_to_phone'] = $bill_to_phone;

        return $this;
    }

    /**
     * Gets bill_to_email
     *
     * @return string
     */
    public function getBillToEmail()
    {
        return $this->container['bill_to_email'];
    }

    /**
     * Sets bill_to_email
     *
     * @param string $bill_to_email bill_to_email
     *
     * @return $this
     */
    public function setBillToEmail($bill_to_email)
    {
        $this->container['bill_to_email'] = $bill_to_email;

        return $this;
    }

    /**
     * Gets line_items
     *
     * @return \Infoplus\Infoplus\Model\CustomerInvoiceTemplateLine[]
     */
    public function getLineItems()
    {
        return $this->container['line_items'];
    }

    /**
     * Sets line_items
     *
     * @param \Infoplus\Infoplus\Model\CustomerInvoiceTemplateLine[] $line_items line_items
     *
     * @return $this
     */
    public function setLineItems($line_items)
    {
        $this->container['line_items'] = $line_items;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


