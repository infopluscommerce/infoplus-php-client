<?php
/**
 * InventoryAdjustment
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Model;

use \ArrayAccess;
/**
 * InventoryAdjustment Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Infoplus
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InventoryAdjustment implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'lob_id' => 'int',
        'sku_id' => 'int',
        'po_no_id' => 'int',
        'adjustment_date' => '\DateTime',
        'adjustment_time' => 'string',
        'location' => 'string',
        'qty' => 'int',
        'note' => 'string',
        'authorized_by' => 'string',
        'printed' => 'string',
        'order_no' => 'Number',
        'adjustment_code' => 'string',
        'custom_fields' => 'map[string,object]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'lob_id' => 'lobId',
        'sku_id' => 'skuId',
        'po_no_id' => 'poNoId',
        'adjustment_date' => 'adjustmentDate',
        'adjustment_time' => 'adjustmentTime',
        'location' => 'location',
        'qty' => 'qty',
        'note' => 'note',
        'authorized_by' => 'authorizedBy',
        'printed' => 'printed',
        'order_no' => 'orderNo',
        'adjustment_code' => 'adjustmentCode',
        'custom_fields' => 'customFields'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'lob_id' => 'setLobId',
        'sku_id' => 'setSkuId',
        'po_no_id' => 'setPoNoId',
        'adjustment_date' => 'setAdjustmentDate',
        'adjustment_time' => 'setAdjustmentTime',
        'location' => 'setLocation',
        'qty' => 'setQty',
        'note' => 'setNote',
        'authorized_by' => 'setAuthorizedBy',
        'printed' => 'setPrinted',
        'order_no' => 'setOrderNo',
        'adjustment_code' => 'setAdjustmentCode',
        'custom_fields' => 'setCustomFields'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'lob_id' => 'getLobId',
        'sku_id' => 'getSkuId',
        'po_no_id' => 'getPoNoId',
        'adjustment_date' => 'getAdjustmentDate',
        'adjustment_time' => 'getAdjustmentTime',
        'location' => 'getLocation',
        'qty' => 'getQty',
        'note' => 'getNote',
        'authorized_by' => 'getAuthorizedBy',
        'printed' => 'getPrinted',
        'order_no' => 'getOrderNo',
        'adjustment_code' => 'getAdjustmentCode',
        'custom_fields' => 'getCustomFields'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $lob_id 
      * @var int
      */
    protected $lob_id;
    
    /**
      * $sku_id 
      * @var int
      */
    protected $sku_id;
    
    /**
      * $po_no_id 
      * @var int
      */
    protected $po_no_id;
    
    /**
      * $adjustment_date 
      * @var \DateTime
      */
    protected $adjustment_date;
    
    /**
      * $adjustment_time 
      * @var string
      */
    protected $adjustment_time;
    
    /**
      * $location 
      * @var string
      */
    protected $location;
    
    /**
      * $qty 
      * @var int
      */
    protected $qty;
    
    /**
      * $note 
      * @var string
      */
    protected $note;
    
    /**
      * $authorized_by 
      * @var string
      */
    protected $authorized_by;
    
    /**
      * $printed 
      * @var string
      */
    protected $printed;
    
    /**
      * $order_no 
      * @var Number
      */
    protected $order_no;
    
    /**
      * $adjustment_code 
      * @var string
      */
    protected $adjustment_code;
    
    /**
      * $custom_fields 
      * @var map[string,object]
      */
    protected $custom_fields;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->lob_id = $data["lob_id"];
            $this->sku_id = $data["sku_id"];
            $this->po_no_id = $data["po_no_id"];
            $this->adjustment_date = $data["adjustment_date"];
            $this->adjustment_time = $data["adjustment_time"];
            $this->location = $data["location"];
            $this->qty = $data["qty"];
            $this->note = $data["note"];
            $this->authorized_by = $data["authorized_by"];
            $this->printed = $data["printed"];
            $this->order_no = $data["order_no"];
            $this->adjustment_code = $data["adjustment_code"];
            $this->custom_fields = $data["custom_fields"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets lob_id
     * @return int
     */
    public function getLobId()
    {
        return $this->lob_id;
    }
  
    /**
     * Sets lob_id
     * @param int $lob_id 
     * @return $this
     */
    public function setLobId($lob_id)
    {
        
        $this->lob_id = $lob_id;
        return $this;
    }
    
    /**
     * Gets sku_id
     * @return int
     */
    public function getSkuId()
    {
        return $this->sku_id;
    }
  
    /**
     * Sets sku_id
     * @param int $sku_id 
     * @return $this
     */
    public function setSkuId($sku_id)
    {
        
        $this->sku_id = $sku_id;
        return $this;
    }
    
    /**
     * Gets po_no_id
     * @return int
     */
    public function getPoNoId()
    {
        return $this->po_no_id;
    }
  
    /**
     * Sets po_no_id
     * @param int $po_no_id 
     * @return $this
     */
    public function setPoNoId($po_no_id)
    {
        
        $this->po_no_id = $po_no_id;
        return $this;
    }
    
    /**
     * Gets adjustment_date
     * @return \DateTime
     */
    public function getAdjustmentDate()
    {
        return $this->adjustment_date;
    }
  
    /**
     * Sets adjustment_date
     * @param \DateTime $adjustment_date 
     * @return $this
     */
    public function setAdjustmentDate($adjustment_date)
    {
        
        $this->adjustment_date = $adjustment_date;
        return $this;
    }
    
    /**
     * Gets adjustment_time
     * @return string
     */
    public function getAdjustmentTime()
    {
        return $this->adjustment_time;
    }
  
    /**
     * Sets adjustment_time
     * @param string $adjustment_time 
     * @return $this
     */
    public function setAdjustmentTime($adjustment_time)
    {
        
        $this->adjustment_time = $adjustment_time;
        return $this;
    }
    
    /**
     * Gets location
     * @return string
     */
    public function getLocation()
    {
        return $this->location;
    }
  
    /**
     * Sets location
     * @param string $location 
     * @return $this
     */
    public function setLocation($location)
    {
        
        $this->location = $location;
        return $this;
    }
    
    /**
     * Gets qty
     * @return int
     */
    public function getQty()
    {
        return $this->qty;
    }
  
    /**
     * Sets qty
     * @param int $qty 
     * @return $this
     */
    public function setQty($qty)
    {
        
        $this->qty = $qty;
        return $this;
    }
    
    /**
     * Gets note
     * @return string
     */
    public function getNote()
    {
        return $this->note;
    }
  
    /**
     * Sets note
     * @param string $note 
     * @return $this
     */
    public function setNote($note)
    {
        
        $this->note = $note;
        return $this;
    }
    
    /**
     * Gets authorized_by
     * @return string
     */
    public function getAuthorizedBy()
    {
        return $this->authorized_by;
    }
  
    /**
     * Sets authorized_by
     * @param string $authorized_by 
     * @return $this
     */
    public function setAuthorizedBy($authorized_by)
    {
        
        $this->authorized_by = $authorized_by;
        return $this;
    }
    
    /**
     * Gets printed
     * @return string
     */
    public function getPrinted()
    {
        return $this->printed;
    }
  
    /**
     * Sets printed
     * @param string $printed 
     * @return $this
     */
    public function setPrinted($printed)
    {
        
        $this->printed = $printed;
        return $this;
    }
    
    /**
     * Gets order_no
     * @return Number
     */
    public function getOrderNo()
    {
        return $this->order_no;
    }
  
    /**
     * Sets order_no
     * @param Number $order_no 
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        
        $this->order_no = $order_no;
        return $this;
    }
    
    /**
     * Gets adjustment_code
     * @return string
     */
    public function getAdjustmentCode()
    {
        return $this->adjustment_code;
    }
  
    /**
     * Sets adjustment_code
     * @param string $adjustment_code 
     * @return $this
     */
    public function setAdjustmentCode($adjustment_code)
    {
        
        $this->adjustment_code = $adjustment_code;
        return $this;
    }
    
    /**
     * Gets custom_fields
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->custom_fields;
    }
  
    /**
     * Sets custom_fields
     * @param map[string,object] $custom_fields 
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        
        $this->custom_fields = $custom_fields;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
