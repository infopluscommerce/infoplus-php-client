<?php
/**
 * ThirdPartyParcelAccount
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Model;

use \ArrayAccess;
/**
 * ThirdPartyParcelAccount Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Infoplus
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ThirdPartyParcelAccount implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'lob_id' => 'int',
        'carrier' => 'string',
        'account_no' => 'string',
        'account_name' => 'string',
        'billing_company' => 'string',
        'attention' => 'string',
        'street1' => 'string',
        'street2' => 'string',
        'street3' => 'string',
        'city' => 'string',
        'state' => 'string',
        'country' => 'string',
        'zip_code' => 'string',
        'phone' => 'string',
        'active' => 'string',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'custom_fields' => 'map[string,object]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'id',
        'lob_id' => 'lobId',
        'carrier' => 'carrier',
        'account_no' => 'accountNo',
        'account_name' => 'accountName',
        'billing_company' => 'billingCompany',
        'attention' => 'attention',
        'street1' => 'street1',
        'street2' => 'street2',
        'street3' => 'street3',
        'city' => 'city',
        'state' => 'state',
        'country' => 'country',
        'zip_code' => 'zipCode',
        'phone' => 'phone',
        'active' => 'active',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'custom_fields' => 'customFields'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'lob_id' => 'setLobId',
        'carrier' => 'setCarrier',
        'account_no' => 'setAccountNo',
        'account_name' => 'setAccountName',
        'billing_company' => 'setBillingCompany',
        'attention' => 'setAttention',
        'street1' => 'setStreet1',
        'street2' => 'setStreet2',
        'street3' => 'setStreet3',
        'city' => 'setCity',
        'state' => 'setState',
        'country' => 'setCountry',
        'zip_code' => 'setZipCode',
        'phone' => 'setPhone',
        'active' => 'setActive',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'custom_fields' => 'setCustomFields'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'lob_id' => 'getLobId',
        'carrier' => 'getCarrier',
        'account_no' => 'getAccountNo',
        'account_name' => 'getAccountName',
        'billing_company' => 'getBillingCompany',
        'attention' => 'getAttention',
        'street1' => 'getStreet1',
        'street2' => 'getStreet2',
        'street3' => 'getStreet3',
        'city' => 'getCity',
        'state' => 'getState',
        'country' => 'getCountry',
        'zip_code' => 'getZipCode',
        'phone' => 'getPhone',
        'active' => 'getActive',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'custom_fields' => 'getCustomFields'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $lob_id 
      * @var int
      */
    protected $lob_id;
    
    /**
      * $carrier 
      * @var string
      */
    protected $carrier;
    
    /**
      * $account_no 
      * @var string
      */
    protected $account_no;
    
    /**
      * $account_name 
      * @var string
      */
    protected $account_name;
    
    /**
      * $billing_company 
      * @var string
      */
    protected $billing_company;
    
    /**
      * $attention 
      * @var string
      */
    protected $attention;
    
    /**
      * $street1 
      * @var string
      */
    protected $street1;
    
    /**
      * $street2 
      * @var string
      */
    protected $street2;
    
    /**
      * $street3 
      * @var string
      */
    protected $street3;
    
    /**
      * $city 
      * @var string
      */
    protected $city;
    
    /**
      * $state 
      * @var string
      */
    protected $state;
    
    /**
      * $country 
      * @var string
      */
    protected $country;
    
    /**
      * $zip_code 
      * @var string
      */
    protected $zip_code;
    
    /**
      * $phone 
      * @var string
      */
    protected $phone;
    
    /**
      * $active 
      * @var string
      */
    protected $active;
    
    /**
      * $create_date 
      * @var \DateTime
      */
    protected $create_date;
    
    /**
      * $modify_date 
      * @var \DateTime
      */
    protected $modify_date;
    
    /**
      * $custom_fields 
      * @var map[string,object]
      */
    protected $custom_fields;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->id = $data["id"];
            $this->lob_id = $data["lob_id"];
            $this->carrier = $data["carrier"];
            $this->account_no = $data["account_no"];
            $this->account_name = $data["account_name"];
            $this->billing_company = $data["billing_company"];
            $this->attention = $data["attention"];
            $this->street1 = $data["street1"];
            $this->street2 = $data["street2"];
            $this->street3 = $data["street3"];
            $this->city = $data["city"];
            $this->state = $data["state"];
            $this->country = $data["country"];
            $this->zip_code = $data["zip_code"];
            $this->phone = $data["phone"];
            $this->active = $data["active"];
            $this->create_date = $data["create_date"];
            $this->modify_date = $data["modify_date"];
            $this->custom_fields = $data["custom_fields"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets lob_id
     * @return int
     */
    public function getLobId()
    {
        return $this->lob_id;
    }
  
    /**
     * Sets lob_id
     * @param int $lob_id 
     * @return $this
     */
    public function setLobId($lob_id)
    {
        
        $this->lob_id = $lob_id;
        return $this;
    }
    
    /**
     * Gets carrier
     * @return string
     */
    public function getCarrier()
    {
        return $this->carrier;
    }
  
    /**
     * Sets carrier
     * @param string $carrier 
     * @return $this
     */
    public function setCarrier($carrier)
    {
        
        $this->carrier = $carrier;
        return $this;
    }
    
    /**
     * Gets account_no
     * @return string
     */
    public function getAccountNo()
    {
        return $this->account_no;
    }
  
    /**
     * Sets account_no
     * @param string $account_no 
     * @return $this
     */
    public function setAccountNo($account_no)
    {
        
        $this->account_no = $account_no;
        return $this;
    }
    
    /**
     * Gets account_name
     * @return string
     */
    public function getAccountName()
    {
        return $this->account_name;
    }
  
    /**
     * Sets account_name
     * @param string $account_name 
     * @return $this
     */
    public function setAccountName($account_name)
    {
        
        $this->account_name = $account_name;
        return $this;
    }
    
    /**
     * Gets billing_company
     * @return string
     */
    public function getBillingCompany()
    {
        return $this->billing_company;
    }
  
    /**
     * Sets billing_company
     * @param string $billing_company 
     * @return $this
     */
    public function setBillingCompany($billing_company)
    {
        
        $this->billing_company = $billing_company;
        return $this;
    }
    
    /**
     * Gets attention
     * @return string
     */
    public function getAttention()
    {
        return $this->attention;
    }
  
    /**
     * Sets attention
     * @param string $attention 
     * @return $this
     */
    public function setAttention($attention)
    {
        
        $this->attention = $attention;
        return $this;
    }
    
    /**
     * Gets street1
     * @return string
     */
    public function getStreet1()
    {
        return $this->street1;
    }
  
    /**
     * Sets street1
     * @param string $street1 
     * @return $this
     */
    public function setStreet1($street1)
    {
        
        $this->street1 = $street1;
        return $this;
    }
    
    /**
     * Gets street2
     * @return string
     */
    public function getStreet2()
    {
        return $this->street2;
    }
  
    /**
     * Sets street2
     * @param string $street2 
     * @return $this
     */
    public function setStreet2($street2)
    {
        
        $this->street2 = $street2;
        return $this;
    }
    
    /**
     * Gets street3
     * @return string
     */
    public function getStreet3()
    {
        return $this->street3;
    }
  
    /**
     * Sets street3
     * @param string $street3 
     * @return $this
     */
    public function setStreet3($street3)
    {
        
        $this->street3 = $street3;
        return $this;
    }
    
    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->city;
    }
  
    /**
     * Sets city
     * @param string $city 
     * @return $this
     */
    public function setCity($city)
    {
        
        $this->city = $city;
        return $this;
    }
    
    /**
     * Gets state
     * @return string
     */
    public function getState()
    {
        return $this->state;
    }
  
    /**
     * Sets state
     * @param string $state 
     * @return $this
     */
    public function setState($state)
    {
        
        $this->state = $state;
        return $this;
    }
    
    /**
     * Gets country
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }
  
    /**
     * Sets country
     * @param string $country 
     * @return $this
     */
    public function setCountry($country)
    {
        
        $this->country = $country;
        return $this;
    }
    
    /**
     * Gets zip_code
     * @return string
     */
    public function getZipCode()
    {
        return $this->zip_code;
    }
  
    /**
     * Sets zip_code
     * @param string $zip_code 
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        
        $this->zip_code = $zip_code;
        return $this;
    }
    
    /**
     * Gets phone
     * @return string
     */
    public function getPhone()
    {
        return $this->phone;
    }
  
    /**
     * Sets phone
     * @param string $phone 
     * @return $this
     */
    public function setPhone($phone)
    {
        
        $this->phone = $phone;
        return $this;
    }
    
    /**
     * Gets active
     * @return string
     */
    public function getActive()
    {
        return $this->active;
    }
  
    /**
     * Sets active
     * @param string $active 
     * @return $this
     */
    public function setActive($active)
    {
        
        $this->active = $active;
        return $this;
    }
    
    /**
     * Gets create_date
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->create_date;
    }
  
    /**
     * Sets create_date
     * @param \DateTime $create_date 
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        
        $this->create_date = $create_date;
        return $this;
    }
    
    /**
     * Gets modify_date
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->modify_date;
    }
  
    /**
     * Sets modify_date
     * @param \DateTime $modify_date 
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        
        $this->modify_date = $modify_date;
        return $this;
    }
    
    /**
     * Gets custom_fields
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->custom_fields;
    }
  
    /**
     * Sets custom_fields
     * @param map[string,object] $custom_fields 
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        
        $this->custom_fields = $custom_fields;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
