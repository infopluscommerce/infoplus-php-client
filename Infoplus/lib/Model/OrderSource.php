<?php
/**
 * OrderSource
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.0
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * OrderSource Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderSource implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'orderSource';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'lob_id' => 'int',
        'name' => 'string',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'packing_notes' => 'string',
        'require_cartonized_asn' => 'bool',
        'require_gs1128_label' => 'bool',
        'shipping_notes' => 'string',
        'packing_slip_id' => 'int',
        'order_invoice_id' => 'int',
        'order_confirmation_email_id' => 'int',
        'shipment_confirmation_email_id' => 'int',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'lob_id' => 'int32',
        'name' => null,
        'create_date' => 'date-time',
        'modify_date' => 'date-time',
        'packing_notes' => null,
        'require_cartonized_asn' => null,
        'require_gs1128_label' => null,
        'shipping_notes' => null,
        'packing_slip_id' => 'int32',
        'order_invoice_id' => 'int32',
        'order_confirmation_email_id' => 'int32',
        'shipment_confirmation_email_id' => 'int32',
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'lob_id' => 'lobId',
        'name' => 'name',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'packing_notes' => 'packingNotes',
        'require_cartonized_asn' => 'requireCartonizedASN',
        'require_gs1128_label' => 'requireGS1128Label',
        'shipping_notes' => 'shippingNotes',
        'packing_slip_id' => 'packingSlipId',
        'order_invoice_id' => 'orderInvoiceId',
        'order_confirmation_email_id' => 'orderConfirmationEmailId',
        'shipment_confirmation_email_id' => 'shipmentConfirmationEmailId',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'lob_id' => 'setLobId',
        'name' => 'setName',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'packing_notes' => 'setPackingNotes',
        'require_cartonized_asn' => 'setRequireCartonizedAsn',
        'require_gs1128_label' => 'setRequireGs1128Label',
        'shipping_notes' => 'setShippingNotes',
        'packing_slip_id' => 'setPackingSlipId',
        'order_invoice_id' => 'setOrderInvoiceId',
        'order_confirmation_email_id' => 'setOrderConfirmationEmailId',
        'shipment_confirmation_email_id' => 'setShipmentConfirmationEmailId',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'lob_id' => 'getLobId',
        'name' => 'getName',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'packing_notes' => 'getPackingNotes',
        'require_cartonized_asn' => 'getRequireCartonizedAsn',
        'require_gs1128_label' => 'getRequireGs1128Label',
        'shipping_notes' => 'getShippingNotes',
        'packing_slip_id' => 'getPackingSlipId',
        'order_invoice_id' => 'getOrderInvoiceId',
        'order_confirmation_email_id' => 'getOrderConfirmationEmailId',
        'shipment_confirmation_email_id' => 'getShipmentConfirmationEmailId',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['packing_notes'] = isset($data['packing_notes']) ? $data['packing_notes'] : null;
        $this->container['require_cartonized_asn'] = isset($data['require_cartonized_asn']) ? $data['require_cartonized_asn'] : false;
        $this->container['require_gs1128_label'] = isset($data['require_gs1128_label']) ? $data['require_gs1128_label'] : false;
        $this->container['shipping_notes'] = isset($data['shipping_notes']) ? $data['shipping_notes'] : null;
        $this->container['packing_slip_id'] = isset($data['packing_slip_id']) ? $data['packing_slip_id'] : null;
        $this->container['order_invoice_id'] = isset($data['order_invoice_id']) ? $data['order_invoice_id'] : null;
        $this->container['order_confirmation_email_id'] = isset($data['order_confirmation_email_id']) ? $data['order_confirmation_email_id'] : null;
        $this->container['shipment_confirmation_email_id'] = isset($data['shipment_confirmation_email_id']) ? $data['shipment_confirmation_email_id'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['name'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets packing_notes
     *
     * @return string
     */
    public function getPackingNotes()
    {
        return $this->container['packing_notes'];
    }

    /**
     * Sets packing_notes
     *
     * @param string $packing_notes packing_notes
     *
     * @return $this
     */
    public function setPackingNotes($packing_notes)
    {
        $this->container['packing_notes'] = $packing_notes;

        return $this;
    }

    /**
     * Gets require_cartonized_asn
     *
     * @return bool
     */
    public function getRequireCartonizedAsn()
    {
        return $this->container['require_cartonized_asn'];
    }

    /**
     * Sets require_cartonized_asn
     *
     * @param bool $require_cartonized_asn require_cartonized_asn
     *
     * @return $this
     */
    public function setRequireCartonizedAsn($require_cartonized_asn)
    {
        $this->container['require_cartonized_asn'] = $require_cartonized_asn;

        return $this;
    }

    /**
     * Gets require_gs1128_label
     *
     * @return bool
     */
    public function getRequireGs1128Label()
    {
        return $this->container['require_gs1128_label'];
    }

    /**
     * Sets require_gs1128_label
     *
     * @param bool $require_gs1128_label require_gs1128_label
     *
     * @return $this
     */
    public function setRequireGs1128Label($require_gs1128_label)
    {
        $this->container['require_gs1128_label'] = $require_gs1128_label;

        return $this;
    }

    /**
     * Gets shipping_notes
     *
     * @return string
     */
    public function getShippingNotes()
    {
        return $this->container['shipping_notes'];
    }

    /**
     * Sets shipping_notes
     *
     * @param string $shipping_notes shipping_notes
     *
     * @return $this
     */
    public function setShippingNotes($shipping_notes)
    {
        $this->container['shipping_notes'] = $shipping_notes;

        return $this;
    }

    /**
     * Gets packing_slip_id
     *
     * @return int
     */
    public function getPackingSlipId()
    {
        return $this->container['packing_slip_id'];
    }

    /**
     * Sets packing_slip_id
     *
     * @param int $packing_slip_id packing_slip_id
     *
     * @return $this
     */
    public function setPackingSlipId($packing_slip_id)
    {
        $this->container['packing_slip_id'] = $packing_slip_id;

        return $this;
    }

    /**
     * Gets order_invoice_id
     *
     * @return int
     */
    public function getOrderInvoiceId()
    {
        return $this->container['order_invoice_id'];
    }

    /**
     * Sets order_invoice_id
     *
     * @param int $order_invoice_id order_invoice_id
     *
     * @return $this
     */
    public function setOrderInvoiceId($order_invoice_id)
    {
        $this->container['order_invoice_id'] = $order_invoice_id;

        return $this;
    }

    /**
     * Gets order_confirmation_email_id
     *
     * @return int
     */
    public function getOrderConfirmationEmailId()
    {
        return $this->container['order_confirmation_email_id'];
    }

    /**
     * Sets order_confirmation_email_id
     *
     * @param int $order_confirmation_email_id order_confirmation_email_id
     *
     * @return $this
     */
    public function setOrderConfirmationEmailId($order_confirmation_email_id)
    {
        $this->container['order_confirmation_email_id'] = $order_confirmation_email_id;

        return $this;
    }

    /**
     * Gets shipment_confirmation_email_id
     *
     * @return int
     */
    public function getShipmentConfirmationEmailId()
    {
        return $this->container['shipment_confirmation_email_id'];
    }

    /**
     * Sets shipment_confirmation_email_id
     *
     * @param int $shipment_confirmation_email_id shipment_confirmation_email_id
     *
     * @return $this
     */
    public function setShipmentConfirmationEmailId($shipment_confirmation_email_id)
    {
        $this->container['shipment_confirmation_email_id'] = $shipment_confirmation_email_id;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


