<?php
/**
 * InvoiceWorksheetLine
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * InvoiceWorksheetLine Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvoiceWorksheetLine implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'invoiceWorksheetLine';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'lob_id' => 'int',
        'seq_no' => 'int',
        'description' => 'string',
        'account_code' => 'string',
        'department' => 'string',
        'item_code' => 'string',
        'quantity' => 'float',
        'charge_rate' => 'float',
        'extended_charge' => 'float',
        'backup_file' => 'int',
        'backup_document' => 'string',
        'invoice_worksheet_id' => 'int',
        'invoice_template_line_id' => 'int',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'create_date' => 'date-time',
        'modify_date' => 'date-time',
        'lob_id' => 'int32',
        'seq_no' => 'int32',
        'description' => null,
        'account_code' => null,
        'department' => null,
        'item_code' => null,
        'quantity' => null,
        'charge_rate' => null,
        'extended_charge' => null,
        'backup_file' => 'int32',
        'backup_document' => null,
        'invoice_worksheet_id' => 'int32',
        'invoice_template_line_id' => 'int32',
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'lob_id' => 'lobId',
        'seq_no' => 'seqNo',
        'description' => 'description',
        'account_code' => 'accountCode',
        'department' => 'department',
        'item_code' => 'itemCode',
        'quantity' => 'quantity',
        'charge_rate' => 'chargeRate',
        'extended_charge' => 'extendedCharge',
        'backup_file' => 'backupFile',
        'backup_document' => 'backupDocument',
        'invoice_worksheet_id' => 'invoiceWorksheetId',
        'invoice_template_line_id' => 'invoiceTemplateLineId',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'lob_id' => 'setLobId',
        'seq_no' => 'setSeqNo',
        'description' => 'setDescription',
        'account_code' => 'setAccountCode',
        'department' => 'setDepartment',
        'item_code' => 'setItemCode',
        'quantity' => 'setQuantity',
        'charge_rate' => 'setChargeRate',
        'extended_charge' => 'setExtendedCharge',
        'backup_file' => 'setBackupFile',
        'backup_document' => 'setBackupDocument',
        'invoice_worksheet_id' => 'setInvoiceWorksheetId',
        'invoice_template_line_id' => 'setInvoiceTemplateLineId',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'lob_id' => 'getLobId',
        'seq_no' => 'getSeqNo',
        'description' => 'getDescription',
        'account_code' => 'getAccountCode',
        'department' => 'getDepartment',
        'item_code' => 'getItemCode',
        'quantity' => 'getQuantity',
        'charge_rate' => 'getChargeRate',
        'extended_charge' => 'getExtendedCharge',
        'backup_file' => 'getBackupFile',
        'backup_document' => 'getBackupDocument',
        'invoice_worksheet_id' => 'getInvoiceWorksheetId',
        'invoice_template_line_id' => 'getInvoiceTemplateLineId',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['seq_no'] = isset($data['seq_no']) ? $data['seq_no'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['account_code'] = isset($data['account_code']) ? $data['account_code'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['item_code'] = isset($data['item_code']) ? $data['item_code'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['charge_rate'] = isset($data['charge_rate']) ? $data['charge_rate'] : null;
        $this->container['extended_charge'] = isset($data['extended_charge']) ? $data['extended_charge'] : null;
        $this->container['backup_file'] = isset($data['backup_file']) ? $data['backup_file'] : null;
        $this->container['backup_document'] = isset($data['backup_document']) ? $data['backup_document'] : null;
        $this->container['invoice_worksheet_id'] = isset($data['invoice_worksheet_id']) ? $data['invoice_worksheet_id'] : null;
        $this->container['invoice_template_line_id'] = isset($data['invoice_template_line_id']) ? $data['invoice_template_line_id'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['lob_id'] === null) {
            $invalidProperties[] = "'lob_id' can't be null";
        }
        if ($this->container['invoice_worksheet_id'] === null) {
            $invalidProperties[] = "'invoice_worksheet_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['lob_id'] === null) {
            return false;
        }
        if ($this->container['invoice_worksheet_id'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets seq_no
     *
     * @return int
     */
    public function getSeqNo()
    {
        return $this->container['seq_no'];
    }

    /**
     * Sets seq_no
     *
     * @param int $seq_no seq_no
     *
     * @return $this
     */
    public function setSeqNo($seq_no)
    {
        $this->container['seq_no'] = $seq_no;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets account_code
     *
     * @return string
     */
    public function getAccountCode()
    {
        return $this->container['account_code'];
    }

    /**
     * Sets account_code
     *
     * @param string $account_code account_code
     *
     * @return $this
     */
    public function setAccountCode($account_code)
    {
        $this->container['account_code'] = $account_code;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department department
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets item_code
     *
     * @return string
     */
    public function getItemCode()
    {
        return $this->container['item_code'];
    }

    /**
     * Sets item_code
     *
     * @param string $item_code item_code
     *
     * @return $this
     */
    public function setItemCode($item_code)
    {
        $this->container['item_code'] = $item_code;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return float
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param float $quantity quantity
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets charge_rate
     *
     * @return float
     */
    public function getChargeRate()
    {
        return $this->container['charge_rate'];
    }

    /**
     * Sets charge_rate
     *
     * @param float $charge_rate charge_rate
     *
     * @return $this
     */
    public function setChargeRate($charge_rate)
    {
        $this->container['charge_rate'] = $charge_rate;

        return $this;
    }

    /**
     * Gets extended_charge
     *
     * @return float
     */
    public function getExtendedCharge()
    {
        return $this->container['extended_charge'];
    }

    /**
     * Sets extended_charge
     *
     * @param float $extended_charge extended_charge
     *
     * @return $this
     */
    public function setExtendedCharge($extended_charge)
    {
        $this->container['extended_charge'] = $extended_charge;

        return $this;
    }

    /**
     * Gets backup_file
     *
     * @return int
     */
    public function getBackupFile()
    {
        return $this->container['backup_file'];
    }

    /**
     * Sets backup_file
     *
     * @param int $backup_file backup_file
     *
     * @return $this
     */
    public function setBackupFile($backup_file)
    {
        $this->container['backup_file'] = $backup_file;

        return $this;
    }

    /**
     * Gets backup_document
     *
     * @return string
     */
    public function getBackupDocument()
    {
        return $this->container['backup_document'];
    }

    /**
     * Sets backup_document
     *
     * @param string $backup_document backup_document
     *
     * @return $this
     */
    public function setBackupDocument($backup_document)
    {
        $this->container['backup_document'] = $backup_document;

        return $this;
    }

    /**
     * Gets invoice_worksheet_id
     *
     * @return int
     */
    public function getInvoiceWorksheetId()
    {
        return $this->container['invoice_worksheet_id'];
    }

    /**
     * Sets invoice_worksheet_id
     *
     * @param int $invoice_worksheet_id invoice_worksheet_id
     *
     * @return $this
     */
    public function setInvoiceWorksheetId($invoice_worksheet_id)
    {
        $this->container['invoice_worksheet_id'] = $invoice_worksheet_id;

        return $this;
    }

    /**
     * Gets invoice_template_line_id
     *
     * @return int
     */
    public function getInvoiceTemplateLineId()
    {
        return $this->container['invoice_template_line_id'];
    }

    /**
     * Sets invoice_template_line_id
     *
     * @param int $invoice_template_line_id invoice_template_line_id
     *
     * @return $this
     */
    public function setInvoiceTemplateLineId($invoice_template_line_id)
    {
        $this->container['invoice_template_line_id'] = $invoice_template_line_id;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


