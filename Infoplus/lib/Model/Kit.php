<?php
/**
 * Kit
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Model;

use \ArrayAccess;
/**
 * Kit Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Infoplus
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Kit implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'lob_id' => 'int',
        'id' => 'int',
        'kit_sku' => 'string',
        'packaging_type' => 'string',
        'other' => 'string',
        'number_of_components' => 'int',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'line1' => 'string',
        'line2' => 'string',
        'line3' => 'string',
        'line4' => 'string',
        'line5' => 'string',
        'line6' => 'string',
        'line7' => 'string',
        'line8' => 'string',
        'touches' => 'int',
        'min_inv_qty' => 'int',
        'mid_inv_qty' => 'int',
        'max_inv_qty' => 'int',
        'is_kod' => 'string',
        'kod_type' => 'string',
        'kit_component_list' => '\Infoplus\Model\KitComponent[]',
        'custom_fields' => 'map[string,object]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'lob_id' => 'lobId',
        'id' => 'id',
        'kit_sku' => 'kitSKU',
        'packaging_type' => 'packagingType',
        'other' => 'other',
        'number_of_components' => 'numberOfComponents',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'line1' => 'line1',
        'line2' => 'line2',
        'line3' => 'line3',
        'line4' => 'line4',
        'line5' => 'line5',
        'line6' => 'line6',
        'line7' => 'line7',
        'line8' => 'line8',
        'touches' => 'touches',
        'min_inv_qty' => 'minInvQty',
        'mid_inv_qty' => 'midInvQty',
        'max_inv_qty' => 'maxInvQty',
        'is_kod' => 'isKOD',
        'kod_type' => 'kodType',
        'kit_component_list' => 'kitComponentList',
        'custom_fields' => 'customFields'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'lob_id' => 'setLobId',
        'id' => 'setId',
        'kit_sku' => 'setKitSku',
        'packaging_type' => 'setPackagingType',
        'other' => 'setOther',
        'number_of_components' => 'setNumberOfComponents',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'line1' => 'setLine1',
        'line2' => 'setLine2',
        'line3' => 'setLine3',
        'line4' => 'setLine4',
        'line5' => 'setLine5',
        'line6' => 'setLine6',
        'line7' => 'setLine7',
        'line8' => 'setLine8',
        'touches' => 'setTouches',
        'min_inv_qty' => 'setMinInvQty',
        'mid_inv_qty' => 'setMidInvQty',
        'max_inv_qty' => 'setMaxInvQty',
        'is_kod' => 'setIsKod',
        'kod_type' => 'setKodType',
        'kit_component_list' => 'setKitComponentList',
        'custom_fields' => 'setCustomFields'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'lob_id' => 'getLobId',
        'id' => 'getId',
        'kit_sku' => 'getKitSku',
        'packaging_type' => 'getPackagingType',
        'other' => 'getOther',
        'number_of_components' => 'getNumberOfComponents',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'line1' => 'getLine1',
        'line2' => 'getLine2',
        'line3' => 'getLine3',
        'line4' => 'getLine4',
        'line5' => 'getLine5',
        'line6' => 'getLine6',
        'line7' => 'getLine7',
        'line8' => 'getLine8',
        'touches' => 'getTouches',
        'min_inv_qty' => 'getMinInvQty',
        'mid_inv_qty' => 'getMidInvQty',
        'max_inv_qty' => 'getMaxInvQty',
        'is_kod' => 'getIsKod',
        'kod_type' => 'getKodType',
        'kit_component_list' => 'getKitComponentList',
        'custom_fields' => 'getCustomFields'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $lob_id 
      * @var int
      */
    protected $lob_id;
    
    /**
      * $id 
      * @var int
      */
    protected $id;
    
    /**
      * $kit_sku 
      * @var string
      */
    protected $kit_sku;
    
    /**
      * $packaging_type 
      * @var string
      */
    protected $packaging_type;
    
    /**
      * $other 
      * @var string
      */
    protected $other;
    
    /**
      * $number_of_components 
      * @var int
      */
    protected $number_of_components;
    
    /**
      * $create_date 
      * @var \DateTime
      */
    protected $create_date;
    
    /**
      * $modify_date 
      * @var \DateTime
      */
    protected $modify_date;
    
    /**
      * $line1 
      * @var string
      */
    protected $line1;
    
    /**
      * $line2 
      * @var string
      */
    protected $line2;
    
    /**
      * $line3 
      * @var string
      */
    protected $line3;
    
    /**
      * $line4 
      * @var string
      */
    protected $line4;
    
    /**
      * $line5 
      * @var string
      */
    protected $line5;
    
    /**
      * $line6 
      * @var string
      */
    protected $line6;
    
    /**
      * $line7 
      * @var string
      */
    protected $line7;
    
    /**
      * $line8 
      * @var string
      */
    protected $line8;
    
    /**
      * $touches 
      * @var int
      */
    protected $touches;
    
    /**
      * $min_inv_qty 
      * @var int
      */
    protected $min_inv_qty;
    
    /**
      * $mid_inv_qty 
      * @var int
      */
    protected $mid_inv_qty;
    
    /**
      * $max_inv_qty 
      * @var int
      */
    protected $max_inv_qty;
    
    /**
      * $is_kod 
      * @var string
      */
    protected $is_kod;
    
    /**
      * $kod_type 
      * @var string
      */
    protected $kod_type;
    
    /**
      * $kit_component_list 
      * @var \Infoplus\Model\KitComponent[]
      */
    protected $kit_component_list;
    
    /**
      * $custom_fields 
      * @var map[string,object]
      */
    protected $custom_fields;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->lob_id = $data["lob_id"];
            $this->id = $data["id"];
            $this->kit_sku = $data["kit_sku"];
            $this->packaging_type = $data["packaging_type"];
            $this->other = $data["other"];
            $this->number_of_components = $data["number_of_components"];
            $this->create_date = $data["create_date"];
            $this->modify_date = $data["modify_date"];
            $this->line1 = $data["line1"];
            $this->line2 = $data["line2"];
            $this->line3 = $data["line3"];
            $this->line4 = $data["line4"];
            $this->line5 = $data["line5"];
            $this->line6 = $data["line6"];
            $this->line7 = $data["line7"];
            $this->line8 = $data["line8"];
            $this->touches = $data["touches"];
            $this->min_inv_qty = $data["min_inv_qty"];
            $this->mid_inv_qty = $data["mid_inv_qty"];
            $this->max_inv_qty = $data["max_inv_qty"];
            $this->is_kod = $data["is_kod"];
            $this->kod_type = $data["kod_type"];
            $this->kit_component_list = $data["kit_component_list"];
            $this->custom_fields = $data["custom_fields"];
        }
    }
    
    /**
     * Gets lob_id
     * @return int
     */
    public function getLobId()
    {
        return $this->lob_id;
    }
  
    /**
     * Sets lob_id
     * @param int $lob_id 
     * @return $this
     */
    public function setLobId($lob_id)
    {
        
        $this->lob_id = $lob_id;
        return $this;
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets kit_sku
     * @return string
     */
    public function getKitSku()
    {
        return $this->kit_sku;
    }
  
    /**
     * Sets kit_sku
     * @param string $kit_sku 
     * @return $this
     */
    public function setKitSku($kit_sku)
    {
        
        $this->kit_sku = $kit_sku;
        return $this;
    }
    
    /**
     * Gets packaging_type
     * @return string
     */
    public function getPackagingType()
    {
        return $this->packaging_type;
    }
  
    /**
     * Sets packaging_type
     * @param string $packaging_type 
     * @return $this
     */
    public function setPackagingType($packaging_type)
    {
        
        $this->packaging_type = $packaging_type;
        return $this;
    }
    
    /**
     * Gets other
     * @return string
     */
    public function getOther()
    {
        return $this->other;
    }
  
    /**
     * Sets other
     * @param string $other 
     * @return $this
     */
    public function setOther($other)
    {
        
        $this->other = $other;
        return $this;
    }
    
    /**
     * Gets number_of_components
     * @return int
     */
    public function getNumberOfComponents()
    {
        return $this->number_of_components;
    }
  
    /**
     * Sets number_of_components
     * @param int $number_of_components 
     * @return $this
     */
    public function setNumberOfComponents($number_of_components)
    {
        
        $this->number_of_components = $number_of_components;
        return $this;
    }
    
    /**
     * Gets create_date
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->create_date;
    }
  
    /**
     * Sets create_date
     * @param \DateTime $create_date 
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        
        $this->create_date = $create_date;
        return $this;
    }
    
    /**
     * Gets modify_date
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->modify_date;
    }
  
    /**
     * Sets modify_date
     * @param \DateTime $modify_date 
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        
        $this->modify_date = $modify_date;
        return $this;
    }
    
    /**
     * Gets line1
     * @return string
     */
    public function getLine1()
    {
        return $this->line1;
    }
  
    /**
     * Sets line1
     * @param string $line1 
     * @return $this
     */
    public function setLine1($line1)
    {
        
        $this->line1 = $line1;
        return $this;
    }
    
    /**
     * Gets line2
     * @return string
     */
    public function getLine2()
    {
        return $this->line2;
    }
  
    /**
     * Sets line2
     * @param string $line2 
     * @return $this
     */
    public function setLine2($line2)
    {
        
        $this->line2 = $line2;
        return $this;
    }
    
    /**
     * Gets line3
     * @return string
     */
    public function getLine3()
    {
        return $this->line3;
    }
  
    /**
     * Sets line3
     * @param string $line3 
     * @return $this
     */
    public function setLine3($line3)
    {
        
        $this->line3 = $line3;
        return $this;
    }
    
    /**
     * Gets line4
     * @return string
     */
    public function getLine4()
    {
        return $this->line4;
    }
  
    /**
     * Sets line4
     * @param string $line4 
     * @return $this
     */
    public function setLine4($line4)
    {
        
        $this->line4 = $line4;
        return $this;
    }
    
    /**
     * Gets line5
     * @return string
     */
    public function getLine5()
    {
        return $this->line5;
    }
  
    /**
     * Sets line5
     * @param string $line5 
     * @return $this
     */
    public function setLine5($line5)
    {
        
        $this->line5 = $line5;
        return $this;
    }
    
    /**
     * Gets line6
     * @return string
     */
    public function getLine6()
    {
        return $this->line6;
    }
  
    /**
     * Sets line6
     * @param string $line6 
     * @return $this
     */
    public function setLine6($line6)
    {
        
        $this->line6 = $line6;
        return $this;
    }
    
    /**
     * Gets line7
     * @return string
     */
    public function getLine7()
    {
        return $this->line7;
    }
  
    /**
     * Sets line7
     * @param string $line7 
     * @return $this
     */
    public function setLine7($line7)
    {
        
        $this->line7 = $line7;
        return $this;
    }
    
    /**
     * Gets line8
     * @return string
     */
    public function getLine8()
    {
        return $this->line8;
    }
  
    /**
     * Sets line8
     * @param string $line8 
     * @return $this
     */
    public function setLine8($line8)
    {
        
        $this->line8 = $line8;
        return $this;
    }
    
    /**
     * Gets touches
     * @return int
     */
    public function getTouches()
    {
        return $this->touches;
    }
  
    /**
     * Sets touches
     * @param int $touches 
     * @return $this
     */
    public function setTouches($touches)
    {
        
        $this->touches = $touches;
        return $this;
    }
    
    /**
     * Gets min_inv_qty
     * @return int
     */
    public function getMinInvQty()
    {
        return $this->min_inv_qty;
    }
  
    /**
     * Sets min_inv_qty
     * @param int $min_inv_qty 
     * @return $this
     */
    public function setMinInvQty($min_inv_qty)
    {
        
        $this->min_inv_qty = $min_inv_qty;
        return $this;
    }
    
    /**
     * Gets mid_inv_qty
     * @return int
     */
    public function getMidInvQty()
    {
        return $this->mid_inv_qty;
    }
  
    /**
     * Sets mid_inv_qty
     * @param int $mid_inv_qty 
     * @return $this
     */
    public function setMidInvQty($mid_inv_qty)
    {
        
        $this->mid_inv_qty = $mid_inv_qty;
        return $this;
    }
    
    /**
     * Gets max_inv_qty
     * @return int
     */
    public function getMaxInvQty()
    {
        return $this->max_inv_qty;
    }
  
    /**
     * Sets max_inv_qty
     * @param int $max_inv_qty 
     * @return $this
     */
    public function setMaxInvQty($max_inv_qty)
    {
        
        $this->max_inv_qty = $max_inv_qty;
        return $this;
    }
    
    /**
     * Gets is_kod
     * @return string
     */
    public function getIsKod()
    {
        return $this->is_kod;
    }
  
    /**
     * Sets is_kod
     * @param string $is_kod 
     * @return $this
     */
    public function setIsKod($is_kod)
    {
        
        $this->is_kod = $is_kod;
        return $this;
    }
    
    /**
     * Gets kod_type
     * @return string
     */
    public function getKodType()
    {
        return $this->kod_type;
    }
  
    /**
     * Sets kod_type
     * @param string $kod_type 
     * @return $this
     */
    public function setKodType($kod_type)
    {
        
        $this->kod_type = $kod_type;
        return $this;
    }
    
    /**
     * Gets kit_component_list
     * @return \Infoplus\Model\KitComponent[]
     */
    public function getKitComponentList()
    {
        return $this->kit_component_list;
    }
  
    /**
     * Sets kit_component_list
     * @param \Infoplus\Model\KitComponent[] $kit_component_list 
     * @return $this
     */
    public function setKitComponentList($kit_component_list)
    {
        
        $this->kit_component_list = $kit_component_list;
        return $this;
    }
    
    /**
     * Gets custom_fields
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->custom_fields;
    }
  
    /**
     * Sets custom_fields
     * @param map[string,object] $custom_fields 
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        
        $this->custom_fields = $custom_fields;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Infoplus\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
