<?php
/**
 * WarehouseInventory
 *
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Infoplus\Infoplus\Model;

use \ArrayAccess;
use \Infoplus\ObjectSerializer;

/**
 * WarehouseInventory Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WarehouseInventory implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'warehouseInventory';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'sku' => 'string',
        'lob_id' => 'int',
        'warehouse_id' => 'int',
        'on_hand_quantity' => 'int',
        'unavailable_quantity' => 'int',
        'open_po_quantity' => 'int',
        'open_order_quantity' => 'int',
        'available_quantity' => 'int',
        'damaged_quantity' => 'int',
        'in_fulfillment_process_quantity' => 'int',
        'orderable_quantity' => 'int',
        'unallocatable_quantity' => 'int',
        'days_on_hand' => 'int',
        'stock_status' => 'string',
        'available_quantity_cases' => 'int',
        'available_quantity_inner_packs' => 'int',
        'available_quantity_pallets' => 'int',
        'damaged_quantity_cases' => 'int',
        'damaged_quantity_inner_packs' => 'int',
        'damaged_quantity_pallets' => 'int',
        'in_fulfillment_process_quantity_cases' => 'int',
        'in_fulfillment_process_quantity_inner_packs' => 'int',
        'in_fulfillment_process_quantity_pallets' => 'int',
        'on_hand_quantity_cases' => 'int',
        'on_hand_quantity_inner_packs' => 'int',
        'on_hand_quantity_pallets' => 'int',
        'open_order_quantity_cases' => 'int',
        'open_order_quantity_inner_packs' => 'int',
        'open_order_quantity_pallets' => 'int',
        'open_po_quantity_cases' => 'int',
        'open_po_quantity_inner_packs' => 'int',
        'open_po_quantity_pallets' => 'int',
        'orderable_quantity_cases' => 'int',
        'orderable_quantity_inner_packs' => 'int',
        'orderable_quantity_pallets' => 'int',
        'unallocatable_quantity_cases' => 'int',
        'unallocatable_quantity_inner_packs' => 'int',
        'unallocatable_quantity_pallets' => 'int',
        'unavailable_quantity_cases' => 'int',
        'unavailable_quantity_inner_packs' => 'int',
        'unavailable_quantity_pallets' => 'int',
        'total_demand' => 'int',
        'next_request_delivery_date' => '\DateTime',
        'create_date' => '\DateTime',
        'modify_date' => '\DateTime',
        'custom_fields' => 'map[string,object]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int32',
        'sku' => null,
        'lob_id' => 'int32',
        'warehouse_id' => 'int32',
        'on_hand_quantity' => 'int32',
        'unavailable_quantity' => 'int32',
        'open_po_quantity' => 'int32',
        'open_order_quantity' => 'int32',
        'available_quantity' => 'int32',
        'damaged_quantity' => 'int32',
        'in_fulfillment_process_quantity' => 'int32',
        'orderable_quantity' => 'int32',
        'unallocatable_quantity' => 'int32',
        'days_on_hand' => 'int32',
        'stock_status' => null,
        'available_quantity_cases' => 'int32',
        'available_quantity_inner_packs' => 'int32',
        'available_quantity_pallets' => 'int32',
        'damaged_quantity_cases' => 'int32',
        'damaged_quantity_inner_packs' => 'int32',
        'damaged_quantity_pallets' => 'int32',
        'in_fulfillment_process_quantity_cases' => 'int32',
        'in_fulfillment_process_quantity_inner_packs' => 'int32',
        'in_fulfillment_process_quantity_pallets' => 'int32',
        'on_hand_quantity_cases' => 'int32',
        'on_hand_quantity_inner_packs' => 'int32',
        'on_hand_quantity_pallets' => 'int32',
        'open_order_quantity_cases' => 'int32',
        'open_order_quantity_inner_packs' => 'int32',
        'open_order_quantity_pallets' => 'int32',
        'open_po_quantity_cases' => 'int32',
        'open_po_quantity_inner_packs' => 'int32',
        'open_po_quantity_pallets' => 'int32',
        'orderable_quantity_cases' => 'int32',
        'orderable_quantity_inner_packs' => 'int32',
        'orderable_quantity_pallets' => 'int32',
        'unallocatable_quantity_cases' => 'int32',
        'unallocatable_quantity_inner_packs' => 'int32',
        'unallocatable_quantity_pallets' => 'int32',
        'unavailable_quantity_cases' => 'int32',
        'unavailable_quantity_inner_packs' => 'int32',
        'unavailable_quantity_pallets' => 'int32',
        'total_demand' => 'int32',
        'next_request_delivery_date' => 'date-time',
        'create_date' => 'date-time',
        'modify_date' => 'date-time',
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'sku' => 'sku',
        'lob_id' => 'lobId',
        'warehouse_id' => 'warehouseId',
        'on_hand_quantity' => 'onHandQuantity',
        'unavailable_quantity' => 'unavailableQuantity',
        'open_po_quantity' => 'openPOQuantity',
        'open_order_quantity' => 'openOrderQuantity',
        'available_quantity' => 'availableQuantity',
        'damaged_quantity' => 'damagedQuantity',
        'in_fulfillment_process_quantity' => 'inFulfillmentProcessQuantity',
        'orderable_quantity' => 'orderableQuantity',
        'unallocatable_quantity' => 'unallocatableQuantity',
        'days_on_hand' => 'daysOnHand',
        'stock_status' => 'stockStatus',
        'available_quantity_cases' => 'availableQuantityCases',
        'available_quantity_inner_packs' => 'availableQuantityInnerPacks',
        'available_quantity_pallets' => 'availableQuantityPallets',
        'damaged_quantity_cases' => 'damagedQuantityCases',
        'damaged_quantity_inner_packs' => 'damagedQuantityInnerPacks',
        'damaged_quantity_pallets' => 'damagedQuantityPallets',
        'in_fulfillment_process_quantity_cases' => 'inFulfillmentProcessQuantityCases',
        'in_fulfillment_process_quantity_inner_packs' => 'inFulfillmentProcessQuantityInnerPacks',
        'in_fulfillment_process_quantity_pallets' => 'inFulfillmentProcessQuantityPallets',
        'on_hand_quantity_cases' => 'onHandQuantityCases',
        'on_hand_quantity_inner_packs' => 'onHandQuantityInnerPacks',
        'on_hand_quantity_pallets' => 'onHandQuantityPallets',
        'open_order_quantity_cases' => 'openOrderQuantityCases',
        'open_order_quantity_inner_packs' => 'openOrderQuantityInnerPacks',
        'open_order_quantity_pallets' => 'openOrderQuantityPallets',
        'open_po_quantity_cases' => 'openPOQuantityCases',
        'open_po_quantity_inner_packs' => 'openPOQuantityInnerPacks',
        'open_po_quantity_pallets' => 'openPOQuantityPallets',
        'orderable_quantity_cases' => 'orderableQuantityCases',
        'orderable_quantity_inner_packs' => 'orderableQuantityInnerPacks',
        'orderable_quantity_pallets' => 'orderableQuantityPallets',
        'unallocatable_quantity_cases' => 'unallocatableQuantityCases',
        'unallocatable_quantity_inner_packs' => 'unallocatableQuantityInnerPacks',
        'unallocatable_quantity_pallets' => 'unallocatableQuantityPallets',
        'unavailable_quantity_cases' => 'unavailableQuantityCases',
        'unavailable_quantity_inner_packs' => 'unavailableQuantityInnerPacks',
        'unavailable_quantity_pallets' => 'unavailableQuantityPallets',
        'total_demand' => 'totalDemand',
        'next_request_delivery_date' => 'nextRequestDeliveryDate',
        'create_date' => 'createDate',
        'modify_date' => 'modifyDate',
        'custom_fields' => 'customFields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'sku' => 'setSku',
        'lob_id' => 'setLobId',
        'warehouse_id' => 'setWarehouseId',
        'on_hand_quantity' => 'setOnHandQuantity',
        'unavailable_quantity' => 'setUnavailableQuantity',
        'open_po_quantity' => 'setOpenPoQuantity',
        'open_order_quantity' => 'setOpenOrderQuantity',
        'available_quantity' => 'setAvailableQuantity',
        'damaged_quantity' => 'setDamagedQuantity',
        'in_fulfillment_process_quantity' => 'setInFulfillmentProcessQuantity',
        'orderable_quantity' => 'setOrderableQuantity',
        'unallocatable_quantity' => 'setUnallocatableQuantity',
        'days_on_hand' => 'setDaysOnHand',
        'stock_status' => 'setStockStatus',
        'available_quantity_cases' => 'setAvailableQuantityCases',
        'available_quantity_inner_packs' => 'setAvailableQuantityInnerPacks',
        'available_quantity_pallets' => 'setAvailableQuantityPallets',
        'damaged_quantity_cases' => 'setDamagedQuantityCases',
        'damaged_quantity_inner_packs' => 'setDamagedQuantityInnerPacks',
        'damaged_quantity_pallets' => 'setDamagedQuantityPallets',
        'in_fulfillment_process_quantity_cases' => 'setInFulfillmentProcessQuantityCases',
        'in_fulfillment_process_quantity_inner_packs' => 'setInFulfillmentProcessQuantityInnerPacks',
        'in_fulfillment_process_quantity_pallets' => 'setInFulfillmentProcessQuantityPallets',
        'on_hand_quantity_cases' => 'setOnHandQuantityCases',
        'on_hand_quantity_inner_packs' => 'setOnHandQuantityInnerPacks',
        'on_hand_quantity_pallets' => 'setOnHandQuantityPallets',
        'open_order_quantity_cases' => 'setOpenOrderQuantityCases',
        'open_order_quantity_inner_packs' => 'setOpenOrderQuantityInnerPacks',
        'open_order_quantity_pallets' => 'setOpenOrderQuantityPallets',
        'open_po_quantity_cases' => 'setOpenPoQuantityCases',
        'open_po_quantity_inner_packs' => 'setOpenPoQuantityInnerPacks',
        'open_po_quantity_pallets' => 'setOpenPoQuantityPallets',
        'orderable_quantity_cases' => 'setOrderableQuantityCases',
        'orderable_quantity_inner_packs' => 'setOrderableQuantityInnerPacks',
        'orderable_quantity_pallets' => 'setOrderableQuantityPallets',
        'unallocatable_quantity_cases' => 'setUnallocatableQuantityCases',
        'unallocatable_quantity_inner_packs' => 'setUnallocatableQuantityInnerPacks',
        'unallocatable_quantity_pallets' => 'setUnallocatableQuantityPallets',
        'unavailable_quantity_cases' => 'setUnavailableQuantityCases',
        'unavailable_quantity_inner_packs' => 'setUnavailableQuantityInnerPacks',
        'unavailable_quantity_pallets' => 'setUnavailableQuantityPallets',
        'total_demand' => 'setTotalDemand',
        'next_request_delivery_date' => 'setNextRequestDeliveryDate',
        'create_date' => 'setCreateDate',
        'modify_date' => 'setModifyDate',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'sku' => 'getSku',
        'lob_id' => 'getLobId',
        'warehouse_id' => 'getWarehouseId',
        'on_hand_quantity' => 'getOnHandQuantity',
        'unavailable_quantity' => 'getUnavailableQuantity',
        'open_po_quantity' => 'getOpenPoQuantity',
        'open_order_quantity' => 'getOpenOrderQuantity',
        'available_quantity' => 'getAvailableQuantity',
        'damaged_quantity' => 'getDamagedQuantity',
        'in_fulfillment_process_quantity' => 'getInFulfillmentProcessQuantity',
        'orderable_quantity' => 'getOrderableQuantity',
        'unallocatable_quantity' => 'getUnallocatableQuantity',
        'days_on_hand' => 'getDaysOnHand',
        'stock_status' => 'getStockStatus',
        'available_quantity_cases' => 'getAvailableQuantityCases',
        'available_quantity_inner_packs' => 'getAvailableQuantityInnerPacks',
        'available_quantity_pallets' => 'getAvailableQuantityPallets',
        'damaged_quantity_cases' => 'getDamagedQuantityCases',
        'damaged_quantity_inner_packs' => 'getDamagedQuantityInnerPacks',
        'damaged_quantity_pallets' => 'getDamagedQuantityPallets',
        'in_fulfillment_process_quantity_cases' => 'getInFulfillmentProcessQuantityCases',
        'in_fulfillment_process_quantity_inner_packs' => 'getInFulfillmentProcessQuantityInnerPacks',
        'in_fulfillment_process_quantity_pallets' => 'getInFulfillmentProcessQuantityPallets',
        'on_hand_quantity_cases' => 'getOnHandQuantityCases',
        'on_hand_quantity_inner_packs' => 'getOnHandQuantityInnerPacks',
        'on_hand_quantity_pallets' => 'getOnHandQuantityPallets',
        'open_order_quantity_cases' => 'getOpenOrderQuantityCases',
        'open_order_quantity_inner_packs' => 'getOpenOrderQuantityInnerPacks',
        'open_order_quantity_pallets' => 'getOpenOrderQuantityPallets',
        'open_po_quantity_cases' => 'getOpenPoQuantityCases',
        'open_po_quantity_inner_packs' => 'getOpenPoQuantityInnerPacks',
        'open_po_quantity_pallets' => 'getOpenPoQuantityPallets',
        'orderable_quantity_cases' => 'getOrderableQuantityCases',
        'orderable_quantity_inner_packs' => 'getOrderableQuantityInnerPacks',
        'orderable_quantity_pallets' => 'getOrderableQuantityPallets',
        'unallocatable_quantity_cases' => 'getUnallocatableQuantityCases',
        'unallocatable_quantity_inner_packs' => 'getUnallocatableQuantityInnerPacks',
        'unallocatable_quantity_pallets' => 'getUnallocatableQuantityPallets',
        'unavailable_quantity_cases' => 'getUnavailableQuantityCases',
        'unavailable_quantity_inner_packs' => 'getUnavailableQuantityInnerPacks',
        'unavailable_quantity_pallets' => 'getUnavailableQuantityPallets',
        'total_demand' => 'getTotalDemand',
        'next_request_delivery_date' => 'getNextRequestDeliveryDate',
        'create_date' => 'getCreateDate',
        'modify_date' => 'getModifyDate',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['sku'] = isset($data['sku']) ? $data['sku'] : null;
        $this->container['lob_id'] = isset($data['lob_id']) ? $data['lob_id'] : null;
        $this->container['warehouse_id'] = isset($data['warehouse_id']) ? $data['warehouse_id'] : null;
        $this->container['on_hand_quantity'] = isset($data['on_hand_quantity']) ? $data['on_hand_quantity'] : null;
        $this->container['unavailable_quantity'] = isset($data['unavailable_quantity']) ? $data['unavailable_quantity'] : null;
        $this->container['open_po_quantity'] = isset($data['open_po_quantity']) ? $data['open_po_quantity'] : null;
        $this->container['open_order_quantity'] = isset($data['open_order_quantity']) ? $data['open_order_quantity'] : null;
        $this->container['available_quantity'] = isset($data['available_quantity']) ? $data['available_quantity'] : null;
        $this->container['damaged_quantity'] = isset($data['damaged_quantity']) ? $data['damaged_quantity'] : null;
        $this->container['in_fulfillment_process_quantity'] = isset($data['in_fulfillment_process_quantity']) ? $data['in_fulfillment_process_quantity'] : null;
        $this->container['orderable_quantity'] = isset($data['orderable_quantity']) ? $data['orderable_quantity'] : null;
        $this->container['unallocatable_quantity'] = isset($data['unallocatable_quantity']) ? $data['unallocatable_quantity'] : null;
        $this->container['days_on_hand'] = isset($data['days_on_hand']) ? $data['days_on_hand'] : null;
        $this->container['stock_status'] = isset($data['stock_status']) ? $data['stock_status'] : null;
        $this->container['available_quantity_cases'] = isset($data['available_quantity_cases']) ? $data['available_quantity_cases'] : null;
        $this->container['available_quantity_inner_packs'] = isset($data['available_quantity_inner_packs']) ? $data['available_quantity_inner_packs'] : null;
        $this->container['available_quantity_pallets'] = isset($data['available_quantity_pallets']) ? $data['available_quantity_pallets'] : null;
        $this->container['damaged_quantity_cases'] = isset($data['damaged_quantity_cases']) ? $data['damaged_quantity_cases'] : null;
        $this->container['damaged_quantity_inner_packs'] = isset($data['damaged_quantity_inner_packs']) ? $data['damaged_quantity_inner_packs'] : null;
        $this->container['damaged_quantity_pallets'] = isset($data['damaged_quantity_pallets']) ? $data['damaged_quantity_pallets'] : null;
        $this->container['in_fulfillment_process_quantity_cases'] = isset($data['in_fulfillment_process_quantity_cases']) ? $data['in_fulfillment_process_quantity_cases'] : null;
        $this->container['in_fulfillment_process_quantity_inner_packs'] = isset($data['in_fulfillment_process_quantity_inner_packs']) ? $data['in_fulfillment_process_quantity_inner_packs'] : null;
        $this->container['in_fulfillment_process_quantity_pallets'] = isset($data['in_fulfillment_process_quantity_pallets']) ? $data['in_fulfillment_process_quantity_pallets'] : null;
        $this->container['on_hand_quantity_cases'] = isset($data['on_hand_quantity_cases']) ? $data['on_hand_quantity_cases'] : null;
        $this->container['on_hand_quantity_inner_packs'] = isset($data['on_hand_quantity_inner_packs']) ? $data['on_hand_quantity_inner_packs'] : null;
        $this->container['on_hand_quantity_pallets'] = isset($data['on_hand_quantity_pallets']) ? $data['on_hand_quantity_pallets'] : null;
        $this->container['open_order_quantity_cases'] = isset($data['open_order_quantity_cases']) ? $data['open_order_quantity_cases'] : null;
        $this->container['open_order_quantity_inner_packs'] = isset($data['open_order_quantity_inner_packs']) ? $data['open_order_quantity_inner_packs'] : null;
        $this->container['open_order_quantity_pallets'] = isset($data['open_order_quantity_pallets']) ? $data['open_order_quantity_pallets'] : null;
        $this->container['open_po_quantity_cases'] = isset($data['open_po_quantity_cases']) ? $data['open_po_quantity_cases'] : null;
        $this->container['open_po_quantity_inner_packs'] = isset($data['open_po_quantity_inner_packs']) ? $data['open_po_quantity_inner_packs'] : null;
        $this->container['open_po_quantity_pallets'] = isset($data['open_po_quantity_pallets']) ? $data['open_po_quantity_pallets'] : null;
        $this->container['orderable_quantity_cases'] = isset($data['orderable_quantity_cases']) ? $data['orderable_quantity_cases'] : null;
        $this->container['orderable_quantity_inner_packs'] = isset($data['orderable_quantity_inner_packs']) ? $data['orderable_quantity_inner_packs'] : null;
        $this->container['orderable_quantity_pallets'] = isset($data['orderable_quantity_pallets']) ? $data['orderable_quantity_pallets'] : null;
        $this->container['unallocatable_quantity_cases'] = isset($data['unallocatable_quantity_cases']) ? $data['unallocatable_quantity_cases'] : null;
        $this->container['unallocatable_quantity_inner_packs'] = isset($data['unallocatable_quantity_inner_packs']) ? $data['unallocatable_quantity_inner_packs'] : null;
        $this->container['unallocatable_quantity_pallets'] = isset($data['unallocatable_quantity_pallets']) ? $data['unallocatable_quantity_pallets'] : null;
        $this->container['unavailable_quantity_cases'] = isset($data['unavailable_quantity_cases']) ? $data['unavailable_quantity_cases'] : null;
        $this->container['unavailable_quantity_inner_packs'] = isset($data['unavailable_quantity_inner_packs']) ? $data['unavailable_quantity_inner_packs'] : null;
        $this->container['unavailable_quantity_pallets'] = isset($data['unavailable_quantity_pallets']) ? $data['unavailable_quantity_pallets'] : null;
        $this->container['total_demand'] = isset($data['total_demand']) ? $data['total_demand'] : null;
        $this->container['next_request_delivery_date'] = isset($data['next_request_delivery_date']) ? $data['next_request_delivery_date'] : null;
        $this->container['create_date'] = isset($data['create_date']) ? $data['create_date'] : null;
        $this->container['modify_date'] = isset($data['modify_date']) ? $data['modify_date'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets sku
     *
     * @return string
     */
    public function getSku()
    {
        return $this->container['sku'];
    }

    /**
     * Sets sku
     *
     * @param string $sku sku
     *
     * @return $this
     */
    public function setSku($sku)
    {
        $this->container['sku'] = $sku;

        return $this;
    }

    /**
     * Gets lob_id
     *
     * @return int
     */
    public function getLobId()
    {
        return $this->container['lob_id'];
    }

    /**
     * Sets lob_id
     *
     * @param int $lob_id lob_id
     *
     * @return $this
     */
    public function setLobId($lob_id)
    {
        $this->container['lob_id'] = $lob_id;

        return $this;
    }

    /**
     * Gets warehouse_id
     *
     * @return int
     */
    public function getWarehouseId()
    {
        return $this->container['warehouse_id'];
    }

    /**
     * Sets warehouse_id
     *
     * @param int $warehouse_id warehouse_id
     *
     * @return $this
     */
    public function setWarehouseId($warehouse_id)
    {
        $this->container['warehouse_id'] = $warehouse_id;

        return $this;
    }

    /**
     * Gets on_hand_quantity
     *
     * @return int
     */
    public function getOnHandQuantity()
    {
        return $this->container['on_hand_quantity'];
    }

    /**
     * Sets on_hand_quantity
     *
     * @param int $on_hand_quantity on_hand_quantity
     *
     * @return $this
     */
    public function setOnHandQuantity($on_hand_quantity)
    {
        $this->container['on_hand_quantity'] = $on_hand_quantity;

        return $this;
    }

    /**
     * Gets unavailable_quantity
     *
     * @return int
     */
    public function getUnavailableQuantity()
    {
        return $this->container['unavailable_quantity'];
    }

    /**
     * Sets unavailable_quantity
     *
     * @param int $unavailable_quantity unavailable_quantity
     *
     * @return $this
     */
    public function setUnavailableQuantity($unavailable_quantity)
    {
        $this->container['unavailable_quantity'] = $unavailable_quantity;

        return $this;
    }

    /**
     * Gets open_po_quantity
     *
     * @return int
     */
    public function getOpenPoQuantity()
    {
        return $this->container['open_po_quantity'];
    }

    /**
     * Sets open_po_quantity
     *
     * @param int $open_po_quantity open_po_quantity
     *
     * @return $this
     */
    public function setOpenPoQuantity($open_po_quantity)
    {
        $this->container['open_po_quantity'] = $open_po_quantity;

        return $this;
    }

    /**
     * Gets open_order_quantity
     *
     * @return int
     */
    public function getOpenOrderQuantity()
    {
        return $this->container['open_order_quantity'];
    }

    /**
     * Sets open_order_quantity
     *
     * @param int $open_order_quantity open_order_quantity
     *
     * @return $this
     */
    public function setOpenOrderQuantity($open_order_quantity)
    {
        $this->container['open_order_quantity'] = $open_order_quantity;

        return $this;
    }

    /**
     * Gets available_quantity
     *
     * @return int
     */
    public function getAvailableQuantity()
    {
        return $this->container['available_quantity'];
    }

    /**
     * Sets available_quantity
     *
     * @param int $available_quantity available_quantity
     *
     * @return $this
     */
    public function setAvailableQuantity($available_quantity)
    {
        $this->container['available_quantity'] = $available_quantity;

        return $this;
    }

    /**
     * Gets damaged_quantity
     *
     * @return int
     */
    public function getDamagedQuantity()
    {
        return $this->container['damaged_quantity'];
    }

    /**
     * Sets damaged_quantity
     *
     * @param int $damaged_quantity damaged_quantity
     *
     * @return $this
     */
    public function setDamagedQuantity($damaged_quantity)
    {
        $this->container['damaged_quantity'] = $damaged_quantity;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantity()
    {
        return $this->container['in_fulfillment_process_quantity'];
    }

    /**
     * Sets in_fulfillment_process_quantity
     *
     * @param int $in_fulfillment_process_quantity in_fulfillment_process_quantity
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantity($in_fulfillment_process_quantity)
    {
        $this->container['in_fulfillment_process_quantity'] = $in_fulfillment_process_quantity;

        return $this;
    }

    /**
     * Gets orderable_quantity
     *
     * @return int
     */
    public function getOrderableQuantity()
    {
        return $this->container['orderable_quantity'];
    }

    /**
     * Sets orderable_quantity
     *
     * @param int $orderable_quantity orderable_quantity
     *
     * @return $this
     */
    public function setOrderableQuantity($orderable_quantity)
    {
        $this->container['orderable_quantity'] = $orderable_quantity;

        return $this;
    }

    /**
     * Gets unallocatable_quantity
     *
     * @return int
     */
    public function getUnallocatableQuantity()
    {
        return $this->container['unallocatable_quantity'];
    }

    /**
     * Sets unallocatable_quantity
     *
     * @param int $unallocatable_quantity unallocatable_quantity
     *
     * @return $this
     */
    public function setUnallocatableQuantity($unallocatable_quantity)
    {
        $this->container['unallocatable_quantity'] = $unallocatable_quantity;

        return $this;
    }

    /**
     * Gets days_on_hand
     *
     * @return int
     */
    public function getDaysOnHand()
    {
        return $this->container['days_on_hand'];
    }

    /**
     * Sets days_on_hand
     *
     * @param int $days_on_hand days_on_hand
     *
     * @return $this
     */
    public function setDaysOnHand($days_on_hand)
    {
        $this->container['days_on_hand'] = $days_on_hand;

        return $this;
    }

    /**
     * Gets stock_status
     *
     * @return string
     */
    public function getStockStatus()
    {
        return $this->container['stock_status'];
    }

    /**
     * Sets stock_status
     *
     * @param string $stock_status stock_status
     *
     * @return $this
     */
    public function setStockStatus($stock_status)
    {
        $this->container['stock_status'] = $stock_status;

        return $this;
    }

    /**
     * Gets available_quantity_cases
     *
     * @return int
     */
    public function getAvailableQuantityCases()
    {
        return $this->container['available_quantity_cases'];
    }

    /**
     * Sets available_quantity_cases
     *
     * @param int $available_quantity_cases available_quantity_cases
     *
     * @return $this
     */
    public function setAvailableQuantityCases($available_quantity_cases)
    {
        $this->container['available_quantity_cases'] = $available_quantity_cases;

        return $this;
    }

    /**
     * Gets available_quantity_inner_packs
     *
     * @return int
     */
    public function getAvailableQuantityInnerPacks()
    {
        return $this->container['available_quantity_inner_packs'];
    }

    /**
     * Sets available_quantity_inner_packs
     *
     * @param int $available_quantity_inner_packs available_quantity_inner_packs
     *
     * @return $this
     */
    public function setAvailableQuantityInnerPacks($available_quantity_inner_packs)
    {
        $this->container['available_quantity_inner_packs'] = $available_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets available_quantity_pallets
     *
     * @return int
     */
    public function getAvailableQuantityPallets()
    {
        return $this->container['available_quantity_pallets'];
    }

    /**
     * Sets available_quantity_pallets
     *
     * @param int $available_quantity_pallets available_quantity_pallets
     *
     * @return $this
     */
    public function setAvailableQuantityPallets($available_quantity_pallets)
    {
        $this->container['available_quantity_pallets'] = $available_quantity_pallets;

        return $this;
    }

    /**
     * Gets damaged_quantity_cases
     *
     * @return int
     */
    public function getDamagedQuantityCases()
    {
        return $this->container['damaged_quantity_cases'];
    }

    /**
     * Sets damaged_quantity_cases
     *
     * @param int $damaged_quantity_cases damaged_quantity_cases
     *
     * @return $this
     */
    public function setDamagedQuantityCases($damaged_quantity_cases)
    {
        $this->container['damaged_quantity_cases'] = $damaged_quantity_cases;

        return $this;
    }

    /**
     * Gets damaged_quantity_inner_packs
     *
     * @return int
     */
    public function getDamagedQuantityInnerPacks()
    {
        return $this->container['damaged_quantity_inner_packs'];
    }

    /**
     * Sets damaged_quantity_inner_packs
     *
     * @param int $damaged_quantity_inner_packs damaged_quantity_inner_packs
     *
     * @return $this
     */
    public function setDamagedQuantityInnerPacks($damaged_quantity_inner_packs)
    {
        $this->container['damaged_quantity_inner_packs'] = $damaged_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets damaged_quantity_pallets
     *
     * @return int
     */
    public function getDamagedQuantityPallets()
    {
        return $this->container['damaged_quantity_pallets'];
    }

    /**
     * Sets damaged_quantity_pallets
     *
     * @param int $damaged_quantity_pallets damaged_quantity_pallets
     *
     * @return $this
     */
    public function setDamagedQuantityPallets($damaged_quantity_pallets)
    {
        $this->container['damaged_quantity_pallets'] = $damaged_quantity_pallets;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity_cases
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantityCases()
    {
        return $this->container['in_fulfillment_process_quantity_cases'];
    }

    /**
     * Sets in_fulfillment_process_quantity_cases
     *
     * @param int $in_fulfillment_process_quantity_cases in_fulfillment_process_quantity_cases
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantityCases($in_fulfillment_process_quantity_cases)
    {
        $this->container['in_fulfillment_process_quantity_cases'] = $in_fulfillment_process_quantity_cases;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity_inner_packs
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantityInnerPacks()
    {
        return $this->container['in_fulfillment_process_quantity_inner_packs'];
    }

    /**
     * Sets in_fulfillment_process_quantity_inner_packs
     *
     * @param int $in_fulfillment_process_quantity_inner_packs in_fulfillment_process_quantity_inner_packs
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantityInnerPacks($in_fulfillment_process_quantity_inner_packs)
    {
        $this->container['in_fulfillment_process_quantity_inner_packs'] = $in_fulfillment_process_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets in_fulfillment_process_quantity_pallets
     *
     * @return int
     */
    public function getInFulfillmentProcessQuantityPallets()
    {
        return $this->container['in_fulfillment_process_quantity_pallets'];
    }

    /**
     * Sets in_fulfillment_process_quantity_pallets
     *
     * @param int $in_fulfillment_process_quantity_pallets in_fulfillment_process_quantity_pallets
     *
     * @return $this
     */
    public function setInFulfillmentProcessQuantityPallets($in_fulfillment_process_quantity_pallets)
    {
        $this->container['in_fulfillment_process_quantity_pallets'] = $in_fulfillment_process_quantity_pallets;

        return $this;
    }

    /**
     * Gets on_hand_quantity_cases
     *
     * @return int
     */
    public function getOnHandQuantityCases()
    {
        return $this->container['on_hand_quantity_cases'];
    }

    /**
     * Sets on_hand_quantity_cases
     *
     * @param int $on_hand_quantity_cases on_hand_quantity_cases
     *
     * @return $this
     */
    public function setOnHandQuantityCases($on_hand_quantity_cases)
    {
        $this->container['on_hand_quantity_cases'] = $on_hand_quantity_cases;

        return $this;
    }

    /**
     * Gets on_hand_quantity_inner_packs
     *
     * @return int
     */
    public function getOnHandQuantityInnerPacks()
    {
        return $this->container['on_hand_quantity_inner_packs'];
    }

    /**
     * Sets on_hand_quantity_inner_packs
     *
     * @param int $on_hand_quantity_inner_packs on_hand_quantity_inner_packs
     *
     * @return $this
     */
    public function setOnHandQuantityInnerPacks($on_hand_quantity_inner_packs)
    {
        $this->container['on_hand_quantity_inner_packs'] = $on_hand_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets on_hand_quantity_pallets
     *
     * @return int
     */
    public function getOnHandQuantityPallets()
    {
        return $this->container['on_hand_quantity_pallets'];
    }

    /**
     * Sets on_hand_quantity_pallets
     *
     * @param int $on_hand_quantity_pallets on_hand_quantity_pallets
     *
     * @return $this
     */
    public function setOnHandQuantityPallets($on_hand_quantity_pallets)
    {
        $this->container['on_hand_quantity_pallets'] = $on_hand_quantity_pallets;

        return $this;
    }

    /**
     * Gets open_order_quantity_cases
     *
     * @return int
     */
    public function getOpenOrderQuantityCases()
    {
        return $this->container['open_order_quantity_cases'];
    }

    /**
     * Sets open_order_quantity_cases
     *
     * @param int $open_order_quantity_cases open_order_quantity_cases
     *
     * @return $this
     */
    public function setOpenOrderQuantityCases($open_order_quantity_cases)
    {
        $this->container['open_order_quantity_cases'] = $open_order_quantity_cases;

        return $this;
    }

    /**
     * Gets open_order_quantity_inner_packs
     *
     * @return int
     */
    public function getOpenOrderQuantityInnerPacks()
    {
        return $this->container['open_order_quantity_inner_packs'];
    }

    /**
     * Sets open_order_quantity_inner_packs
     *
     * @param int $open_order_quantity_inner_packs open_order_quantity_inner_packs
     *
     * @return $this
     */
    public function setOpenOrderQuantityInnerPacks($open_order_quantity_inner_packs)
    {
        $this->container['open_order_quantity_inner_packs'] = $open_order_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets open_order_quantity_pallets
     *
     * @return int
     */
    public function getOpenOrderQuantityPallets()
    {
        return $this->container['open_order_quantity_pallets'];
    }

    /**
     * Sets open_order_quantity_pallets
     *
     * @param int $open_order_quantity_pallets open_order_quantity_pallets
     *
     * @return $this
     */
    public function setOpenOrderQuantityPallets($open_order_quantity_pallets)
    {
        $this->container['open_order_quantity_pallets'] = $open_order_quantity_pallets;

        return $this;
    }

    /**
     * Gets open_po_quantity_cases
     *
     * @return int
     */
    public function getOpenPoQuantityCases()
    {
        return $this->container['open_po_quantity_cases'];
    }

    /**
     * Sets open_po_quantity_cases
     *
     * @param int $open_po_quantity_cases open_po_quantity_cases
     *
     * @return $this
     */
    public function setOpenPoQuantityCases($open_po_quantity_cases)
    {
        $this->container['open_po_quantity_cases'] = $open_po_quantity_cases;

        return $this;
    }

    /**
     * Gets open_po_quantity_inner_packs
     *
     * @return int
     */
    public function getOpenPoQuantityInnerPacks()
    {
        return $this->container['open_po_quantity_inner_packs'];
    }

    /**
     * Sets open_po_quantity_inner_packs
     *
     * @param int $open_po_quantity_inner_packs open_po_quantity_inner_packs
     *
     * @return $this
     */
    public function setOpenPoQuantityInnerPacks($open_po_quantity_inner_packs)
    {
        $this->container['open_po_quantity_inner_packs'] = $open_po_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets open_po_quantity_pallets
     *
     * @return int
     */
    public function getOpenPoQuantityPallets()
    {
        return $this->container['open_po_quantity_pallets'];
    }

    /**
     * Sets open_po_quantity_pallets
     *
     * @param int $open_po_quantity_pallets open_po_quantity_pallets
     *
     * @return $this
     */
    public function setOpenPoQuantityPallets($open_po_quantity_pallets)
    {
        $this->container['open_po_quantity_pallets'] = $open_po_quantity_pallets;

        return $this;
    }

    /**
     * Gets orderable_quantity_cases
     *
     * @return int
     */
    public function getOrderableQuantityCases()
    {
        return $this->container['orderable_quantity_cases'];
    }

    /**
     * Sets orderable_quantity_cases
     *
     * @param int $orderable_quantity_cases orderable_quantity_cases
     *
     * @return $this
     */
    public function setOrderableQuantityCases($orderable_quantity_cases)
    {
        $this->container['orderable_quantity_cases'] = $orderable_quantity_cases;

        return $this;
    }

    /**
     * Gets orderable_quantity_inner_packs
     *
     * @return int
     */
    public function getOrderableQuantityInnerPacks()
    {
        return $this->container['orderable_quantity_inner_packs'];
    }

    /**
     * Sets orderable_quantity_inner_packs
     *
     * @param int $orderable_quantity_inner_packs orderable_quantity_inner_packs
     *
     * @return $this
     */
    public function setOrderableQuantityInnerPacks($orderable_quantity_inner_packs)
    {
        $this->container['orderable_quantity_inner_packs'] = $orderable_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets orderable_quantity_pallets
     *
     * @return int
     */
    public function getOrderableQuantityPallets()
    {
        return $this->container['orderable_quantity_pallets'];
    }

    /**
     * Sets orderable_quantity_pallets
     *
     * @param int $orderable_quantity_pallets orderable_quantity_pallets
     *
     * @return $this
     */
    public function setOrderableQuantityPallets($orderable_quantity_pallets)
    {
        $this->container['orderable_quantity_pallets'] = $orderable_quantity_pallets;

        return $this;
    }

    /**
     * Gets unallocatable_quantity_cases
     *
     * @return int
     */
    public function getUnallocatableQuantityCases()
    {
        return $this->container['unallocatable_quantity_cases'];
    }

    /**
     * Sets unallocatable_quantity_cases
     *
     * @param int $unallocatable_quantity_cases unallocatable_quantity_cases
     *
     * @return $this
     */
    public function setUnallocatableQuantityCases($unallocatable_quantity_cases)
    {
        $this->container['unallocatable_quantity_cases'] = $unallocatable_quantity_cases;

        return $this;
    }

    /**
     * Gets unallocatable_quantity_inner_packs
     *
     * @return int
     */
    public function getUnallocatableQuantityInnerPacks()
    {
        return $this->container['unallocatable_quantity_inner_packs'];
    }

    /**
     * Sets unallocatable_quantity_inner_packs
     *
     * @param int $unallocatable_quantity_inner_packs unallocatable_quantity_inner_packs
     *
     * @return $this
     */
    public function setUnallocatableQuantityInnerPacks($unallocatable_quantity_inner_packs)
    {
        $this->container['unallocatable_quantity_inner_packs'] = $unallocatable_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets unallocatable_quantity_pallets
     *
     * @return int
     */
    public function getUnallocatableQuantityPallets()
    {
        return $this->container['unallocatable_quantity_pallets'];
    }

    /**
     * Sets unallocatable_quantity_pallets
     *
     * @param int $unallocatable_quantity_pallets unallocatable_quantity_pallets
     *
     * @return $this
     */
    public function setUnallocatableQuantityPallets($unallocatable_quantity_pallets)
    {
        $this->container['unallocatable_quantity_pallets'] = $unallocatable_quantity_pallets;

        return $this;
    }

    /**
     * Gets unavailable_quantity_cases
     *
     * @return int
     */
    public function getUnavailableQuantityCases()
    {
        return $this->container['unavailable_quantity_cases'];
    }

    /**
     * Sets unavailable_quantity_cases
     *
     * @param int $unavailable_quantity_cases unavailable_quantity_cases
     *
     * @return $this
     */
    public function setUnavailableQuantityCases($unavailable_quantity_cases)
    {
        $this->container['unavailable_quantity_cases'] = $unavailable_quantity_cases;

        return $this;
    }

    /**
     * Gets unavailable_quantity_inner_packs
     *
     * @return int
     */
    public function getUnavailableQuantityInnerPacks()
    {
        return $this->container['unavailable_quantity_inner_packs'];
    }

    /**
     * Sets unavailable_quantity_inner_packs
     *
     * @param int $unavailable_quantity_inner_packs unavailable_quantity_inner_packs
     *
     * @return $this
     */
    public function setUnavailableQuantityInnerPacks($unavailable_quantity_inner_packs)
    {
        $this->container['unavailable_quantity_inner_packs'] = $unavailable_quantity_inner_packs;

        return $this;
    }

    /**
     * Gets unavailable_quantity_pallets
     *
     * @return int
     */
    public function getUnavailableQuantityPallets()
    {
        return $this->container['unavailable_quantity_pallets'];
    }

    /**
     * Sets unavailable_quantity_pallets
     *
     * @param int $unavailable_quantity_pallets unavailable_quantity_pallets
     *
     * @return $this
     */
    public function setUnavailableQuantityPallets($unavailable_quantity_pallets)
    {
        $this->container['unavailable_quantity_pallets'] = $unavailable_quantity_pallets;

        return $this;
    }

    /**
     * Gets total_demand
     *
     * @return int
     */
    public function getTotalDemand()
    {
        return $this->container['total_demand'];
    }

    /**
     * Sets total_demand
     *
     * @param int $total_demand total_demand
     *
     * @return $this
     */
    public function setTotalDemand($total_demand)
    {
        $this->container['total_demand'] = $total_demand;

        return $this;
    }

    /**
     * Gets next_request_delivery_date
     *
     * @return \DateTime
     */
    public function getNextRequestDeliveryDate()
    {
        return $this->container['next_request_delivery_date'];
    }

    /**
     * Sets next_request_delivery_date
     *
     * @param \DateTime $next_request_delivery_date next_request_delivery_date
     *
     * @return $this
     */
    public function setNextRequestDeliveryDate($next_request_delivery_date)
    {
        $this->container['next_request_delivery_date'] = $next_request_delivery_date;

        return $this;
    }

    /**
     * Gets create_date
     *
     * @return \DateTime
     */
    public function getCreateDate()
    {
        return $this->container['create_date'];
    }

    /**
     * Sets create_date
     *
     * @param \DateTime $create_date create_date
     *
     * @return $this
     */
    public function setCreateDate($create_date)
    {
        $this->container['create_date'] = $create_date;

        return $this;
    }

    /**
     * Gets modify_date
     *
     * @return \DateTime
     */
    public function getModifyDate()
    {
        return $this->container['modify_date'];
    }

    /**
     * Sets modify_date
     *
     * @param \DateTime $modify_date modify_date
     *
     * @return $this
     */
    public function setModifyDate($modify_date)
    {
        $this->container['modify_date'] = $modify_date;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return map[string,object]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param map[string,object] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


