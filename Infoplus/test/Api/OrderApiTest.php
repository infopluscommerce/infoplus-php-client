<?php
/**
 * OrderApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Infoplus;

use \Infoplus\Configuration;
use \Infoplus\ApiException;
use \Infoplus\ObjectSerializer;

/**
 * OrderApiTest Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addOrder
     *
     * Create an order.
     *
     */
    public function testAddOrder()
    {
    }

    /**
     * Test case for addOrderAudit
     *
     * Add new audit for an order.
     *
     */
    public function testAddOrderAudit()
    {
    }

    /**
     * Test case for addOrderFile
     *
     * Attach a file to an order.
     *
     */
    public function testAddOrderFile()
    {
    }

    /**
     * Test case for addOrderFileByURL
     *
     * Attach a file to an order by URL..
     *
     */
    public function testAddOrderFileByURL()
    {
    }

    /**
     * Test case for addOrderTag
     *
     * Add new tags for an order..
     *
     */
    public function testAddOrderTag()
    {
    }

    /**
     * Test case for applyOrderWarehouseFulfillmentPlan
     *
     * Run the Apply Order Warehouse Fulfillment Plan method..
     *
     */
    public function testApplyOrderWarehouseFulfillmentPlan()
    {
    }

    /**
     * Test case for deleteOrder
     *
     * Delete an order.
     *
     */
    public function testDeleteOrder()
    {
    }

    /**
     * Test case for deleteOrderFile
     *
     * Delete a file for an order..
     *
     */
    public function testDeleteOrderFile()
    {
    }

    /**
     * Test case for deleteOrderTag
     *
     * Delete a tag for an order..
     *
     */
    public function testDeleteOrderTag()
    {
    }

    /**
     * Test case for editFulfillmentChannel
     *
     * Run the EditLineItemFulfillmentStrategy process..
     *
     */
    public function testEditFulfillmentChannel()
    {
    }

    /**
     * Test case for editLineItems
     *
     * Run the ReqManualSubstitution process..
     *
     */
    public function testEditLineItems()
    {
    }

    /**
     * Test case for getDuplicateOrderById
     *
     * Get a duplicated an order by id.
     *
     */
    public function testGetDuplicateOrderById()
    {
    }

    /**
     * Test case for getOrderByFilter
     *
     * Search orders by filter.
     *
     */
    public function testGetOrderByFilter()
    {
    }

    /**
     * Test case for getOrderById
     *
     * Get an order by id.
     *
     */
    public function testGetOrderById()
    {
    }

    /**
     * Test case for getOrderFiles
     *
     * Get the files for an order..
     *
     */
    public function testGetOrderFiles()
    {
    }

    /**
     * Test case for getOrderPackData
     *
     * Run the Get Order Pack Data method..
     *
     */
    public function testGetOrderPackData()
    {
    }

    /**
     * Test case for getOrderTags
     *
     * Get the tags for an order..
     *
     */
    public function testGetOrderTags()
    {
    }

    /**
     * Test case for getOrderWarehouseFulfillmentData
     *
     * Run the Get Order Warehouse Fulfillment Plan method..
     *
     */
    public function testGetOrderWarehouseFulfillmentData()
    {
    }

    /**
     * Test case for runFulfillmentPlan
     *
     * Run the RunFulfillmentPlan process..
     *
     */
    public function testRunFulfillmentPlan()
    {
    }

    /**
     * Test case for updateOrder
     *
     * Update an order.
     *
     */
    public function testUpdateOrder()
    {
    }

    /**
     * Test case for updateOrderCustomFields
     *
     * Update an order custom fields.
     *
     */
    public function testUpdateOrderCustomFields()
    {
    }
}
