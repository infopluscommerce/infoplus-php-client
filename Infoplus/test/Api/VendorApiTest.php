<?php
/**
 * VendorApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Infoplus API
 *
 * Infoplus API.
 *
 * OpenAPI spec version: beta
 * Contact: api@infopluscommerce.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Infoplus;

use \Infoplus\Configuration;
use \Infoplus\ApiException;
use \Infoplus\ObjectSerializer;

/**
 * VendorApiTest Class Doc Comment
 *
 * @category Class
 * @package  Infoplus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class VendorApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addVendor
     *
     * Create a vendor.
     *
     */
    public function testAddVendor()
    {
    }

    /**
     * Test case for addVendorAudit
     *
     * Add new audit for a vendor.
     *
     */
    public function testAddVendorAudit()
    {
    }

    /**
     * Test case for addVendorFile
     *
     * Attach a file to a vendor.
     *
     */
    public function testAddVendorFile()
    {
    }

    /**
     * Test case for addVendorFileByURL
     *
     * Attach a file to a vendor by URL..
     *
     */
    public function testAddVendorFileByURL()
    {
    }

    /**
     * Test case for addVendorTag
     *
     * Add new tags for a vendor..
     *
     */
    public function testAddVendorTag()
    {
    }

    /**
     * Test case for deleteVendor
     *
     * Delete a vendor.
     *
     */
    public function testDeleteVendor()
    {
    }

    /**
     * Test case for deleteVendorFile
     *
     * Delete a file for a vendor..
     *
     */
    public function testDeleteVendorFile()
    {
    }

    /**
     * Test case for deleteVendorTag
     *
     * Delete a tag for a vendor..
     *
     */
    public function testDeleteVendorTag()
    {
    }

    /**
     * Test case for getDuplicateVendorById
     *
     * Get a duplicated a vendor by id.
     *
     */
    public function testGetDuplicateVendorById()
    {
    }

    /**
     * Test case for getVendorByFilter
     *
     * Search vendors by filter.
     *
     */
    public function testGetVendorByFilter()
    {
    }

    /**
     * Test case for getVendorById
     *
     * Get a vendor by id.
     *
     */
    public function testGetVendorById()
    {
    }

    /**
     * Test case for getVendorFiles
     *
     * Get the files for a vendor..
     *
     */
    public function testGetVendorFiles()
    {
    }

    /**
     * Test case for getVendorTags
     *
     * Get the tags for a vendor..
     *
     */
    public function testGetVendorTags()
    {
    }

    /**
     * Test case for updateVendor
     *
     * Update a vendor.
     *
     */
    public function testUpdateVendor()
    {
    }

    /**
     * Test case for updateVendorCustomFields
     *
     * Update a vendor custom fields.
     *
     */
    public function testUpdateVendorCustomFields()
    {
    }
}
